/*! For license information please see bundle-index.js.LICENSE.txt */
(()=>{var e={669:(e,t,n)=>{e.exports=n(609)},592:(e,t,n)=>{"use strict";var r=n(867),o=n(26),a=n(372),l=n(327),i=n(97),u=n(109),c=n(985),s=n(61),f=n(874),d=n(263);e.exports=function(e){return new Promise((function(t,n){var p,h=e.data,m=e.headers,y=e.responseType;function v(){e.cancelToken&&e.cancelToken.unsubscribe(p),e.signal&&e.signal.removeEventListener("abort",p)}r.isFormData(h)&&delete m["Content-Type"];var g=new XMLHttpRequest;if(e.auth){var b=e.auth.username||"",w=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";m.Authorization="Basic "+btoa(b+":"+w)}var k=i(e.baseURL,e.url);function E(){if(g){var r="getAllResponseHeaders"in g?u(g.getAllResponseHeaders()):null,a={data:y&&"text"!==y&&"json"!==y?g.response:g.responseText,status:g.status,statusText:g.statusText,headers:r,config:e,request:g};o((function(e){t(e),v()}),(function(e){n(e),v()}),a),g=null}}if(g.open(e.method.toUpperCase(),l(k,e.params,e.paramsSerializer),!0),g.timeout=e.timeout,"onloadend"in g?g.onloadend=E:g.onreadystatechange=function(){g&&4===g.readyState&&(0!==g.status||g.responseURL&&0===g.responseURL.indexOf("file:"))&&setTimeout(E)},g.onabort=function(){g&&(n(s("Request aborted",e,"ECONNABORTED",g)),g=null)},g.onerror=function(){n(s("Network Error",e,null,g)),g=null},g.ontimeout=function(){var t=e.timeout?"timeout of "+e.timeout+"ms exceeded":"timeout exceeded",r=e.transitional||f;e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),n(s(t,e,r.clarifyTimeoutError?"ETIMEDOUT":"ECONNABORTED",g)),g=null},r.isStandardBrowserEnv()){var S=(e.withCredentials||c(k))&&e.xsrfCookieName?a.read(e.xsrfCookieName):void 0;S&&(m[e.xsrfHeaderName]=S)}"setRequestHeader"in g&&r.forEach(m,(function(e,t){void 0===h&&"content-type"===t.toLowerCase()?delete m[t]:g.setRequestHeader(t,e)})),r.isUndefined(e.withCredentials)||(g.withCredentials=!!e.withCredentials),y&&"json"!==y&&(g.responseType=e.responseType),"function"==typeof e.onDownloadProgress&&g.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&g.upload&&g.upload.addEventListener("progress",e.onUploadProgress),(e.cancelToken||e.signal)&&(p=function(e){g&&(n(!e||e&&e.type?new d("canceled"):e),g.abort(),g=null)},e.cancelToken&&e.cancelToken.subscribe(p),e.signal&&(e.signal.aborted?p():e.signal.addEventListener("abort",p))),h||(h=null),g.send(h)}))}},609:(e,t,n)=>{"use strict";var r=n(867),o=n(849),a=n(321),l=n(185),i=function e(t){var n=new a(t),i=o(a.prototype.request,n);return r.extend(i,a.prototype,n),r.extend(i,n),i.create=function(n){return e(l(t,n))},i}(n(546));i.Axios=a,i.Cancel=n(263),i.CancelToken=n(972),i.isCancel=n(502),i.VERSION=n(288).version,i.all=function(e){return Promise.all(e)},i.spread=n(713),i.isAxiosError=n(268),e.exports=i,e.exports.default=i},263:e=>{"use strict";function t(e){this.message=e}t.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},t.prototype.__CANCEL__=!0,e.exports=t},972:(e,t,n)=>{"use strict";var r=n(263);function o(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise((function(e){t=e}));var n=this;this.promise.then((function(e){if(n._listeners){var t,r=n._listeners.length;for(t=0;t<r;t++)n._listeners[t](e);n._listeners=null}})),this.promise.then=function(e){var t,r=new Promise((function(e){n.subscribe(e),t=e})).then(e);return r.cancel=function(){n.unsubscribe(t)},r},e((function(e){n.reason||(n.reason=new r(e),t(n.reason))}))}o.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},o.prototype.subscribe=function(e){this.reason?e(this.reason):this._listeners?this._listeners.push(e):this._listeners=[e]},o.prototype.unsubscribe=function(e){if(this._listeners){var t=this._listeners.indexOf(e);-1!==t&&this._listeners.splice(t,1)}},o.source=function(){var e;return{token:new o((function(t){e=t})),cancel:e}},e.exports=o},502:e=>{"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},321:(e,t,n)=>{"use strict";var r=n(867),o=n(327),a=n(782),l=n(572),i=n(185),u=n(875),c=u.validators;function s(e){this.defaults=e,this.interceptors={request:new a,response:new a}}s.prototype.request=function(e,t){"string"==typeof e?(t=t||{}).url=e:t=e||{},(t=i(this.defaults,t)).method?t.method=t.method.toLowerCase():this.defaults.method?t.method=this.defaults.method.toLowerCase():t.method="get";var n=t.transitional;void 0!==n&&u.assertOptions(n,{silentJSONParsing:c.transitional(c.boolean),forcedJSONParsing:c.transitional(c.boolean),clarifyTimeoutError:c.transitional(c.boolean)},!1);var r=[],o=!0;this.interceptors.request.forEach((function(e){"function"==typeof e.runWhen&&!1===e.runWhen(t)||(o=o&&e.synchronous,r.unshift(e.fulfilled,e.rejected))}));var a,s=[];if(this.interceptors.response.forEach((function(e){s.push(e.fulfilled,e.rejected)})),!o){var f=[l,void 0];for(Array.prototype.unshift.apply(f,r),f=f.concat(s),a=Promise.resolve(t);f.length;)a=a.then(f.shift(),f.shift());return a}for(var d=t;r.length;){var p=r.shift(),h=r.shift();try{d=p(d)}catch(e){h(e);break}}try{a=l(d)}catch(e){return Promise.reject(e)}for(;s.length;)a=a.then(s.shift(),s.shift());return a},s.prototype.getUri=function(e){return e=i(this.defaults,e),o(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")},r.forEach(["delete","get","head","options"],(function(e){s.prototype[e]=function(t,n){return this.request(i(n||{},{method:e,url:t,data:(n||{}).data}))}})),r.forEach(["post","put","patch"],(function(e){s.prototype[e]=function(t,n,r){return this.request(i(r||{},{method:e,url:t,data:n}))}})),e.exports=s},782:(e,t,n)=>{"use strict";var r=n(867);function o(){this.handlers=[]}o.prototype.use=function(e,t,n){return this.handlers.push({fulfilled:e,rejected:t,synchronous:!!n&&n.synchronous,runWhen:n?n.runWhen:null}),this.handlers.length-1},o.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},o.prototype.forEach=function(e){r.forEach(this.handlers,(function(t){null!==t&&e(t)}))},e.exports=o},97:(e,t,n)=>{"use strict";var r=n(793),o=n(303);e.exports=function(e,t){return e&&!r(t)?o(e,t):t}},61:(e,t,n)=>{"use strict";var r=n(481);e.exports=function(e,t,n,o,a){var l=new Error(e);return r(l,t,n,o,a)}},572:(e,t,n)=>{"use strict";var r=n(867),o=n(527),a=n(502),l=n(546),i=n(263);function u(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new i("canceled")}e.exports=function(e){return u(e),e.headers=e.headers||{},e.data=o.call(e,e.data,e.headers,e.transformRequest),e.headers=r.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),r.forEach(["delete","get","head","post","put","patch","common"],(function(t){delete e.headers[t]})),(e.adapter||l.adapter)(e).then((function(t){return u(e),t.data=o.call(e,t.data,t.headers,e.transformResponse),t}),(function(t){return a(t)||(u(e),t&&t.response&&(t.response.data=o.call(e,t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)}))}},481:e=>{"use strict";e.exports=function(e,t,n,r,o){return e.config=t,n&&(e.code=n),e.request=r,e.response=o,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}},e}},185:(e,t,n)=>{"use strict";var r=n(867);e.exports=function(e,t){t=t||{};var n={};function o(e,t){return r.isPlainObject(e)&&r.isPlainObject(t)?r.merge(e,t):r.isPlainObject(t)?r.merge({},t):r.isArray(t)?t.slice():t}function a(n){return r.isUndefined(t[n])?r.isUndefined(e[n])?void 0:o(void 0,e[n]):o(e[n],t[n])}function l(e){if(!r.isUndefined(t[e]))return o(void 0,t[e])}function i(n){return r.isUndefined(t[n])?r.isUndefined(e[n])?void 0:o(void 0,e[n]):o(void 0,t[n])}function u(n){return n in t?o(e[n],t[n]):n in e?o(void 0,e[n]):void 0}var c={url:l,method:l,data:l,baseURL:i,transformRequest:i,transformResponse:i,paramsSerializer:i,timeout:i,timeoutMessage:i,withCredentials:i,adapter:i,responseType:i,xsrfCookieName:i,xsrfHeaderName:i,onUploadProgress:i,onDownloadProgress:i,decompress:i,maxContentLength:i,maxBodyLength:i,transport:i,httpAgent:i,httpsAgent:i,cancelToken:i,socketPath:i,responseEncoding:i,validateStatus:u};return r.forEach(Object.keys(e).concat(Object.keys(t)),(function(e){var t=c[e]||a,o=t(e);r.isUndefined(o)&&t!==u||(n[e]=o)})),n}},26:(e,t,n)=>{"use strict";var r=n(61);e.exports=function(e,t,n){var o=n.config.validateStatus;n.status&&o&&!o(n.status)?t(r("Request failed with status code "+n.status,n.config,null,n.request,n)):e(n)}},527:(e,t,n)=>{"use strict";var r=n(867),o=n(546);e.exports=function(e,t,n){var a=this||o;return r.forEach(n,(function(n){e=n.call(a,e,t)})),e}},546:(e,t,n)=>{"use strict";var r=n(867),o=n(16),a=n(481),l=n(874),i={"Content-Type":"application/x-www-form-urlencoded"};function u(e,t){!r.isUndefined(e)&&r.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var c,s={transitional:l,adapter:(("undefined"!=typeof XMLHttpRequest||"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process))&&(c=n(592)),c),transformRequest:[function(e,t){return o(t,"Accept"),o(t,"Content-Type"),r.isFormData(e)||r.isArrayBuffer(e)||r.isBuffer(e)||r.isStream(e)||r.isFile(e)||r.isBlob(e)?e:r.isArrayBufferView(e)?e.buffer:r.isURLSearchParams(e)?(u(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):r.isObject(e)||t&&"application/json"===t["Content-Type"]?(u(t,"application/json"),function(e,t,n){if(r.isString(e))try{return(0,JSON.parse)(e),r.trim(e)}catch(e){if("SyntaxError"!==e.name)throw e}return(0,JSON.stringify)(e)}(e)):e}],transformResponse:[function(e){var t=this.transitional||s.transitional,n=t&&t.silentJSONParsing,o=t&&t.forcedJSONParsing,l=!n&&"json"===this.responseType;if(l||o&&r.isString(e)&&e.length)try{return JSON.parse(e)}catch(e){if(l){if("SyntaxError"===e.name)throw a(e,this,"E_JSON_PARSE");throw e}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};r.forEach(["delete","get","head"],(function(e){s.headers[e]={}})),r.forEach(["post","put","patch"],(function(e){s.headers[e]=r.merge(i)})),e.exports=s},874:e=>{"use strict";e.exports={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1}},288:e=>{e.exports={version:"0.26.1"}},849:e=>{"use strict";e.exports=function(e,t){return function(){for(var n=new Array(arguments.length),r=0;r<n.length;r++)n[r]=arguments[r];return e.apply(t,n)}}},327:(e,t,n)=>{"use strict";var r=n(867);function o(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,t,n){if(!t)return e;var a;if(n)a=n(t);else if(r.isURLSearchParams(t))a=t.toString();else{var l=[];r.forEach(t,(function(e,t){null!=e&&(r.isArray(e)?t+="[]":e=[e],r.forEach(e,(function(e){r.isDate(e)?e=e.toISOString():r.isObject(e)&&(e=JSON.stringify(e)),l.push(o(t)+"="+o(e))})))})),a=l.join("&")}if(a){var i=e.indexOf("#");-1!==i&&(e=e.slice(0,i)),e+=(-1===e.indexOf("?")?"?":"&")+a}return e}},303:e=>{"use strict";e.exports=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}},372:(e,t,n)=>{"use strict";var r=n(867);e.exports=r.isStandardBrowserEnv()?{write:function(e,t,n,o,a,l){var i=[];i.push(e+"="+encodeURIComponent(t)),r.isNumber(n)&&i.push("expires="+new Date(n).toGMTString()),r.isString(o)&&i.push("path="+o),r.isString(a)&&i.push("domain="+a),!0===l&&i.push("secure"),document.cookie=i.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},793:e=>{"use strict";e.exports=function(e){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(e)}},268:(e,t,n)=>{"use strict";var r=n(867);e.exports=function(e){return r.isObject(e)&&!0===e.isAxiosError}},985:(e,t,n)=>{"use strict";var r=n(867);e.exports=r.isStandardBrowserEnv()?function(){var e,t=/(msie|trident)/i.test(navigator.userAgent),n=document.createElement("a");function o(e){var r=e;return t&&(n.setAttribute("href",r),r=n.href),n.setAttribute("href",r),{href:n.href,protocol:n.protocol?n.protocol.replace(/:$/,""):"",host:n.host,search:n.search?n.search.replace(/^\?/,""):"",hash:n.hash?n.hash.replace(/^#/,""):"",hostname:n.hostname,port:n.port,pathname:"/"===n.pathname.charAt(0)?n.pathname:"/"+n.pathname}}return e=o(window.location.href),function(t){var n=r.isString(t)?o(t):t;return n.protocol===e.protocol&&n.host===e.host}}():function(){return!0}},16:(e,t,n)=>{"use strict";var r=n(867);e.exports=function(e,t){r.forEach(e,(function(n,r){r!==t&&r.toUpperCase()===t.toUpperCase()&&(e[t]=n,delete e[r])}))}},109:(e,t,n)=>{"use strict";var r=n(867),o=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var t,n,a,l={};return e?(r.forEach(e.split("\n"),(function(e){if(a=e.indexOf(":"),t=r.trim(e.substr(0,a)).toLowerCase(),n=r.trim(e.substr(a+1)),t){if(l[t]&&o.indexOf(t)>=0)return;l[t]="set-cookie"===t?(l[t]?l[t]:[]).concat([n]):l[t]?l[t]+", "+n:n}})),l):l}},713:e=>{"use strict";e.exports=function(e){return function(t){return e.apply(null,t)}}},875:(e,t,n)=>{"use strict";var r=n(288).version,o={};["object","boolean","number","function","string","symbol"].forEach((function(e,t){o[e]=function(n){return typeof n===e||"a"+(t<1?"n ":" ")+e}}));var a={};o.transitional=function(e,t,n){function o(e,t){return"[Axios v"+r+"] Transitional option '"+e+"'"+t+(n?". "+n:"")}return function(n,r,l){if(!1===e)throw new Error(o(r," has been removed"+(t?" in "+t:"")));return t&&!a[r]&&(a[r]=!0,console.warn(o(r," has been deprecated since v"+t+" and will be removed in the near future"))),!e||e(n,r,l)}},e.exports={assertOptions:function(e,t,n){if("object"!=typeof e)throw new TypeError("options must be an object");for(var r=Object.keys(e),o=r.length;o-- >0;){var a=r[o],l=t[a];if(l){var i=e[a],u=void 0===i||l(i,a,e);if(!0!==u)throw new TypeError("option "+a+" must be "+u)}else if(!0!==n)throw Error("Unknown option "+a)}},validators:o}},867:(e,t,n)=>{"use strict";var r=n(849),o=Object.prototype.toString;function a(e){return Array.isArray(e)}function l(e){return void 0===e}function i(e){return"[object ArrayBuffer]"===o.call(e)}function u(e){return null!==e&&"object"==typeof e}function c(e){if("[object Object]"!==o.call(e))return!1;var t=Object.getPrototypeOf(e);return null===t||t===Object.prototype}function s(e){return"[object Function]"===o.call(e)}function f(e,t){if(null!=e)if("object"!=typeof e&&(e=[e]),a(e))for(var n=0,r=e.length;n<r;n++)t.call(null,e[n],n,e);else for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.call(null,e[o],o,e)}e.exports={isArray:a,isArrayBuffer:i,isBuffer:function(e){return null!==e&&!l(e)&&null!==e.constructor&&!l(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){return"[object FormData]"===o.call(e)},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&i(e.buffer)},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:u,isPlainObject:c,isUndefined:l,isDate:function(e){return"[object Date]"===o.call(e)},isFile:function(e){return"[object File]"===o.call(e)},isBlob:function(e){return"[object Blob]"===o.call(e)},isFunction:s,isStream:function(e){return u(e)&&s(e.pipe)},isURLSearchParams:function(e){return"[object URLSearchParams]"===o.call(e)},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&"undefined"!=typeof window&&"undefined"!=typeof document},forEach:f,merge:function e(){var t={};function n(n,r){c(t[r])&&c(n)?t[r]=e(t[r],n):c(n)?t[r]=e({},n):a(n)?t[r]=n.slice():t[r]=n}for(var r=0,o=arguments.length;r<o;r++)f(arguments[r],n);return t},extend:function(e,t,n){return f(t,(function(t,o){e[o]=n&&"function"==typeof t?r(t,n):t})),e},trim:function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")},stripBOM:function(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),e}}},411:e=>{function t(){var e={},n={},r="";function o(n){t.each(n.split(" "),(function(t){e[t]=!!t}))}return t.each([].slice.call(arguments),(function(e){switch(t.getType(e)){case"string":case"number":o(e);break;case"array":o(t.apply(null,e));break;case"element":o(t(e.className||""));break;case"nodelist":o(t.apply(null,[].slice.call(e)));break;case"jquery":o(t.apply(null,e.get()));break;case"object":n=t.extend(n,e)}})),e=t.extend(e,n),t.each(e,(function(e,t){e&&(r+=" "+t)})),r.substr(1)}t.setTo=function(e){var n=t.getType(e);return"element"===n&&(e=[e]),"jquery"===n&&(e=e.get()),"nodelist"===n&&(e=[].slice.call(e)),function(){var n=t.apply(null,arguments);t.each(e,(function(e){e.className=n}))}},t.each=function(e,n){var r=t.getType(e);if("array"===r)for(var o=0;o<e.length;o++)n(e[o],o);if("object"===r)for(var a in e)n(e[a],a)},t.getType=function(e){var t=Object.prototype.toString.call(e).slice(8,-1).toLowerCase();return"object"===t&&e.jquery?"jquery":t.indexOf("element")>1?"element":t},t.extend=function(e,n){var r={},o=[e,n];return t.each(o,(function(e){t.each(e,(function(t,n){e.hasOwnProperty(n)&&(r[n]=t)}))})),r},e.exports&&(e.exports=t)},418:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function o(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,a){for(var l,i,u=o(e),c=1;c<arguments.length;c++){for(var s in l=Object(arguments[c]))n.call(l,s)&&(u[s]=l[s]);if(t){i=t(l);for(var f=0;f<i.length;f++)r.call(l,i[f])&&(u[i[f]]=l[i[f]])}}return u}},703:(e,t,n)=>{"use strict";var r=n(414);function o(){}function a(){}a.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,a,l){if(l!==r){var i=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw i.name="Invariant Violation",i}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:a,resetWarningCache:o};return n.PropTypes=n,n}},697:(e,t,n)=>{e.exports=n(703)()},414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},448:(e,t,n)=>{"use strict";var r=n(294),o=n(418),a=n(840);function l(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(l(227));var i=new Set,u={};function c(e,t){s(e,t),s(e+"Capture",t)}function s(e,t){for(u[e]=t,e=0;e<t.length;e++)i.add(t[e])}var f=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p=Object.prototype.hasOwnProperty,h={},m={};function y(e,t,n,r,o,a,l){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=a,this.removeEmptyString=l}var v={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){v[e]=new y(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];v[t]=new y(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){v[e]=new y(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){v[e]=new y(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){v[e]=new y(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){v[e]=new y(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){v[e]=new y(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){v[e]=new y(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){v[e]=new y(e,5,!1,e.toLowerCase(),null,!1,!1)}));var g=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function w(e,t,n,r){var o=v.hasOwnProperty(t)?v[t]:null;(null!==o?0===o.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!p.call(m,e)||!p.call(h,e)&&(d.test(e)?m[e]=!0:(h[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(g,b);v[t]=new y(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(g,b);v[t]=new y(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(g,b);v[t]=new y(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){v[e]=new y(e,1,!1,e.toLowerCase(),null,!1,!1)})),v.xlinkHref=new y("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){v[e]=new y(e,1,!1,e.toLowerCase(),null,!0,!0)}));var k=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,E=60103,S=60106,x=60107,C=60108,_=60114,P=60109,O=60110,N=60112,T=60113,R=60120,j=60115,L=60116,z=60121,D=60128,M=60129,A=60130,I=60131;if("function"==typeof Symbol&&Symbol.for){var F=Symbol.for;E=F("react.element"),S=F("react.portal"),x=F("react.fragment"),C=F("react.strict_mode"),_=F("react.profiler"),P=F("react.provider"),O=F("react.context"),N=F("react.forward_ref"),T=F("react.suspense"),R=F("react.suspense_list"),j=F("react.memo"),L=F("react.lazy"),z=F("react.block"),F("react.scope"),D=F("react.opaque.id"),M=F("react.debug_trace_mode"),A=F("react.offscreen"),I=F("react.legacy_hidden")}var U,B="function"==typeof Symbol&&Symbol.iterator;function V(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=B&&e[B]||e["@@iterator"])?e:null}function W(e){if(void 0===U)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);U=t&&t[1]||""}return"\n"+U+e}var $=!1;function H(e,t){if(!e||$)return"";$=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var o=e.stack.split("\n"),a=r.stack.split("\n"),l=o.length-1,i=a.length-1;1<=l&&0<=i&&o[l]!==a[i];)i--;for(;1<=l&&0<=i;l--,i--)if(o[l]!==a[i]){if(1!==l||1!==i)do{if(l--,0>--i||o[l]!==a[i])return"\n"+o[l].replace(" at new "," at ")}while(1<=l&&0<=i);break}}}finally{$=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?W(e):""}function q(e){switch(e.tag){case 5:return W(e.type);case 16:return W("Lazy");case 13:return W("Suspense");case 19:return W("SuspenseList");case 0:case 2:case 15:return H(e.type,!1);case 11:return H(e.type.render,!1);case 22:return H(e.type._render,!1);case 1:return H(e.type,!0);default:return""}}function Q(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case x:return"Fragment";case S:return"Portal";case _:return"Profiler";case C:return"StrictMode";case T:return"Suspense";case R:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case O:return(e.displayName||"Context")+".Consumer";case P:return(e._context.displayName||"Context")+".Provider";case N:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case j:return Q(e.type);case z:return Q(e._render);case L:t=e._payload,e=e._init;try{return Q(e(t))}catch(e){}}return null}function K(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Y(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function X(e){e._valueTracker||(e._valueTracker=function(e){var t=Y(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function G(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Y(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function J(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Z(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=K(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=K(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?oe(e,t.type,n):t.hasOwnProperty("defaultValue")&&oe(e,t.type,K(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function re(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function oe(e,t,n){"number"===t&&J(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function ae(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function le(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+K(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function ie(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(l(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ue(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(l(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(l(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:K(n)}}function ce(e,t){var n=K(t.value),r=K(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function se(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var fe="http://www.w3.org/1999/xhtml";function de(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function pe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?de(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var he,me,ye=(me=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((he=he||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=he.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return me(e,t)}))}:me);function ve(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ge={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},be=["Webkit","ms","Moz","O"];function we(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ge.hasOwnProperty(e)&&ge[e]?(""+t).trim():t+"px"}function ke(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=we(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(ge).forEach((function(e){be.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ge[t]=ge[e]}))}));var Ee=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Se(e,t){if(t){if(Ee[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(l(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(l(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(l(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(l(62))}}function xe(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Ce(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var _e=null,Pe=null,Oe=null;function Ne(e){if(e=no(e)){if("function"!=typeof _e)throw Error(l(280));var t=e.stateNode;t&&(t=oo(t),_e(e.stateNode,e.type,t))}}function Te(e){Pe?Oe?Oe.push(e):Oe=[e]:Pe=e}function Re(){if(Pe){var e=Pe,t=Oe;if(Oe=Pe=null,Ne(e),t)for(e=0;e<t.length;e++)Ne(t[e])}}function je(e,t){return e(t)}function Le(e,t,n,r,o){return e(t,n,r,o)}function ze(){}var De=je,Me=!1,Ae=!1;function Ie(){null===Pe&&null===Oe||(ze(),Re())}function Fe(e,t){var n=e.stateNode;if(null===n)return null;var r=oo(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(l(231,t,typeof n));return n}var Ue=!1;if(f)try{var Be={};Object.defineProperty(Be,"passive",{get:function(){Ue=!0}}),window.addEventListener("test",Be,Be),window.removeEventListener("test",Be,Be)}catch(me){Ue=!1}function Ve(e,t,n,r,o,a,l,i,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var We=!1,$e=null,He=!1,qe=null,Qe={onError:function(e){We=!0,$e=e}};function Ke(e,t,n,r,o,a,l,i,u){We=!1,$e=null,Ve.apply(Qe,arguments)}function Ye(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Xe(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Ge(e){if(Ye(e)!==e)throw Error(l(188))}function Je(e){if(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ye(e)))throw Error(l(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var a=o.alternate;if(null===a){if(null!==(r=o.return)){n=r;continue}break}if(o.child===a.child){for(a=o.child;a;){if(a===n)return Ge(o),e;if(a===r)return Ge(o),t;a=a.sibling}throw Error(l(188))}if(n.return!==r.return)n=o,r=a;else{for(var i=!1,u=o.child;u;){if(u===n){i=!0,n=o,r=a;break}if(u===r){i=!0,r=o,n=a;break}u=u.sibling}if(!i){for(u=a.child;u;){if(u===n){i=!0,n=a,r=o;break}if(u===r){i=!0,r=a,n=o;break}u=u.sibling}if(!i)throw Error(l(189))}}if(n.alternate!==r)throw Error(l(190))}if(3!==n.tag)throw Error(l(188));return n.stateNode.current===n?e:t}(e),!e)return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function Ze(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var et,tt,nt,rt,ot=!1,at=[],lt=null,it=null,ut=null,ct=new Map,st=new Map,ft=[],dt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function pt(e,t,n,r,o){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:o,targetContainers:[r]}}function ht(e,t){switch(e){case"focusin":case"focusout":lt=null;break;case"dragenter":case"dragleave":it=null;break;case"mouseover":case"mouseout":ut=null;break;case"pointerover":case"pointerout":ct.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":st.delete(t.pointerId)}}function mt(e,t,n,r,o,a){return null===e||e.nativeEvent!==a?(e=pt(t,n,r,o,a),null!==t&&null!==(t=no(t))&&tt(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==o&&-1===t.indexOf(o)&&t.push(o),e)}function yt(e){var t=to(e.target);if(null!==t){var n=Ye(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Xe(n)))return e.blockedOn=t,void rt(e.lanePriority,(function(){a.unstable_runWithPriority(e.priority,(function(){nt(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function vt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Jt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=no(n))&&tt(t),e.blockedOn=n,!1;t.shift()}return!0}function gt(e,t,n){vt(e)&&n.delete(t)}function bt(){for(ot=!1;0<at.length;){var e=at[0];if(null!==e.blockedOn){null!==(e=no(e.blockedOn))&&et(e);break}for(var t=e.targetContainers;0<t.length;){var n=Jt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&at.shift()}null!==lt&&vt(lt)&&(lt=null),null!==it&&vt(it)&&(it=null),null!==ut&&vt(ut)&&(ut=null),ct.forEach(gt),st.forEach(gt)}function wt(e,t){e.blockedOn===t&&(e.blockedOn=null,ot||(ot=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,bt)))}function kt(e){function t(t){return wt(t,e)}if(0<at.length){wt(at[0],e);for(var n=1;n<at.length;n++){var r=at[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==lt&&wt(lt,e),null!==it&&wt(it,e),null!==ut&&wt(ut,e),ct.forEach(t),st.forEach(t),n=0;n<ft.length;n++)(r=ft[n]).blockedOn===e&&(r.blockedOn=null);for(;0<ft.length&&null===(n=ft[0]).blockedOn;)yt(n),null===n.blockedOn&&ft.shift()}function Et(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var St={animationend:Et("Animation","AnimationEnd"),animationiteration:Et("Animation","AnimationIteration"),animationstart:Et("Animation","AnimationStart"),transitionend:Et("Transition","TransitionEnd")},xt={},Ct={};function _t(e){if(xt[e])return xt[e];if(!St[e])return e;var t,n=St[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ct)return xt[e]=n[t];return e}f&&(Ct=document.createElement("div").style,"AnimationEvent"in window||(delete St.animationend.animation,delete St.animationiteration.animation,delete St.animationstart.animation),"TransitionEvent"in window||delete St.transitionend.transition);var Pt=_t("animationend"),Ot=_t("animationiteration"),Nt=_t("animationstart"),Tt=_t("transitionend"),Rt=new Map,jt=new Map,Lt=["abort","abort",Pt,"animationEnd",Ot,"animationIteration",Nt,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Tt,"transitionEnd","waiting","waiting"];function zt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],o=e[n+1];o="on"+(o[0].toUpperCase()+o.slice(1)),jt.set(r,t),Rt.set(r,o),c(o,[r])}}(0,a.unstable_now)();var Dt=8;function Mt(e){if(0!=(1&e))return Dt=15,1;if(0!=(2&e))return Dt=14,2;if(0!=(4&e))return Dt=13,4;var t=24&e;return 0!==t?(Dt=12,t):0!=(32&e)?(Dt=11,32):0!=(t=192&e)?(Dt=10,t):0!=(256&e)?(Dt=9,256):0!=(t=3584&e)?(Dt=8,t):0!=(4096&e)?(Dt=7,4096):0!=(t=4186112&e)?(Dt=6,t):0!=(t=62914560&e)?(Dt=5,t):67108864&e?(Dt=4,67108864):0!=(134217728&e)?(Dt=3,134217728):0!=(t=805306368&e)?(Dt=2,t):0!=(1073741824&e)?(Dt=1,1073741824):(Dt=8,e)}function At(e,t){var n=e.pendingLanes;if(0===n)return Dt=0;var r=0,o=0,a=e.expiredLanes,l=e.suspendedLanes,i=e.pingedLanes;if(0!==a)r=a,o=Dt=15;else if(0!=(a=134217727&n)){var u=a&~l;0!==u?(r=Mt(u),o=Dt):0!=(i&=a)&&(r=Mt(i),o=Dt)}else 0!=(a=n&~l)?(r=Mt(a),o=Dt):0!==i&&(r=Mt(i),o=Dt);if(0===r)return 0;if(r=n&((0>(r=31-Wt(r))?0:1<<r)<<1)-1,0!==t&&t!==r&&0==(t&l)){if(Mt(t),o<=Dt)return t;Dt=o}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)o=1<<(n=31-Wt(t)),r|=e[n],t&=~o;return r}function It(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Ft(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Ut(24&~t))?Ft(10,t):e;case 10:return 0===(e=Ut(192&~t))?Ft(8,t):e;case 8:return 0===(e=Ut(3584&~t))&&0===(e=Ut(4186112&~t))&&(e=512),e;case 2:return 0===(t=Ut(805306368&~t))&&(t=268435456),t}throw Error(l(358,e))}function Ut(e){return e&-e}function Bt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Vt(e,t,n){e.pendingLanes|=t;var r=t-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[t=31-Wt(t)]=n}var Wt=Math.clz32?Math.clz32:function(e){return 0===e?32:31-($t(e)/Ht|0)|0},$t=Math.log,Ht=Math.LN2,qt=a.unstable_UserBlockingPriority,Qt=a.unstable_runWithPriority,Kt=!0;function Yt(e,t,n,r){Me||ze();var o=Gt,a=Me;Me=!0;try{Le(o,e,t,n,r)}finally{(Me=a)||Ie()}}function Xt(e,t,n,r){Qt(qt,Gt.bind(null,e,t,n,r))}function Gt(e,t,n,r){var o;if(Kt)if((o=0==(4&t))&&0<at.length&&-1<dt.indexOf(e))e=pt(null,e,t,n,r),at.push(e);else{var a=Jt(e,t,n,r);if(null===a)o&&ht(e,r);else{if(o){if(-1<dt.indexOf(e))return e=pt(a,e,t,n,r),void at.push(e);if(function(e,t,n,r,o){switch(t){case"focusin":return lt=mt(lt,e,t,n,r,o),!0;case"dragenter":return it=mt(it,e,t,n,r,o),!0;case"mouseover":return ut=mt(ut,e,t,n,r,o),!0;case"pointerover":var a=o.pointerId;return ct.set(a,mt(ct.get(a)||null,e,t,n,r,o)),!0;case"gotpointercapture":return a=o.pointerId,st.set(a,mt(st.get(a)||null,e,t,n,r,o)),!0}return!1}(a,e,t,n,r))return;ht(e,r)}zr(e,t,r,null,n)}}}function Jt(e,t,n,r){var o=Ce(r);if(null!==(o=to(o))){var a=Ye(o);if(null===a)o=null;else{var l=a.tag;if(13===l){if(null!==(o=Xe(a)))return o;o=null}else if(3===l){if(a.stateNode.hydrate)return 3===a.tag?a.stateNode.containerInfo:null;o=null}else a!==o&&(o=null)}}return zr(e,t,r,o,n),null}var Zt=null,en=null,tn=null;function nn(){if(tn)return tn;var e,t,n=en,r=n.length,o="value"in Zt?Zt.value:Zt.textContent,a=o.length;for(e=0;e<r&&n[e]===o[e];e++);var l=r-e;for(t=1;t<=l&&n[r-t]===o[a-t];t++);return tn=o.slice(e,1<t?1-t:void 0)}function rn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function on(){return!0}function an(){return!1}function ln(e){function t(t,n,r,o,a){for(var l in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=o,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(l)&&(t=e[l],this[l]=t?t(o):o[l]);return this.isDefaultPrevented=(null!=o.defaultPrevented?o.defaultPrevented:!1===o.returnValue)?on:an,this.isPropagationStopped=an,this}return o(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=on)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=on)},persist:function(){},isPersistent:on}),t}var un,cn,sn,fn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},dn=ln(fn),pn=o({},fn,{view:0,detail:0}),hn=ln(pn),mn=o({},pn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Pn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==sn&&(sn&&"mousemove"===e.type?(un=e.screenX-sn.screenX,cn=e.screenY-sn.screenY):cn=un=0,sn=e),un)},movementY:function(e){return"movementY"in e?e.movementY:cn}}),yn=ln(mn),vn=ln(o({},mn,{dataTransfer:0})),gn=ln(o({},pn,{relatedTarget:0})),bn=ln(o({},fn,{animationName:0,elapsedTime:0,pseudoElement:0})),wn=o({},fn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),kn=ln(wn),En=ln(o({},fn,{data:0})),Sn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},xn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Cn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function _n(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Cn[e])&&!!t[e]}function Pn(){return _n}var On=o({},pn,{key:function(e){if(e.key){var t=Sn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=rn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?xn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Pn,charCode:function(e){return"keypress"===e.type?rn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?rn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Nn=ln(On),Tn=ln(o({},mn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Rn=ln(o({},pn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Pn})),jn=ln(o({},fn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Ln=o({},mn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),zn=ln(Ln),Dn=[9,13,27,32],Mn=f&&"CompositionEvent"in window,An=null;f&&"documentMode"in document&&(An=document.documentMode);var In=f&&"TextEvent"in window&&!An,Fn=f&&(!Mn||An&&8<An&&11>=An),Un=String.fromCharCode(32),Bn=!1;function Vn(e,t){switch(e){case"keyup":return-1!==Dn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Wn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var $n=!1,Hn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function qn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Hn[e.type]:"textarea"===t}function Qn(e,t,n,r){Te(r),0<(t=Mr(t,"onChange")).length&&(n=new dn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Kn=null,Yn=null;function Xn(e){Or(e,0)}function Gn(e){if(G(ro(e)))return e}function Jn(e,t){if("change"===e)return t}var Zn=!1;if(f){var er;if(f){var tr="oninput"in document;if(!tr){var nr=document.createElement("div");nr.setAttribute("oninput","return;"),tr="function"==typeof nr.oninput}er=tr}else er=!1;Zn=er&&(!document.documentMode||9<document.documentMode)}function rr(){Kn&&(Kn.detachEvent("onpropertychange",or),Yn=Kn=null)}function or(e){if("value"===e.propertyName&&Gn(Yn)){var t=[];if(Qn(t,Yn,e,Ce(e)),e=Xn,Me)e(t);else{Me=!0;try{je(e,t)}finally{Me=!1,Ie()}}}}function ar(e,t,n){"focusin"===e?(rr(),Yn=n,(Kn=t).attachEvent("onpropertychange",or)):"focusout"===e&&rr()}function lr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Gn(Yn)}function ir(e,t){if("click"===e)return Gn(t)}function ur(e,t){if("input"===e||"change"===e)return Gn(t)}var cr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},sr=Object.prototype.hasOwnProperty;function fr(e,t){if(cr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!sr.call(t,n[r])||!cr(e[n[r]],t[n[r]]))return!1;return!0}function dr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function pr(e,t){var n,r=dr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=dr(r)}}function hr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?hr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function mr(){for(var e=window,t=J();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=J((e=t.contentWindow).document)}return t}function yr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var vr=f&&"documentMode"in document&&11>=document.documentMode,gr=null,br=null,wr=null,kr=!1;function Er(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;kr||null==gr||gr!==J(r)||(r="selectionStart"in(r=gr)&&yr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},wr&&fr(wr,r)||(wr=r,0<(r=Mr(br,"onSelect")).length&&(t=new dn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=gr)))}zt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),zt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),zt(Lt,2);for(var Sr="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),xr=0;xr<Sr.length;xr++)jt.set(Sr[xr],0);s("onMouseEnter",["mouseout","mouseover"]),s("onMouseLeave",["mouseout","mouseover"]),s("onPointerEnter",["pointerout","pointerover"]),s("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Cr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),_r=new Set("cancel close invalid load scroll toggle".split(" ").concat(Cr));function Pr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,o,a,i,u,c){if(Ke.apply(this,arguments),We){if(!We)throw Error(l(198));var s=$e;We=!1,$e=null,He||(He=!0,qe=s)}}(r,t,void 0,e),e.currentTarget=null}function Or(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],o=r.event;r=r.listeners;e:{var a=void 0;if(t)for(var l=r.length-1;0<=l;l--){var i=r[l],u=i.instance,c=i.currentTarget;if(i=i.listener,u!==a&&o.isPropagationStopped())break e;Pr(o,i,c),a=u}else for(l=0;l<r.length;l++){if(u=(i=r[l]).instance,c=i.currentTarget,i=i.listener,u!==a&&o.isPropagationStopped())break e;Pr(o,i,c),a=u}}}if(He)throw e=qe,He=!1,qe=null,e}function Nr(e,t){var n=ao(t),r=e+"__bubble";n.has(r)||(Lr(t,e,2,!1),n.add(r))}var Tr="_reactListening"+Math.random().toString(36).slice(2);function Rr(e){e[Tr]||(e[Tr]=!0,i.forEach((function(t){_r.has(t)||jr(t,!1,e,null),jr(t,!0,e,null)})))}function jr(e,t,n,r){var o=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,a=n;if("selectionchange"===e&&9!==n.nodeType&&(a=n.ownerDocument),null!==r&&!t&&_r.has(e)){if("scroll"!==e)return;o|=2,a=r}var l=ao(a),i=e+"__"+(t?"capture":"bubble");l.has(i)||(t&&(o|=4),Lr(a,e,o,t),l.add(i))}function Lr(e,t,n,r){var o=jt.get(t);switch(void 0===o?2:o){case 0:o=Yt;break;case 1:o=Xt;break;default:o=Gt}n=o.bind(null,t,n,e),o=void 0,!Ue||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(o=!0),r?void 0!==o?e.addEventListener(t,n,{capture:!0,passive:o}):e.addEventListener(t,n,!0):void 0!==o?e.addEventListener(t,n,{passive:o}):e.addEventListener(t,n,!1)}function zr(e,t,n,r,o){var a=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var l=r.tag;if(3===l||4===l){var i=r.stateNode.containerInfo;if(i===o||8===i.nodeType&&i.parentNode===o)break;if(4===l)for(l=r.return;null!==l;){var u=l.tag;if((3===u||4===u)&&((u=l.stateNode.containerInfo)===o||8===u.nodeType&&u.parentNode===o))return;l=l.return}for(;null!==i;){if(null===(l=to(i)))return;if(5===(u=l.tag)||6===u){r=a=l;continue e}i=i.parentNode}}r=r.return}!function(e,t,n){if(Ae)return e();Ae=!0;try{De(e,t,n)}finally{Ae=!1,Ie()}}((function(){var r=a,o=Ce(n),l=[];e:{var i=Rt.get(e);if(void 0!==i){var u=dn,c=e;switch(e){case"keypress":if(0===rn(n))break e;case"keydown":case"keyup":u=Nn;break;case"focusin":c="focus",u=gn;break;case"focusout":c="blur",u=gn;break;case"beforeblur":case"afterblur":u=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=yn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=vn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Rn;break;case Pt:case Ot:case Nt:u=bn;break;case Tt:u=jn;break;case"scroll":u=hn;break;case"wheel":u=zn;break;case"copy":case"cut":case"paste":u=kn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=Tn}var s=0!=(4&t),f=!s&&"scroll"===e,d=s?null!==i?i+"Capture":null:i;s=[];for(var p,h=r;null!==h;){var m=(p=h).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&null!=(m=Fe(h,d))&&s.push(Dr(h,m,p))),f)break;h=h.return}0<s.length&&(i=new u(i,c,null,n,o),l.push({event:i,listeners:s}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(c=n.relatedTarget||n.fromElement)||!to(c)&&!c[Zr])&&(u||i)&&(i=o.window===o?o:(i=o.ownerDocument)?i.defaultView||i.parentWindow:window,u?(u=r,null!==(c=(c=n.relatedTarget||n.toElement)?to(c):null)&&(c!==(f=Ye(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(u=null,c=r),u!==c)){if(s=yn,m="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(s=Tn,m="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==u?i:ro(u),p=null==c?i:ro(c),(i=new s(m,h+"leave",u,n,o)).target=f,i.relatedTarget=p,m=null,to(o)===r&&((s=new s(d,h+"enter",c,n,o)).target=p,s.relatedTarget=f,m=s),f=m,u&&c)e:{for(d=c,h=0,p=s=u;p;p=Ar(p))h++;for(p=0,m=d;m;m=Ar(m))p++;for(;0<h-p;)s=Ar(s),h--;for(;0<p-h;)d=Ar(d),p--;for(;h--;){if(s===d||null!==d&&s===d.alternate)break e;s=Ar(s),d=Ar(d)}s=null}else s=null;null!==u&&Ir(l,i,u,s,!1),null!==c&&null!==f&&Ir(l,f,c,s,!0)}if("select"===(u=(i=r?ro(r):window).nodeName&&i.nodeName.toLowerCase())||"input"===u&&"file"===i.type)var y=Jn;else if(qn(i))if(Zn)y=ur;else{y=lr;var v=ar}else(u=i.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(y=ir);switch(y&&(y=y(e,r))?Qn(l,y,n,o):(v&&v(e,i,r),"focusout"===e&&(v=i._wrapperState)&&v.controlled&&"number"===i.type&&oe(i,"number",i.value)),v=r?ro(r):window,e){case"focusin":(qn(v)||"true"===v.contentEditable)&&(gr=v,br=r,wr=null);break;case"focusout":wr=br=gr=null;break;case"mousedown":kr=!0;break;case"contextmenu":case"mouseup":case"dragend":kr=!1,Er(l,n,o);break;case"selectionchange":if(vr)break;case"keydown":case"keyup":Er(l,n,o)}var g;if(Mn)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else $n?Vn(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(Fn&&"ko"!==n.locale&&($n||"onCompositionStart"!==b?"onCompositionEnd"===b&&$n&&(g=nn()):(en="value"in(Zt=o)?Zt.value:Zt.textContent,$n=!0)),0<(v=Mr(r,b)).length&&(b=new En(b,e,null,n,o),l.push({event:b,listeners:v}),(g||null!==(g=Wn(n)))&&(b.data=g))),(g=In?function(e,t){switch(e){case"compositionend":return Wn(t);case"keypress":return 32!==t.which?null:(Bn=!0,Un);case"textInput":return(e=t.data)===Un&&Bn?null:e;default:return null}}(e,n):function(e,t){if($n)return"compositionend"===e||!Mn&&Vn(e,t)?(e=nn(),tn=en=Zt=null,$n=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Fn&&"ko"!==t.locale?null:t.data}}(e,n))&&0<(r=Mr(r,"onBeforeInput")).length&&(o=new En("onBeforeInput","beforeinput",null,n,o),l.push({event:o,listeners:r}),o.data=g)}Or(l,t)}))}function Dr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Mr(e,t){for(var n=t+"Capture",r=[];null!==e;){var o=e,a=o.stateNode;5===o.tag&&null!==a&&(o=a,null!=(a=Fe(e,n))&&r.unshift(Dr(e,a,o)),null!=(a=Fe(e,t))&&r.push(Dr(e,a,o))),e=e.return}return r}function Ar(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Ir(e,t,n,r,o){for(var a=t._reactName,l=[];null!==n&&n!==r;){var i=n,u=i.alternate,c=i.stateNode;if(null!==u&&u===r)break;5===i.tag&&null!==c&&(i=c,o?null!=(u=Fe(n,a))&&l.unshift(Dr(n,u,i)):o||null!=(u=Fe(n,a))&&l.push(Dr(n,u,i))),n=n.return}0!==l.length&&e.push({event:t,listeners:l})}function Fr(){}var Ur=null,Br=null;function Vr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Wr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var $r="function"==typeof setTimeout?setTimeout:void 0,Hr="function"==typeof clearTimeout?clearTimeout:void 0;function qr(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function Qr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Kr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var Yr=0,Xr=Math.random().toString(36).slice(2),Gr="__reactFiber$"+Xr,Jr="__reactProps$"+Xr,Zr="__reactContainer$"+Xr,eo="__reactEvents$"+Xr;function to(e){var t=e[Gr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Zr]||n[Gr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Kr(e);null!==e;){if(n=e[Gr])return n;e=Kr(e)}return t}n=(e=n).parentNode}return null}function no(e){return!(e=e[Gr]||e[Zr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function ro(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(l(33))}function oo(e){return e[Jr]||null}function ao(e){var t=e[eo];return void 0===t&&(t=e[eo]=new Set),t}var lo=[],io=-1;function uo(e){return{current:e}}function co(e){0>io||(e.current=lo[io],lo[io]=null,io--)}function so(e,t){io++,lo[io]=e.current,e.current=t}var fo={},po=uo(fo),ho=uo(!1),mo=fo;function yo(e,t){var n=e.type.contextTypes;if(!n)return fo;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in n)a[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function vo(e){return null!=e.childContextTypes}function go(){co(ho),co(po)}function bo(e,t,n){if(po.current!==fo)throw Error(l(168));so(po,t),so(ho,n)}function wo(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())if(!(a in e))throw Error(l(108,Q(t)||"Unknown",a));return o({},n,r)}function ko(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||fo,mo=po.current,so(po,e),so(ho,ho.current),!0}function Eo(e,t,n){var r=e.stateNode;if(!r)throw Error(l(169));n?(e=wo(e,t,mo),r.__reactInternalMemoizedMergedChildContext=e,co(ho),co(po),so(po,e)):co(ho),so(ho,n)}var So=null,xo=null,Co=a.unstable_runWithPriority,_o=a.unstable_scheduleCallback,Po=a.unstable_cancelCallback,Oo=a.unstable_shouldYield,No=a.unstable_requestPaint,To=a.unstable_now,Ro=a.unstable_getCurrentPriorityLevel,jo=a.unstable_ImmediatePriority,Lo=a.unstable_UserBlockingPriority,zo=a.unstable_NormalPriority,Do=a.unstable_LowPriority,Mo=a.unstable_IdlePriority,Ao={},Io=void 0!==No?No:function(){},Fo=null,Uo=null,Bo=!1,Vo=To(),Wo=1e4>Vo?To:function(){return To()-Vo};function $o(){switch(Ro()){case jo:return 99;case Lo:return 98;case zo:return 97;case Do:return 96;case Mo:return 95;default:throw Error(l(332))}}function Ho(e){switch(e){case 99:return jo;case 98:return Lo;case 97:return zo;case 96:return Do;case 95:return Mo;default:throw Error(l(332))}}function qo(e,t){return e=Ho(e),Co(e,t)}function Qo(e,t,n){return e=Ho(e),_o(e,t,n)}function Ko(){if(null!==Uo){var e=Uo;Uo=null,Po(e)}Yo()}function Yo(){if(!Bo&&null!==Fo){Bo=!0;var e=0;try{var t=Fo;qo(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Fo=null}catch(t){throw null!==Fo&&(Fo=Fo.slice(e+1)),_o(jo,Ko),t}finally{Bo=!1}}}var Xo=k.ReactCurrentBatchConfig;function Go(e,t){if(e&&e.defaultProps){for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var Jo=uo(null),Zo=null,ea=null,ta=null;function na(){ta=ea=Zo=null}function ra(e){var t=Jo.current;co(Jo),e.type._context._currentValue=t}function oa(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function aa(e,t){Zo=e,ta=ea=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Ml=!0),e.firstContext=null)}function la(e,t){if(ta!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(ta=e,t=1073741823),t={context:e,observedBits:t,next:null},null===ea){if(null===Zo)throw Error(l(308));ea=t,Zo.dependencies={lanes:0,firstContext:t,responders:null}}else ea=ea.next=t;return e._currentValue}var ia=!1;function ua(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function ca(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function sa(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function fa(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function da(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var o=null,a=null;if(null!==(n=n.firstBaseUpdate)){do{var l={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===a?o=a=l:a=a.next=l,n=n.next}while(null!==n);null===a?o=a=t:a=a.next=t}else o=a=t;return n={baseState:r.baseState,firstBaseUpdate:o,lastBaseUpdate:a,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function pa(e,t,n,r){var a=e.updateQueue;ia=!1;var l=a.firstBaseUpdate,i=a.lastBaseUpdate,u=a.shared.pending;if(null!==u){a.shared.pending=null;var c=u,s=c.next;c.next=null,null===i?l=s:i.next=s,i=c;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==i&&(null===d?f.firstBaseUpdate=s:d.next=s,f.lastBaseUpdate=c)}}if(null!==l){for(d=a.baseState,i=0,f=s=c=null;;){u=l.lane;var p=l.eventTime;if((r&u)===u){null!==f&&(f=f.next={eventTime:p,lane:0,tag:l.tag,payload:l.payload,callback:l.callback,next:null});e:{var h=e,m=l;switch(u=t,p=n,m.tag){case 1:if("function"==typeof(h=m.payload)){d=h.call(p,d,u);break e}d=h;break e;case 3:h.flags=-4097&h.flags|64;case 0:if(null==(u="function"==typeof(h=m.payload)?h.call(p,d,u):h))break e;d=o({},d,u);break e;case 2:ia=!0}}null!==l.callback&&(e.flags|=32,null===(u=a.effects)?a.effects=[l]:u.push(l))}else p={eventTime:p,lane:u,tag:l.tag,payload:l.payload,callback:l.callback,next:null},null===f?(s=f=p,c=d):f=f.next=p,i|=u;if(null===(l=l.next)){if(null===(u=a.shared.pending))break;l=u.next,u.next=null,a.lastBaseUpdate=u,a.shared.pending=null}}null===f&&(c=d),a.baseState=c,a.firstBaseUpdate=s,a.lastBaseUpdate=f,Ii|=i,e.lanes=i,e.memoizedState=d}}function ha(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],o=r.callback;if(null!==o){if(r.callback=null,r=n,"function"!=typeof o)throw Error(l(191,o));o.call(r)}}}var ma=(new r.Component).refs;function ya(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var va={isMounted:function(e){return!!(e=e._reactInternals)&&Ye(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=cu(),o=su(e),a=sa(r,o);a.payload=t,null!=n&&(a.callback=n),fa(e,a),fu(e,o,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=cu(),o=su(e),a=sa(r,o);a.tag=1,a.payload=t,null!=n&&(a.callback=n),fa(e,a),fu(e,o,r)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=cu(),r=su(e),o=sa(n,r);o.tag=2,null!=t&&(o.callback=t),fa(e,o),fu(e,r,n)}};function ga(e,t,n,r,o,a,l){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,l):!(t.prototype&&t.prototype.isPureReactComponent&&fr(n,r)&&fr(o,a))}function ba(e,t,n){var r=!1,o=fo,a=t.contextType;return"object"==typeof a&&null!==a?a=la(a):(o=vo(t)?mo:po.current,a=(r=null!=(r=t.contextTypes))?yo(e,o):fo),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=va,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),t}function wa(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&va.enqueueReplaceState(t,t.state,null)}function ka(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=ma,ua(e);var a=t.contextType;"object"==typeof a&&null!==a?o.context=la(a):(a=vo(t)?mo:po.current,o.context=yo(e,a)),pa(e,n,o,r),o.state=e.memoizedState,"function"==typeof(a=t.getDerivedStateFromProps)&&(ya(e,t,a,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&va.enqueueReplaceState(o,o.state,null),pa(e,n,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.flags|=4)}var Ea=Array.isArray;function Sa(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(l(309));var r=n.stateNode}if(!r)throw Error(l(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=r.refs;t===ma&&(t=r.refs={}),null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!=typeof e)throw Error(l(284));if(!n._owner)throw Error(l(290,e))}return e}function xa(e,t){if("textarea"!==e.type)throw Error(l(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function Ca(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Wu(e,t)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags=2,n):r:(t.flags=2,n):n}function i(t){return e&&null===t.alternate&&(t.flags=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Qu(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=Sa(e,t,n),r.return=e,r):((r=$u(n.type,n.key,n.props,null,e.mode,r)).ref=Sa(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Ku(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,a){return null===t||7!==t.tag?((t=Hu(n,e.mode,r,a)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Qu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case E:return(n=$u(t.type,t.key,t.props,null,e.mode,n)).ref=Sa(e,null,t),n.return=e,n;case S:return(t=Ku(t,e.mode,n)).return=e,t}if(Ea(t)||V(t))return(t=Hu(t,e.mode,n,null)).return=e,t;xa(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case E:return n.key===o?n.type===x?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case S:return n.key===o?s(e,t,n,r):null}if(Ea(n)||V(n))return null!==o?null:f(e,t,n,r,null);xa(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case E:return e=e.get(null===r.key?n:r.key)||null,r.type===x?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case S:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(Ea(r)||V(r))return f(t,e=e.get(n)||null,r,o,null);xa(t,r)}return null}function m(o,l,i,u){for(var c=null,s=null,f=l,m=l=0,y=null;null!==f&&m<i.length;m++){f.index>m?(y=f,f=null):y=f.sibling;var v=p(o,f,i[m],u);if(null===v){null===f&&(f=y);break}e&&f&&null===v.alternate&&t(o,f),l=a(v,l,m),null===s?c=v:s.sibling=v,s=v,f=y}if(m===i.length)return n(o,f),c;if(null===f){for(;m<i.length;m++)null!==(f=d(o,i[m],u))&&(l=a(f,l,m),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);m<i.length;m++)null!==(y=h(f,o,m,i[m],u))&&(e&&null!==y.alternate&&f.delete(null===y.key?m:y.key),l=a(y,l,m),null===s?c=y:s.sibling=y,s=y);return e&&f.forEach((function(e){return t(o,e)})),c}function y(o,i,u,c){var s=V(u);if("function"!=typeof s)throw Error(l(150));if(null==(u=s.call(u)))throw Error(l(151));for(var f=s=null,m=i,y=i=0,v=null,g=u.next();null!==m&&!g.done;y++,g=u.next()){m.index>y?(v=m,m=null):v=m.sibling;var b=p(o,m,g.value,c);if(null===b){null===m&&(m=v);break}e&&m&&null===b.alternate&&t(o,m),i=a(b,i,y),null===f?s=b:f.sibling=b,f=b,m=v}if(g.done)return n(o,m),s;if(null===m){for(;!g.done;y++,g=u.next())null!==(g=d(o,g.value,c))&&(i=a(g,i,y),null===f?s=g:f.sibling=g,f=g);return s}for(m=r(o,m);!g.done;y++,g=u.next())null!==(g=h(m,o,y,g.value,c))&&(e&&null!==g.alternate&&m.delete(null===g.key?y:g.key),i=a(g,i,y),null===f?s=g:f.sibling=g,f=g);return e&&m.forEach((function(e){return t(o,e)})),s}return function(e,r,a,u){var c="object"==typeof a&&null!==a&&a.type===x&&null===a.key;c&&(a=a.props.children);var s="object"==typeof a&&null!==a;if(s)switch(a.$$typeof){case E:e:{for(s=a.key,c=r;null!==c;){if(c.key===s){if(7===c.tag){if(a.type===x){n(e,c.sibling),(r=o(c,a.props.children)).return=e,e=r;break e}}else if(c.elementType===a.type){n(e,c.sibling),(r=o(c,a.props)).ref=Sa(e,c,a),r.return=e,e=r;break e}n(e,c);break}t(e,c),c=c.sibling}a.type===x?((r=Hu(a.props.children,e.mode,u,a.key)).return=e,e=r):((u=$u(a.type,a.key,a.props,null,e.mode,u)).ref=Sa(e,r,a),u.return=e,e=u)}return i(e);case S:e:{for(c=a.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){n(e,r.sibling),(r=o(r,a.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Ku(a,e.mode,u)).return=e,e=r}return i(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,a)).return=e,e=r):(n(e,r),(r=Qu(a,e.mode,u)).return=e,e=r),i(e);if(Ea(a))return m(e,r,a,u);if(V(a))return y(e,r,a,u);if(s&&xa(e,a),void 0===a&&!c)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(l(152,Q(e.type)||"Component"))}return n(e,r)}}var _a=Ca(!0),Pa=Ca(!1),Oa={},Na=uo(Oa),Ta=uo(Oa),Ra=uo(Oa);function ja(e){if(e===Oa)throw Error(l(174));return e}function La(e,t){switch(so(Ra,t),so(Ta,e),so(Na,Oa),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:pe(null,"");break;default:t=pe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}co(Na),so(Na,t)}function za(){co(Na),co(Ta),co(Ra)}function Da(e){ja(Ra.current);var t=ja(Na.current),n=pe(t,e.type);t!==n&&(so(Ta,e),so(Na,n))}function Ma(e){Ta.current===e&&(co(Na),co(Ta))}var Aa=uo(0);function Ia(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Fa=null,Ua=null,Ba=!1;function Va(e,t){var n=Bu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Wa(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function $a(e){if(Ba){var t=Ua;if(t){var n=t;if(!Wa(e,t)){if(!(t=Qr(n.nextSibling))||!Wa(e,t))return e.flags=-1025&e.flags|2,Ba=!1,void(Fa=e);Va(Fa,n)}Fa=e,Ua=Qr(t.firstChild)}else e.flags=-1025&e.flags|2,Ba=!1,Fa=e}}function Ha(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Fa=e}function qa(e){if(e!==Fa)return!1;if(!Ba)return Ha(e),Ba=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Wr(t,e.memoizedProps))for(t=Ua;t;)Va(e,t),t=Qr(t.nextSibling);if(Ha(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(l(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Ua=Qr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Ua=null}}else Ua=Fa?Qr(e.stateNode.nextSibling):null;return!0}function Qa(){Ua=Fa=null,Ba=!1}var Ka=[];function Ya(){for(var e=0;e<Ka.length;e++)Ka[e]._workInProgressVersionPrimary=null;Ka.length=0}var Xa=k.ReactCurrentDispatcher,Ga=k.ReactCurrentBatchConfig,Ja=0,Za=null,el=null,tl=null,nl=!1,rl=!1;function ol(){throw Error(l(321))}function al(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!cr(e[n],t[n]))return!1;return!0}function ll(e,t,n,r,o,a){if(Ja=a,Za=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,Xa.current=null===e||null===e.memoizedState?jl:Ll,e=n(r,o),rl){a=0;do{if(rl=!1,!(25>a))throw Error(l(301));a+=1,tl=el=null,t.updateQueue=null,Xa.current=zl,e=n(r,o)}while(rl)}if(Xa.current=Rl,t=null!==el&&null!==el.next,Ja=0,tl=el=Za=null,nl=!1,t)throw Error(l(300));return e}function il(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===tl?Za.memoizedState=tl=e:tl=tl.next=e,tl}function ul(){if(null===el){var e=Za.alternate;e=null!==e?e.memoizedState:null}else e=el.next;var t=null===tl?Za.memoizedState:tl.next;if(null!==t)tl=t,el=e;else{if(null===e)throw Error(l(310));e={memoizedState:(el=e).memoizedState,baseState:el.baseState,baseQueue:el.baseQueue,queue:el.queue,next:null},null===tl?Za.memoizedState=tl=e:tl=tl.next=e}return tl}function cl(e,t){return"function"==typeof t?t(e):t}function sl(e){var t=ul(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=el,o=r.baseQueue,a=n.pending;if(null!==a){if(null!==o){var i=o.next;o.next=a.next,a.next=i}r.baseQueue=o=a,n.pending=null}if(null!==o){o=o.next,r=r.baseState;var u=i=a=null,c=o;do{var s=c.lane;if((Ja&s)===s)null!==u&&(u=u.next={lane:0,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),r=c.eagerReducer===e?c.eagerState:e(r,c.action);else{var f={lane:s,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(i=u=f,a=r):u=u.next=f,Za.lanes|=s,Ii|=s}c=c.next}while(null!==c&&c!==o);null===u?a=r:u.next=i,cr(r,t.memoizedState)||(Ml=!0),t.memoizedState=r,t.baseState=a,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function fl(e){var t=ul(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=n.dispatch,o=n.pending,a=t.memoizedState;if(null!==o){n.pending=null;var i=o=o.next;do{a=e(a,i.action),i=i.next}while(i!==o);cr(a,t.memoizedState)||(Ml=!0),t.memoizedState=a,null===t.baseQueue&&(t.baseState=a),n.lastRenderedState=a}return[a,r]}function dl(e,t,n){var r=t._getVersion;r=r(t._source);var o=t._workInProgressVersionPrimary;if(null!==o?e=o===r:(e=e.mutableReadLanes,(e=(Ja&e)===e)&&(t._workInProgressVersionPrimary=r,Ka.push(t))),e)return n(t._source);throw Ka.push(t),Error(l(350))}function pl(e,t,n,r){var o=Ti;if(null===o)throw Error(l(349));var a=t._getVersion,i=a(t._source),u=Xa.current,c=u.useState((function(){return dl(o,t,n)})),s=c[1],f=c[0];c=tl;var d=e.memoizedState,p=d.refs,h=p.getSnapshot,m=d.source;d=d.subscribe;var y=Za;return e.memoizedState={refs:p,source:t,subscribe:r},u.useEffect((function(){p.getSnapshot=n,p.setSnapshot=s;var e=a(t._source);if(!cr(i,e)){e=n(t._source),cr(f,e)||(s(e),e=su(y),o.mutableReadLanes|=e&o.pendingLanes),e=o.mutableReadLanes,o.entangledLanes|=e;for(var r=o.entanglements,l=e;0<l;){var u=31-Wt(l),c=1<<u;r[u]|=e,l&=~c}}}),[n,t,r]),u.useEffect((function(){return r(t._source,(function(){var e=p.getSnapshot,n=p.setSnapshot;try{n(e(t._source));var r=su(y);o.mutableReadLanes|=r&o.pendingLanes}catch(e){n((function(){throw e}))}}))}),[t,r]),cr(h,n)&&cr(m,t)&&cr(d,r)||((e={pending:null,dispatch:null,lastRenderedReducer:cl,lastRenderedState:f}).dispatch=s=Tl.bind(null,Za,e),c.queue=e,c.baseQueue=null,f=dl(o,t,n),c.memoizedState=c.baseState=f),f}function hl(e,t,n){return pl(ul(),e,t,n)}function ml(e){var t=il();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:cl,lastRenderedState:e}).dispatch=Tl.bind(null,Za,e),[t.memoizedState,e]}function yl(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Za.updateQueue)?(t={lastEffect:null},Za.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function vl(e){return e={current:e},il().memoizedState=e}function gl(){return ul().memoizedState}function bl(e,t,n,r){var o=il();Za.flags|=e,o.memoizedState=yl(1|t,n,void 0,void 0===r?null:r)}function wl(e,t,n,r){var o=ul();r=void 0===r?null:r;var a=void 0;if(null!==el){var l=el.memoizedState;if(a=l.destroy,null!==r&&al(r,l.deps))return void yl(t,n,a,r)}Za.flags|=e,o.memoizedState=yl(1|t,n,a,r)}function kl(e,t){return bl(516,4,e,t)}function El(e,t){return wl(516,4,e,t)}function Sl(e,t){return wl(4,2,e,t)}function xl(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Cl(e,t,n){return n=null!=n?n.concat([e]):null,wl(4,2,xl.bind(null,t,e),n)}function _l(){}function Pl(e,t){var n=ul();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&al(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Ol(e,t){var n=ul();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&al(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Nl(e,t){var n=$o();qo(98>n?98:n,(function(){e(!0)})),qo(97<n?97:n,(function(){var n=Ga.transition;Ga.transition=1;try{e(!1),t()}finally{Ga.transition=n}}))}function Tl(e,t,n){var r=cu(),o=su(e),a={lane:o,action:n,eagerReducer:null,eagerState:null,next:null},l=t.pending;if(null===l?a.next=a:(a.next=l.next,l.next=a),t.pending=a,l=e.alternate,e===Za||null!==l&&l===Za)rl=nl=!0;else{if(0===e.lanes&&(null===l||0===l.lanes)&&null!==(l=t.lastRenderedReducer))try{var i=t.lastRenderedState,u=l(i,n);if(a.eagerReducer=l,a.eagerState=u,cr(u,i))return}catch(e){}fu(e,o,r)}}var Rl={readContext:la,useCallback:ol,useContext:ol,useEffect:ol,useImperativeHandle:ol,useLayoutEffect:ol,useMemo:ol,useReducer:ol,useRef:ol,useState:ol,useDebugValue:ol,useDeferredValue:ol,useTransition:ol,useMutableSource:ol,useOpaqueIdentifier:ol,unstable_isNewReconciler:!1},jl={readContext:la,useCallback:function(e,t){return il().memoizedState=[e,void 0===t?null:t],e},useContext:la,useEffect:kl,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,bl(4,2,xl.bind(null,t,e),n)},useLayoutEffect:function(e,t){return bl(4,2,e,t)},useMemo:function(e,t){var n=il();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=il();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Tl.bind(null,Za,e),[r.memoizedState,e]},useRef:vl,useState:ml,useDebugValue:_l,useDeferredValue:function(e){var t=ml(e),n=t[0],r=t[1];return kl((function(){var t=Ga.transition;Ga.transition=1;try{r(e)}finally{Ga.transition=t}}),[e]),n},useTransition:function(){var e=ml(!1),t=e[0];return vl(e=Nl.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var r=il();return r.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},pl(r,e,t,n)},useOpaqueIdentifier:function(){if(Ba){var e=!1,t=function(e){return{$$typeof:D,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(Yr++).toString(36))),Error(l(355))})),n=ml(t)[1];return 0==(2&Za.mode)&&(Za.flags|=516,yl(5,(function(){n("r:"+(Yr++).toString(36))}),void 0,null)),t}return ml(t="r:"+(Yr++).toString(36)),t},unstable_isNewReconciler:!1},Ll={readContext:la,useCallback:Pl,useContext:la,useEffect:El,useImperativeHandle:Cl,useLayoutEffect:Sl,useMemo:Ol,useReducer:sl,useRef:gl,useState:function(){return sl(cl)},useDebugValue:_l,useDeferredValue:function(e){var t=sl(cl),n=t[0],r=t[1];return El((function(){var t=Ga.transition;Ga.transition=1;try{r(e)}finally{Ga.transition=t}}),[e]),n},useTransition:function(){var e=sl(cl)[0];return[gl().current,e]},useMutableSource:hl,useOpaqueIdentifier:function(){return sl(cl)[0]},unstable_isNewReconciler:!1},zl={readContext:la,useCallback:Pl,useContext:la,useEffect:El,useImperativeHandle:Cl,useLayoutEffect:Sl,useMemo:Ol,useReducer:fl,useRef:gl,useState:function(){return fl(cl)},useDebugValue:_l,useDeferredValue:function(e){var t=fl(cl),n=t[0],r=t[1];return El((function(){var t=Ga.transition;Ga.transition=1;try{r(e)}finally{Ga.transition=t}}),[e]),n},useTransition:function(){var e=fl(cl)[0];return[gl().current,e]},useMutableSource:hl,useOpaqueIdentifier:function(){return fl(cl)[0]},unstable_isNewReconciler:!1},Dl=k.ReactCurrentOwner,Ml=!1;function Al(e,t,n,r){t.child=null===e?Pa(t,null,n,r):_a(t,e.child,n,r)}function Il(e,t,n,r,o){n=n.render;var a=t.ref;return aa(t,o),r=ll(e,t,n,r,a,o),null===e||Ml?(t.flags|=1,Al(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~o,ni(e,t,o))}function Fl(e,t,n,r,o,a){if(null===e){var l=n.type;return"function"!=typeof l||Vu(l)||void 0!==l.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=$u(n.type,null,r,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=l,Ul(e,t,l,r,o,a))}return l=e.child,0==(o&a)&&(o=l.memoizedProps,(n=null!==(n=n.compare)?n:fr)(o,r)&&e.ref===t.ref)?ni(e,t,a):(t.flags|=1,(e=Wu(l,r)).ref=t.ref,e.return=t,t.child=e)}function Ul(e,t,n,r,o,a){if(null!==e&&fr(e.memoizedProps,r)&&e.ref===t.ref){if(Ml=!1,0==(a&o))return t.lanes=e.lanes,ni(e,t,a);0!=(16384&e.flags)&&(Ml=!0)}return Wl(e,t,n,r,a)}function Bl(e,t,n){var r=t.pendingProps,o=r.children,a=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},bu(0,n);else{if(0==(1073741824&n))return e=null!==a?a.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},bu(0,e),null;t.memoizedState={baseLanes:0},bu(0,null!==a?a.baseLanes:n)}else null!==a?(r=a.baseLanes|n,t.memoizedState=null):r=n,bu(0,r);return Al(e,t,o,n),t.child}function Vl(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function Wl(e,t,n,r,o){var a=vo(n)?mo:po.current;return a=yo(t,a),aa(t,o),n=ll(e,t,n,r,a,o),null===e||Ml?(t.flags|=1,Al(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~o,ni(e,t,o))}function $l(e,t,n,r,o){if(vo(n)){var a=!0;ko(t)}else a=!1;if(aa(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),ba(t,n,r),ka(t,n,r,o),r=!0;else if(null===e){var l=t.stateNode,i=t.memoizedProps;l.props=i;var u=l.context,c=n.contextType;c="object"==typeof c&&null!==c?la(c):yo(t,c=vo(n)?mo:po.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof l.getSnapshotBeforeUpdate;f||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(i!==r||u!==c)&&wa(t,l,r,c),ia=!1;var d=t.memoizedState;l.state=d,pa(t,r,l,o),u=t.memoizedState,i!==r||d!==u||ho.current||ia?("function"==typeof s&&(ya(t,n,s,r),u=t.memoizedState),(i=ia||ga(t,n,i,r,d,u,c))?(f||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||("function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"==typeof l.componentDidMount&&(t.flags|=4)):("function"==typeof l.componentDidMount&&(t.flags|=4),t.memoizedProps=r,t.memoizedState=u),l.props=r,l.state=u,l.context=c,r=i):("function"==typeof l.componentDidMount&&(t.flags|=4),r=!1)}else{l=t.stateNode,ca(e,t),i=t.memoizedProps,c=t.type===t.elementType?i:Go(t.type,i),l.props=c,f=t.pendingProps,d=l.context,u="object"==typeof(u=n.contextType)&&null!==u?la(u):yo(t,u=vo(n)?mo:po.current);var p=n.getDerivedStateFromProps;(s="function"==typeof p||"function"==typeof l.getSnapshotBeforeUpdate)||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(i!==f||d!==u)&&wa(t,l,r,u),ia=!1,d=t.memoizedState,l.state=d,pa(t,r,l,o);var h=t.memoizedState;i!==f||d!==h||ho.current||ia?("function"==typeof p&&(ya(t,n,p,r),h=t.memoizedState),(c=ia||ga(t,n,c,r,d,h,u))?(s||"function"!=typeof l.UNSAFE_componentWillUpdate&&"function"!=typeof l.componentWillUpdate||("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(r,h,u),"function"==typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(r,h,u)),"function"==typeof l.componentDidUpdate&&(t.flags|=4),"function"==typeof l.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof l.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof l.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=r,t.memoizedState=h),l.props=r,l.state=h,l.context=u,r=c):("function"!=typeof l.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof l.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),r=!1)}return Hl(e,t,n,r,a,o)}function Hl(e,t,n,r,o,a){Vl(e,t);var l=0!=(64&t.flags);if(!r&&!l)return o&&Eo(t,n,!1),ni(e,t,a);r=t.stateNode,Dl.current=t;var i=l&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&l?(t.child=_a(t,e.child,null,a),t.child=_a(t,null,i,a)):Al(e,t,i,a),t.memoizedState=r.state,o&&Eo(t,n,!0),t.child}function ql(e){var t=e.stateNode;t.pendingContext?bo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&bo(0,t.context,!1),La(e,t.containerInfo)}var Ql,Kl,Yl,Xl={dehydrated:null,retryLane:0};function Gl(e,t,n){var r,o=t.pendingProps,a=Aa.current,l=!1;return(r=0!=(64&t.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&a)),r?(l=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===o.fallback||!0===o.unstable_avoidThisFallback||(a|=1),so(Aa,1&a),null===e?(void 0!==o.fallback&&$a(t),e=o.children,a=o.fallback,l?(e=Jl(t,e,a,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Xl,e):"number"==typeof o.unstable_expectedLoadTime?(e=Jl(t,e,a,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Xl,t.lanes=33554432,e):((n=qu({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,l?(o=function(e,t,n,r,o){var a=t.mode,l=e.child;e=l.sibling;var i={mode:"hidden",children:n};return 0==(2&a)&&t.child!==l?((n=t.child).childLanes=0,n.pendingProps=i,null!==(l=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=l,l.nextEffect=null):t.firstEffect=t.lastEffect=null):n=Wu(l,i),null!==e?r=Wu(e,r):(r=Hu(r,a,o,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}(e,t,o.children,o.fallback,n),l=t.child,a=e.child.memoizedState,l.memoizedState=null===a?{baseLanes:n}:{baseLanes:a.baseLanes|n},l.childLanes=e.childLanes&~n,t.memoizedState=Xl,o):(n=function(e,t,n,r){var o=e.child;return e=o.sibling,n=Wu(o,{mode:"visible",children:n}),0==(2&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}(e,t,o.children,n),t.memoizedState=null,n))}function Jl(e,t,n,r){var o=e.mode,a=e.child;return t={mode:"hidden",children:t},0==(2&o)&&null!==a?(a.childLanes=0,a.pendingProps=t):a=qu(t,o,0,null),n=Hu(n,o,r,null),a.return=e,n.return=e,a.sibling=n,e.child=a,n}function Zl(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),oa(e.return,t)}function ei(e,t,n,r,o,a){var l=e.memoizedState;null===l?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:o,lastEffect:a}:(l.isBackwards=t,l.rendering=null,l.renderingStartTime=0,l.last=r,l.tail=n,l.tailMode=o,l.lastEffect=a)}function ti(e,t,n){var r=t.pendingProps,o=r.revealOrder,a=r.tail;if(Al(e,t,r.children,n),0!=(2&(r=Aa.current)))r=1&r|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Zl(e,n);else if(19===e.tag)Zl(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(so(Aa,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===Ia(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),ei(t,!1,o,n,a,t.lastEffect);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Ia(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}ei(t,!0,n,null,a,t.lastEffect);break;case"together":ei(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function ni(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Ii|=t.lanes,0!=(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(l(153));if(null!==t.child){for(n=Wu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Wu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function ri(e,t){if(!Ba)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function oi(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:case 17:return vo(t.type)&&go(),null;case 3:return za(),co(ho),co(po),Ya(),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(qa(t)?t.flags|=4:r.hydrate||(t.flags|=256)),null;case 5:Ma(t);var a=ja(Ra.current);if(n=t.type,null!==e&&null!=t.stateNode)Kl(e,t,n,r),e.ref!==t.ref&&(t.flags|=128);else{if(!r){if(null===t.stateNode)throw Error(l(166));return null}if(e=ja(Na.current),qa(t)){r=t.stateNode,n=t.type;var i=t.memoizedProps;switch(r[Gr]=t,r[Jr]=i,n){case"dialog":Nr("cancel",r),Nr("close",r);break;case"iframe":case"object":case"embed":Nr("load",r);break;case"video":case"audio":for(e=0;e<Cr.length;e++)Nr(Cr[e],r);break;case"source":Nr("error",r);break;case"img":case"image":case"link":Nr("error",r),Nr("load",r);break;case"details":Nr("toggle",r);break;case"input":ee(r,i),Nr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Nr("invalid",r);break;case"textarea":ue(r,i),Nr("invalid",r)}for(var c in Se(n,i),e=null,i)i.hasOwnProperty(c)&&(a=i[c],"children"===c?"string"==typeof a?r.textContent!==a&&(e=["children",a]):"number"==typeof a&&r.textContent!==""+a&&(e=["children",""+a]):u.hasOwnProperty(c)&&null!=a&&"onScroll"===c&&Nr("scroll",r));switch(n){case"input":X(r),re(r,i,!0);break;case"textarea":X(r),se(r);break;case"select":case"option":break;default:"function"==typeof i.onClick&&(r.onclick=Fr)}r=e,t.updateQueue=r,null!==r&&(t.flags|=4)}else{switch(c=9===a.nodeType?a:a.ownerDocument,e===fe&&(e=de(n)),e===fe?"script"===n?((e=c.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=c.createElement(n,{is:r.is}):(e=c.createElement(n),"select"===n&&(c=e,r.multiple?c.multiple=!0:r.size&&(c.size=r.size))):e=c.createElementNS(e,n),e[Gr]=t,e[Jr]=r,Ql(e,t),t.stateNode=e,c=xe(n,r),n){case"dialog":Nr("cancel",e),Nr("close",e),a=r;break;case"iframe":case"object":case"embed":Nr("load",e),a=r;break;case"video":case"audio":for(a=0;a<Cr.length;a++)Nr(Cr[a],e);a=r;break;case"source":Nr("error",e),a=r;break;case"img":case"image":case"link":Nr("error",e),Nr("load",e),a=r;break;case"details":Nr("toggle",e),a=r;break;case"input":ee(e,r),a=Z(e,r),Nr("invalid",e);break;case"option":a=ae(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},a=o({},r,{value:void 0}),Nr("invalid",e);break;case"textarea":ue(e,r),a=ie(e,r),Nr("invalid",e);break;default:a=r}Se(n,a);var s=a;for(i in s)if(s.hasOwnProperty(i)){var f=s[i];"style"===i?ke(e,f):"dangerouslySetInnerHTML"===i?null!=(f=f?f.__html:void 0)&&ye(e,f):"children"===i?"string"==typeof f?("textarea"!==n||""!==f)&&ve(e,f):"number"==typeof f&&ve(e,""+f):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(u.hasOwnProperty(i)?null!=f&&"onScroll"===i&&Nr("scroll",e):null!=f&&w(e,i,f,c))}switch(n){case"input":X(e),re(e,r,!1);break;case"textarea":X(e),se(e);break;case"option":null!=r.value&&e.setAttribute("value",""+K(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?le(e,!!r.multiple,i,!1):null!=r.defaultValue&&le(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=Fr)}Vr(n,r)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Yl(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(l(166));n=ja(Ra.current),ja(Na.current),qa(t)?(r=t.stateNode,n=t.memoizedProps,r[Gr]=t,r.nodeValue!==n&&(t.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Gr]=t,t.stateNode=r)}return null;case 13:return co(Aa),r=t.memoizedState,0!=(64&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?void 0!==t.memoizedProps.fallback&&qa(t):n=null!==e.memoizedState,r&&!n&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Aa.current)?0===Di&&(Di=3):(0!==Di&&3!==Di||(Di=4),null===Ti||0==(134217727&Ii)&&0==(134217727&Fi)||mu(Ti,ji))),(r||n)&&(t.flags|=4),null);case 4:return za(),null===e&&Rr(t.stateNode.containerInfo),null;case 10:return ra(t),null;case 19:if(co(Aa),null===(r=t.memoizedState))return null;if(i=0!=(64&t.flags),null===(c=r.rendering))if(i)ri(r,!1);else{if(0!==Di||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(c=Ia(e))){for(t.flags|=64,ri(r,!1),null!==(i=c.updateQueue)&&(t.updateQueue=i,t.flags|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=n,n=t.child;null!==n;)e=r,(i=n).flags&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(c=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=c.childLanes,i.lanes=c.lanes,i.child=c.child,i.memoizedProps=c.memoizedProps,i.memoizedState=c.memoizedState,i.updateQueue=c.updateQueue,i.type=c.type,e=c.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return so(Aa,1&Aa.current|2),t.child}e=e.sibling}null!==r.tail&&Wo()>Wi&&(t.flags|=64,i=!0,ri(r,!1),t.lanes=33554432)}else{if(!i)if(null!==(e=Ia(c))){if(t.flags|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),ri(r,!0),null===r.tail&&"hidden"===r.tailMode&&!c.alternate&&!Ba)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Wo()-r.renderingStartTime>Wi&&1073741824!==n&&(t.flags|=64,i=!0,ri(r,!1),t.lanes=33554432);r.isBackwards?(c.sibling=t.child,t.child=c):(null!==(n=r.last)?n.sibling=c:t.child=c,r.last=c)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Wo(),n.sibling=null,t=Aa.current,so(Aa,i?1&t|2:1&t),n):null;case 23:case 24:return wu(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(t.flags|=4),null}throw Error(l(156,t.tag))}function ai(e){switch(e.tag){case 1:vo(e.type)&&go();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(za(),co(ho),co(po),Ya(),0!=(64&(t=e.flags)))throw Error(l(285));return e.flags=-4097&t|64,e;case 5:return Ma(e),null;case 13:return co(Aa),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return co(Aa),null;case 4:return za(),null;case 10:return ra(e),null;case 23:case 24:return wu(),null;default:return null}}function li(e,t){try{var n="",r=t;do{n+=q(r),r=r.return}while(r);var o=n}catch(e){o="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:o}}function ii(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Ql=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Kl=function(e,t,n,r){var a=e.memoizedProps;if(a!==r){e=t.stateNode,ja(Na.current);var l,i=null;switch(n){case"input":a=Z(e,a),r=Z(e,r),i=[];break;case"option":a=ae(e,a),r=ae(e,r),i=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),i=[];break;case"textarea":a=ie(e,a),r=ie(e,r),i=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(e.onclick=Fr)}for(f in Se(n,r),n=null,a)if(!r.hasOwnProperty(f)&&a.hasOwnProperty(f)&&null!=a[f])if("style"===f){var c=a[f];for(l in c)c.hasOwnProperty(l)&&(n||(n={}),n[l]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(u.hasOwnProperty(f)?i||(i=[]):(i=i||[]).push(f,null));for(f in r){var s=r[f];if(c=null!=a?a[f]:void 0,r.hasOwnProperty(f)&&s!==c&&(null!=s||null!=c))if("style"===f)if(c){for(l in c)!c.hasOwnProperty(l)||s&&s.hasOwnProperty(l)||(n||(n={}),n[l]="");for(l in s)s.hasOwnProperty(l)&&c[l]!==s[l]&&(n||(n={}),n[l]=s[l])}else n||(i||(i=[]),i.push(f,n)),n=s;else"dangerouslySetInnerHTML"===f?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(i=i||[]).push(f,s)):"children"===f?"string"!=typeof s&&"number"!=typeof s||(i=i||[]).push(f,""+s):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(u.hasOwnProperty(f)?(null!=s&&"onScroll"===f&&Nr("scroll",e),i||c===s||(i=[])):"object"==typeof s&&null!==s&&s.$$typeof===D?s.toString():(i=i||[]).push(f,s))}n&&(i=i||[]).push("style",n);var f=i;(t.updateQueue=f)&&(t.flags|=4)}},Yl=function(e,t,n,r){n!==r&&(t.flags|=4)};var ui="function"==typeof WeakMap?WeakMap:Map;function ci(e,t,n){(n=sa(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Qi||(Qi=!0,Ki=r),ii(0,t)},n}function si(e,t,n){(n=sa(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return ii(0,t),r(o)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Yi?Yi=new Set([this]):Yi.add(this),ii(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var fi="function"==typeof WeakSet?WeakSet:Set;function di(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Au(e,t)}else t.current=null}function pi(e,t){switch(t.tag){case 0:case 11:case 15:case 22:case 5:case 6:case 4:case 17:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Go(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&qr(t.stateNode.containerInfo))}throw Error(l(163))}function hi(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var o=e;r=o.next,0!=(4&(o=o.tag))&&0!=(1&o)&&(zu(n,e),Lu(n,e)),e=r}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(r=n.elementType===n.type?t.memoizedProps:Go(n.type,t.memoizedProps),e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&ha(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:case 1:e=n.child.stateNode}ha(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&Vr(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:case 19:case 17:case 20:case 21:case 23:case 24:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&kt(n)))))}throw Error(l(163))}function mi(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=n.stateNode;var o=n.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,r.style.display=we("display",o)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function yi(e,t){if(xo&&"function"==typeof xo.onCommitFiberUnmount)try{xo.onCommitFiberUnmount(So,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var r=n,o=r.destroy;if(r=r.tag,void 0!==o)if(0!=(4&r))zu(t,n);else{r=t;try{o()}catch(e){Au(r,e)}}n=n.next}while(n!==e)}break;case 1:if(di(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Au(t,e)}break;case 5:di(t);break;case 4:Ei(e,t)}}function vi(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function gi(e){return 5===e.tag||3===e.tag||4===e.tag}function bi(e){e:{for(var t=e.return;null!==t;){if(gi(t))break e;t=t.return}throw Error(l(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(l(161))}16&n.flags&&(ve(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||gi(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}r?wi(e,n,t):ki(e,n,t)}function wi(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Fr));else if(4!==r&&null!==(e=e.child))for(wi(e,t,n),e=e.sibling;null!==e;)wi(e,t,n),e=e.sibling}function ki(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(ki(e,t,n),e=e.sibling;null!==e;)ki(e,t,n),e=e.sibling}function Ei(e,t){for(var n,r,o=t,a=!1;;){if(!a){a=o.return;e:for(;;){if(null===a)throw Error(l(160));switch(n=a.stateNode,a.tag){case 5:r=!1;break e;case 3:case 4:n=n.containerInfo,r=!0;break e}a=a.return}a=!0}if(5===o.tag||6===o.tag){e:for(var i=e,u=o,c=u;;)if(yi(i,c),null!==c.child&&4!==c.tag)c.child.return=c,c=c.child;else{if(c===u)break e;for(;null===c.sibling;){if(null===c.return||c.return===u)break e;c=c.return}c.sibling.return=c.return,c=c.sibling}r?(i=n,u=o.stateNode,8===i.nodeType?i.parentNode.removeChild(u):i.removeChild(u)):n.removeChild(o.stateNode)}else if(4===o.tag){if(null!==o.child){n=o.stateNode.containerInfo,r=!0,o.child.return=o,o=o.child;continue}}else if(yi(e,o),null!==o.child){o.child.return=o,o=o.child;continue}if(o===t)break;for(;null===o.sibling;){if(null===o.return||o.return===t)return;4===(o=o.return).tag&&(a=!1)}o.sibling.return=o.return,o=o.sibling}}function Si(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==n)}return;case 1:case 12:case 17:return;case 5:if(null!=(n=t.stateNode)){r=t.memoizedProps;var o=null!==e?e.memoizedProps:r;e=t.type;var a=t.updateQueue;if(t.updateQueue=null,null!==a){for(n[Jr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&te(n,r),xe(e,o),t=xe(e,r),o=0;o<a.length;o+=2){var i=a[o],u=a[o+1];"style"===i?ke(n,u):"dangerouslySetInnerHTML"===i?ye(n,u):"children"===i?ve(n,u):w(n,i,u,t)}switch(e){case"input":ne(n,r);break;case"textarea":ce(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(a=r.value)?le(n,!!r.multiple,a,!1):e!==!!r.multiple&&(null!=r.defaultValue?le(n,!!r.multiple,r.defaultValue,!0):le(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(l(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,kt(n.containerInfo)));case 13:return null!==t.memoizedState&&(Vi=Wo(),mi(t.child,!0)),void xi(t);case 19:return void xi(t);case 23:case 24:return void mi(t,null!==t.memoizedState)}throw Error(l(163))}function xi(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new fi),t.forEach((function(t){var r=Fu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function Ci(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(t=t.memoizedState)&&null===t.dehydrated}var _i=Math.ceil,Pi=k.ReactCurrentDispatcher,Oi=k.ReactCurrentOwner,Ni=0,Ti=null,Ri=null,ji=0,Li=0,zi=uo(0),Di=0,Mi=null,Ai=0,Ii=0,Fi=0,Ui=0,Bi=null,Vi=0,Wi=1/0;function $i(){Wi=Wo()+500}var Hi,qi=null,Qi=!1,Ki=null,Yi=null,Xi=!1,Gi=null,Ji=90,Zi=[],eu=[],tu=null,nu=0,ru=null,ou=-1,au=0,lu=0,iu=null,uu=!1;function cu(){return 0!=(48&Ni)?Wo():-1!==ou?ou:ou=Wo()}function su(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===$o()?1:2;if(0===au&&(au=Ai),0!==Xo.transition){0!==lu&&(lu=null!==Bi?Bi.pendingLanes:0),e=au;var t=4186112&~lu;return 0==(t&=-t)&&0==(t=(e=4186112&~e)&-e)&&(t=8192),t}return e=$o(),e=Ft(0!=(4&Ni)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),au)}function fu(e,t,n){if(50<nu)throw nu=0,ru=null,Error(l(185));if(null===(e=du(e,t)))return null;Vt(e,t,n),e===Ti&&(Fi|=t,4===Di&&mu(e,ji));var r=$o();1===t?0!=(8&Ni)&&0==(48&Ni)?yu(e):(pu(e,n),0===Ni&&($i(),Ko())):(0==(4&Ni)||98!==r&&99!==r||(null===tu?tu=new Set([e]):tu.add(e)),pu(e,n)),Bi=e}function du(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function pu(e,t){for(var n=e.callbackNode,r=e.suspendedLanes,o=e.pingedLanes,a=e.expirationTimes,i=e.pendingLanes;0<i;){var u=31-Wt(i),c=1<<u,s=a[u];if(-1===s){if(0==(c&r)||0!=(c&o)){s=t,Mt(c);var f=Dt;a[u]=10<=f?s+250:6<=f?s+5e3:-1}}else s<=t&&(e.expiredLanes|=c);i&=~c}if(r=At(e,e===Ti?ji:0),t=Dt,0===r)null!==n&&(n!==Ao&&Po(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==Ao&&Po(n)}15===t?(n=yu.bind(null,e),null===Fo?(Fo=[n],Uo=_o(jo,Yo)):Fo.push(n),n=Ao):14===t?n=Qo(99,yu.bind(null,e)):(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(l(358,e))}}(t),n=Qo(n,hu.bind(null,e))),e.callbackPriority=t,e.callbackNode=n}}function hu(e){if(ou=-1,lu=au=0,0!=(48&Ni))throw Error(l(327));var t=e.callbackNode;if(ju()&&e.callbackNode!==t)return null;var n=At(e,e===Ti?ji:0);if(0===n)return null;var r=n,o=Ni;Ni|=16;var a=Su();for(Ti===e&&ji===r||($i(),ku(e,r));;)try{_u();break}catch(t){Eu(e,t)}if(na(),Pi.current=a,Ni=o,null!==Ri?r=0:(Ti=null,ji=0,r=Di),0!=(Ai&Fi))ku(e,0);else if(0!==r){if(2===r&&(Ni|=64,e.hydrate&&(e.hydrate=!1,qr(e.containerInfo)),0!==(n=It(e))&&(r=xu(e,n))),1===r)throw t=Mi,ku(e,0),mu(e,n),pu(e,Wo()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,r){case 0:case 1:throw Error(l(345));case 2:case 5:Nu(e);break;case 3:if(mu(e,n),(62914560&n)===n&&10<(r=Vi+500-Wo())){if(0!==At(e,0))break;if(((o=e.suspendedLanes)&n)!==n){cu(),e.pingedLanes|=e.suspendedLanes&o;break}e.timeoutHandle=$r(Nu.bind(null,e),r);break}Nu(e);break;case 4:if(mu(e,n),(4186112&n)===n)break;for(r=e.eventTimes,o=-1;0<n;){var i=31-Wt(n);a=1<<i,(i=r[i])>o&&(o=i),n&=~a}if(n=o,10<(n=(120>(n=Wo()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*_i(n/1960))-n)){e.timeoutHandle=$r(Nu.bind(null,e),n);break}Nu(e);break;default:throw Error(l(329))}}return pu(e,Wo()),e.callbackNode===t?hu.bind(null,e):null}function mu(e,t){for(t&=~Ui,t&=~Fi,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-Wt(t),r=1<<n;e[n]=-1,t&=~r}}function yu(e){if(0!=(48&Ni))throw Error(l(327));if(ju(),e===Ti&&0!=(e.expiredLanes&ji)){var t=ji,n=xu(e,t);0!=(Ai&Fi)&&(n=xu(e,t=At(e,t)))}else n=xu(e,t=At(e,0));if(0!==e.tag&&2===n&&(Ni|=64,e.hydrate&&(e.hydrate=!1,qr(e.containerInfo)),0!==(t=It(e))&&(n=xu(e,t))),1===n)throw n=Mi,ku(e,0),mu(e,t),pu(e,Wo()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,Nu(e),pu(e,Wo()),null}function vu(e,t){var n=Ni;Ni|=1;try{return e(t)}finally{0===(Ni=n)&&($i(),Ko())}}function gu(e,t){var n=Ni;Ni&=-2,Ni|=8;try{return e(t)}finally{0===(Ni=n)&&($i(),Ko())}}function bu(e,t){so(zi,Li),Li|=t,Ai|=t}function wu(){Li=zi.current,co(zi)}function ku(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Hr(n)),null!==Ri)for(n=Ri.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&go();break;case 3:za(),co(ho),co(po),Ya();break;case 5:Ma(r);break;case 4:za();break;case 13:case 19:co(Aa);break;case 10:ra(r);break;case 23:case 24:wu()}n=n.return}Ti=e,Ri=Wu(e.current,null),ji=Li=Ai=t,Di=0,Mi=null,Ui=Fi=Ii=0}function Eu(e,t){for(;;){var n=Ri;try{if(na(),Xa.current=Rl,nl){for(var r=Za.memoizedState;null!==r;){var o=r.queue;null!==o&&(o.pending=null),r=r.next}nl=!1}if(Ja=0,tl=el=Za=null,rl=!1,Oi.current=null,null===n||null===n.return){Di=1,Mi=t,Ri=null;break}e:{var a=e,l=n.return,i=n,u=t;if(t=ji,i.flags|=2048,i.firstEffect=i.lastEffect=null,null!==u&&"object"==typeof u&&"function"==typeof u.then){var c=u;if(0==(2&i.mode)){var s=i.alternate;s?(i.updateQueue=s.updateQueue,i.memoizedState=s.memoizedState,i.lanes=s.lanes):(i.updateQueue=null,i.memoizedState=null)}var f=0!=(1&Aa.current),d=l;do{var p;if(p=13===d.tag){var h=d.memoizedState;if(null!==h)p=null!==h.dehydrated;else{var m=d.memoizedProps;p=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!f)}}if(p){var y=d.updateQueue;if(null===y){var v=new Set;v.add(c),d.updateQueue=v}else y.add(c);if(0==(2&d.mode)){if(d.flags|=64,i.flags|=16384,i.flags&=-2981,1===i.tag)if(null===i.alternate)i.tag=17;else{var g=sa(-1,1);g.tag=2,fa(i,g)}i.lanes|=1;break e}u=void 0,i=t;var b=a.pingCache;if(null===b?(b=a.pingCache=new ui,u=new Set,b.set(c,u)):void 0===(u=b.get(c))&&(u=new Set,b.set(c,u)),!u.has(i)){u.add(i);var w=Iu.bind(null,a,c,i);c.then(w,w)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);u=Error((Q(i.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Di&&(Di=2),u=li(u,i),d=l;do{switch(d.tag){case 3:a=u,d.flags|=4096,t&=-t,d.lanes|=t,da(d,ci(0,a,t));break e;case 1:a=u;var k=d.type,E=d.stateNode;if(0==(64&d.flags)&&("function"==typeof k.getDerivedStateFromError||null!==E&&"function"==typeof E.componentDidCatch&&(null===Yi||!Yi.has(E)))){d.flags|=4096,t&=-t,d.lanes|=t,da(d,si(d,a,t));break e}}d=d.return}while(null!==d)}Ou(n)}catch(e){t=e,Ri===n&&null!==n&&(Ri=n=n.return);continue}break}}function Su(){var e=Pi.current;return Pi.current=Rl,null===e?Rl:e}function xu(e,t){var n=Ni;Ni|=16;var r=Su();for(Ti===e&&ji===t||ku(e,t);;)try{Cu();break}catch(t){Eu(e,t)}if(na(),Ni=n,Pi.current=r,null!==Ri)throw Error(l(261));return Ti=null,ji=0,Di}function Cu(){for(;null!==Ri;)Pu(Ri)}function _u(){for(;null!==Ri&&!Oo();)Pu(Ri)}function Pu(e){var t=Hi(e.alternate,e,Li);e.memoizedProps=e.pendingProps,null===t?Ou(e):Ri=t,Oi.current=null}function Ou(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(n=oi(n,t,Li)))return void(Ri=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!=(1073741824&Li)||0==(4&n.mode)){for(var r=0,o=n.child;null!==o;)r|=o.lanes|o.childLanes,o=o.sibling;n.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=ai(t)))return n.flags&=2047,void(Ri=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Ri=t);Ri=t=e}while(null!==t);0===Di&&(Di=5)}function Nu(e){var t=$o();return qo(99,Tu.bind(null,e,t)),null}function Tu(e,t){do{ju()}while(null!==Gi);if(0!=(48&Ni))throw Error(l(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(l(177));e.callbackNode=null;var r=n.lanes|n.childLanes,o=r,a=e.pendingLanes&~o;e.pendingLanes=o,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=o,e.mutableReadLanes&=o,e.entangledLanes&=o,o=e.entanglements;for(var i=e.eventTimes,u=e.expirationTimes;0<a;){var c=31-Wt(a),s=1<<c;o[c]=0,i[c]=-1,u[c]=-1,a&=~s}if(null!==tu&&0==(24&r)&&tu.has(e)&&tu.delete(e),e===Ti&&(Ri=Ti=null,ji=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(o=Ni,Ni|=32,Oi.current=null,Ur=Kt,yr(i=mr())){if("selectionStart"in i)u={start:i.selectionStart,end:i.selectionEnd};else e:if(u=(u=i.ownerDocument)&&u.defaultView||window,(s=u.getSelection&&u.getSelection())&&0!==s.rangeCount){u=s.anchorNode,a=s.anchorOffset,c=s.focusNode,s=s.focusOffset;try{u.nodeType,c.nodeType}catch(e){u=null;break e}var f=0,d=-1,p=-1,h=0,m=0,y=i,v=null;t:for(;;){for(var g;y!==u||0!==a&&3!==y.nodeType||(d=f+a),y!==c||0!==s&&3!==y.nodeType||(p=f+s),3===y.nodeType&&(f+=y.nodeValue.length),null!==(g=y.firstChild);)v=y,y=g;for(;;){if(y===i)break t;if(v===u&&++h===a&&(d=f),v===c&&++m===s&&(p=f),null!==(g=y.nextSibling))break;v=(y=v).parentNode}y=g}u=-1===d||-1===p?null:{start:d,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;Br={focusedElem:i,selectionRange:u},Kt=!1,iu=null,uu=!1,qi=r;do{try{Ru()}catch(e){if(null===qi)throw Error(l(330));Au(qi,e),qi=qi.nextEffect}}while(null!==qi);iu=null,qi=r;do{try{for(i=e;null!==qi;){var b=qi.flags;if(16&b&&ve(qi.stateNode,""),128&b){var w=qi.alternate;if(null!==w){var k=w.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&b){case 2:bi(qi),qi.flags&=-3;break;case 6:bi(qi),qi.flags&=-3,Si(qi.alternate,qi);break;case 1024:qi.flags&=-1025;break;case 1028:qi.flags&=-1025,Si(qi.alternate,qi);break;case 4:Si(qi.alternate,qi);break;case 8:Ei(i,u=qi);var E=u.alternate;vi(u),null!==E&&vi(E)}qi=qi.nextEffect}}catch(e){if(null===qi)throw Error(l(330));Au(qi,e),qi=qi.nextEffect}}while(null!==qi);if(k=Br,w=mr(),b=k.focusedElem,i=k.selectionRange,w!==b&&b&&b.ownerDocument&&hr(b.ownerDocument.documentElement,b)){null!==i&&yr(b)&&(w=i.start,void 0===(k=i.end)&&(k=w),"selectionStart"in b?(b.selectionStart=w,b.selectionEnd=Math.min(k,b.value.length)):(k=(w=b.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),u=b.textContent.length,E=Math.min(i.start,u),i=void 0===i.end?E:Math.min(i.end,u),!k.extend&&E>i&&(u=i,i=E,E=u),u=pr(b,E),a=pr(b,i),u&&a&&(1!==k.rangeCount||k.anchorNode!==u.node||k.anchorOffset!==u.offset||k.focusNode!==a.node||k.focusOffset!==a.offset)&&((w=w.createRange()).setStart(u.node,u.offset),k.removeAllRanges(),E>i?(k.addRange(w),k.extend(a.node,a.offset)):(w.setEnd(a.node,a.offset),k.addRange(w))))),w=[];for(k=b;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof b.focus&&b.focus(),b=0;b<w.length;b++)(k=w[b]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Kt=!!Ur,Br=Ur=null,e.current=n,qi=r;do{try{for(b=e;null!==qi;){var S=qi.flags;if(36&S&&hi(b,qi.alternate,qi),128&S){w=void 0;var x=qi.ref;if(null!==x){var C=qi.stateNode;qi.tag,w=C,"function"==typeof x?x(w):x.current=w}}qi=qi.nextEffect}}catch(e){if(null===qi)throw Error(l(330));Au(qi,e),qi=qi.nextEffect}}while(null!==qi);qi=null,Io(),Ni=o}else e.current=n;if(Xi)Xi=!1,Gi=e,Ji=t;else for(qi=r;null!==qi;)t=qi.nextEffect,qi.nextEffect=null,8&qi.flags&&((S=qi).sibling=null,S.stateNode=null),qi=t;if(0===(r=e.pendingLanes)&&(Yi=null),1===r?e===ru?nu++:(nu=0,ru=e):nu=0,n=n.stateNode,xo&&"function"==typeof xo.onCommitFiberRoot)try{xo.onCommitFiberRoot(So,n,void 0,64==(64&n.current.flags))}catch(e){}if(pu(e,Wo()),Qi)throw Qi=!1,e=Ki,Ki=null,e;return 0!=(8&Ni)||Ko(),null}function Ru(){for(;null!==qi;){var e=qi.alternate;uu||null===iu||(0!=(8&qi.flags)?Ze(qi,iu)&&(uu=!0):13===qi.tag&&Ci(e,qi)&&Ze(qi,iu)&&(uu=!0));var t=qi.flags;0!=(256&t)&&pi(e,qi),0==(512&t)||Xi||(Xi=!0,Qo(97,(function(){return ju(),null}))),qi=qi.nextEffect}}function ju(){if(90!==Ji){var e=97<Ji?97:Ji;return Ji=90,qo(e,Du)}return!1}function Lu(e,t){Zi.push(t,e),Xi||(Xi=!0,Qo(97,(function(){return ju(),null})))}function zu(e,t){eu.push(t,e),Xi||(Xi=!0,Qo(97,(function(){return ju(),null})))}function Du(){if(null===Gi)return!1;var e=Gi;if(Gi=null,0!=(48&Ni))throw Error(l(331));var t=Ni;Ni|=32;var n=eu;eu=[];for(var r=0;r<n.length;r+=2){var o=n[r],a=n[r+1],i=o.destroy;if(o.destroy=void 0,"function"==typeof i)try{i()}catch(e){if(null===a)throw Error(l(330));Au(a,e)}}for(n=Zi,Zi=[],r=0;r<n.length;r+=2){o=n[r],a=n[r+1];try{var u=o.create;o.destroy=u()}catch(e){if(null===a)throw Error(l(330));Au(a,e)}}for(u=e.current.firstEffect;null!==u;)e=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=e;return Ni=t,Ko(),!0}function Mu(e,t,n){fa(e,t=ci(0,t=li(n,t),1)),t=cu(),null!==(e=du(e,1))&&(Vt(e,1,t),pu(e,t))}function Au(e,t){if(3===e.tag)Mu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Mu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Yi||!Yi.has(r))){var o=si(n,e=li(t,e),1);if(fa(n,o),o=cu(),null!==(n=du(n,1)))Vt(n,1,o),pu(n,o);else if("function"==typeof r.componentDidCatch&&(null===Yi||!Yi.has(r)))try{r.componentDidCatch(t,e)}catch(e){}break}}n=n.return}}function Iu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=cu(),e.pingedLanes|=e.suspendedLanes&n,Ti===e&&(ji&n)===n&&(4===Di||3===Di&&(62914560&ji)===ji&&500>Wo()-Vi?ku(e,0):Ui|=n),pu(e,t)}function Fu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===$o()?1:2:(0===au&&(au=Ai),0===(t=Ut(62914560&~au))&&(t=4194304))),n=cu(),null!==(e=du(e,t))&&(Vt(e,t,n),pu(e,n))}function Uu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Bu(e,t,n,r){return new Uu(e,t,n,r)}function Vu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Wu(e,t){var n=e.alternate;return null===n?((n=Bu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function $u(e,t,n,r,o,a){var i=2;if(r=e,"function"==typeof e)Vu(e)&&(i=1);else if("string"==typeof e)i=5;else e:switch(e){case x:return Hu(n.children,o,a,t);case M:i=8,o|=16;break;case C:i=8,o|=1;break;case _:return(e=Bu(12,n,t,8|o)).elementType=_,e.type=_,e.lanes=a,e;case T:return(e=Bu(13,n,t,o)).type=T,e.elementType=T,e.lanes=a,e;case R:return(e=Bu(19,n,t,o)).elementType=R,e.lanes=a,e;case A:return qu(n,o,a,t);case I:return(e=Bu(24,n,t,o)).elementType=I,e.lanes=a,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case P:i=10;break e;case O:i=9;break e;case N:i=11;break e;case j:i=14;break e;case L:i=16,r=null;break e;case z:i=22;break e}throw Error(l(130,null==e?e:typeof e,""))}return(t=Bu(i,n,t,o)).elementType=e,t.type=r,t.lanes=a,t}function Hu(e,t,n,r){return(e=Bu(7,e,r,t)).lanes=n,e}function qu(e,t,n,r){return(e=Bu(23,e,r,t)).elementType=A,e.lanes=n,e}function Qu(e,t,n){return(e=Bu(6,e,null,t)).lanes=n,e}function Ku(e,t,n){return(t=Bu(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Yu(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Bt(0),this.expirationTimes=Bt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Bt(0),this.mutableSourceEagerHydrationData=null}function Xu(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:S,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Gu(e,t,n,r){var o=t.current,a=cu(),i=su(o);e:if(n){t:{if(Ye(n=n._reactInternals)!==n||1!==n.tag)throw Error(l(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(vo(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(l(171))}if(1===n.tag){var c=n.type;if(vo(c)){n=wo(n,c,u);break e}}n=u}else n=fo;return null===t.context?t.context=n:t.pendingContext=n,(t=sa(a,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),fa(o,t),fu(o,i,a),i}function Ju(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Zu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function ec(e,t){Zu(e,t),(e=e.alternate)&&Zu(e,t)}function tc(e,t,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new Yu(e,t,null!=n&&!0===n.hydrate),t=Bu(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,ua(t),e[Zr]=n.current,Rr(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var o=(t=r[e])._getVersion;o=o(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,o]:n.mutableSourceEagerHydrationData.push(t,o)}this._internalRoot=n}function nc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function rc(e,t,n,r,o){var a=n._reactRootContainer;if(a){var l=a._internalRoot;if("function"==typeof o){var i=o;o=function(){var e=Ju(l);i.call(e)}}Gu(t,l,e,o)}else{if(a=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new tc(e,0,t?{hydrate:!0}:void 0)}(n,r),l=a._internalRoot,"function"==typeof o){var u=o;o=function(){var e=Ju(l);u.call(e)}}gu((function(){Gu(t,l,e,o)}))}return Ju(l)}function oc(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nc(t))throw Error(l(200));return Xu(e,t,null,n)}Hi=function(e,t,n){var r=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||ho.current)Ml=!0;else{if(0==(n&r)){switch(Ml=!1,t.tag){case 3:ql(t),Qa();break;case 5:Da(t);break;case 1:vo(t.type)&&ko(t);break;case 4:La(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value;var o=t.type._context;so(Jo,o._currentValue),o._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!=(n&t.child.childLanes)?Gl(e,t,n):(so(Aa,1&Aa.current),null!==(t=ni(e,t,n))?t.sibling:null);so(Aa,1&Aa.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(64&e.flags)){if(r)return ti(e,t,n);t.flags|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null,o.lastEffect=null),so(Aa,Aa.current),r)break;return null;case 23:case 24:return t.lanes=0,Bl(e,t,n)}return ni(e,t,n)}Ml=0!=(16384&e.flags)}else Ml=!1;switch(t.lanes=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,o=yo(t,po.current),aa(t,n),o=ll(null,t,r,e,o,n),t.flags|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,vo(r)){var a=!0;ko(t)}else a=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,ua(t);var i=r.getDerivedStateFromProps;"function"==typeof i&&ya(t,r,i,e),o.updater=va,t.stateNode=o,o._reactInternals=t,ka(t,r,e,n),t=Hl(null,t,r,!0,a,n)}else t.tag=0,Al(null,t,o,n),t=t.child;return t;case 16:o=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,o=(a=o._init)(o._payload),t.type=o,a=t.tag=function(e){if("function"==typeof e)return Vu(e)?1:0;if(null!=e){if((e=e.$$typeof)===N)return 11;if(e===j)return 14}return 2}(o),e=Go(o,e),a){case 0:t=Wl(null,t,o,e,n);break e;case 1:t=$l(null,t,o,e,n);break e;case 11:t=Il(null,t,o,e,n);break e;case 14:t=Fl(null,t,o,Go(o.type,e),r,n);break e}throw Error(l(306,o,""))}return t;case 0:return r=t.type,o=t.pendingProps,Wl(e,t,r,o=t.elementType===r?o:Go(r,o),n);case 1:return r=t.type,o=t.pendingProps,$l(e,t,r,o=t.elementType===r?o:Go(r,o),n);case 3:if(ql(t),r=t.updateQueue,null===e||null===r)throw Error(l(282));if(r=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,ca(e,t),pa(t,r,null,n),(r=t.memoizedState.element)===o)Qa(),t=ni(e,t,n);else{if((a=(o=t.stateNode).hydrate)&&(Ua=Qr(t.stateNode.containerInfo.firstChild),Fa=t,a=Ba=!0),a){if(null!=(e=o.mutableSourceEagerHydrationData))for(o=0;o<e.length;o+=2)(a=e[o])._workInProgressVersionPrimary=e[o+1],Ka.push(a);for(n=Pa(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else Al(e,t,r,n),Qa();t=t.child}return t;case 5:return Da(t),null===e&&$a(t),r=t.type,o=t.pendingProps,a=null!==e?e.memoizedProps:null,i=o.children,Wr(r,o)?i=null:null!==a&&Wr(r,a)&&(t.flags|=16),Vl(e,t),Al(e,t,i,n),t.child;case 6:return null===e&&$a(t),null;case 13:return Gl(e,t,n);case 4:return La(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=_a(t,null,r,n):Al(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,Il(e,t,r,o=t.elementType===r?o:Go(r,o),n);case 7:return Al(e,t,t.pendingProps,n),t.child;case 8:case 12:return Al(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,o=t.pendingProps,i=t.memoizedProps,a=o.value;var u=t.type._context;if(so(Jo,u._currentValue),u._currentValue=a,null!==i)if(u=i.value,0==(a=cr(u,a)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,a):1073741823))){if(i.children===o.children&&!ho.current){t=ni(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){i=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&a)){1===u.tag&&((s=sa(-1,n&-n)).tag=2,fa(u,s)),u.lanes|=n,null!==(s=u.alternate)&&(s.lanes|=n),oa(u.return,n),c.lanes|=n;break}s=s.next}}else i=10===u.tag&&u.type===t.type?null:u.child;if(null!==i)i.return=u;else for(i=u;null!==i;){if(i===t){i=null;break}if(null!==(u=i.sibling)){u.return=i.return,i=u;break}i=i.return}u=i}Al(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(a=t.pendingProps).children,aa(t,n),r=r(o=la(o,a.unstable_observedBits)),t.flags|=1,Al(e,t,r,n),t.child;case 14:return a=Go(o=t.type,t.pendingProps),Fl(e,t,o,a=Go(o.type,a),r,n);case 15:return Ul(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:Go(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,vo(r)?(e=!0,ko(t)):e=!1,aa(t,n),ba(t,r,o),ka(t,r,o,n),Hl(null,t,r,!0,e,n);case 19:return ti(e,t,n);case 23:case 24:return Bl(e,t,n)}throw Error(l(156,t.tag))},tc.prototype.render=function(e){Gu(e,this._internalRoot,null,null)},tc.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Gu(null,e,null,(function(){t[Zr]=null}))},et=function(e){13===e.tag&&(fu(e,4,cu()),ec(e,4))},tt=function(e){13===e.tag&&(fu(e,67108864,cu()),ec(e,67108864))},nt=function(e){if(13===e.tag){var t=cu(),n=su(e);fu(e,n,t),ec(e,n)}},rt=function(e,t){return t()},_e=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=oo(r);if(!o)throw Error(l(90));G(r),ne(r,o)}}}break;case"textarea":ce(e,n);break;case"select":null!=(t=n.value)&&le(e,!!n.multiple,t,!1)}},je=vu,Le=function(e,t,n,r,o){var a=Ni;Ni|=4;try{return qo(98,e.bind(null,t,n,r,o))}finally{0===(Ni=a)&&($i(),Ko())}},ze=function(){0==(49&Ni)&&(function(){if(null!==tu){var e=tu;tu=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,pu(e,Wo())}))}Ko()}(),ju())},De=function(e,t){var n=Ni;Ni|=2;try{return e(t)}finally{0===(Ni=n)&&($i(),Ko())}};var ac={Events:[no,ro,oo,Te,Re,ju,{current:!1}]},lc={findFiberByHostInstance:to,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"},ic={bundleType:lc.bundleType,version:lc.version,rendererPackageName:lc.rendererPackageName,rendererConfig:lc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:k.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Je(e))?null:e.stateNode},findFiberByHostInstance:lc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var uc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!uc.isDisabled&&uc.supportsFiber)try{So=uc.inject(ic),xo=uc}catch(me){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ac,t.createPortal=oc,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(l(188));throw Error(l(268,Object.keys(e)))}return null===(e=Je(t))?null:e.stateNode},t.flushSync=function(e,t){var n=Ni;if(0!=(48&n))return e(t);Ni|=1;try{if(e)return qo(99,e.bind(null,t))}finally{Ni=n,Ko()}},t.hydrate=function(e,t,n){if(!nc(t))throw Error(l(200));return rc(null,e,t,!0,n)},t.render=function(e,t,n){if(!nc(t))throw Error(l(200));return rc(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!nc(e))throw Error(l(40));return!!e._reactRootContainer&&(gu((function(){rc(null,null,e,!1,(function(){e._reactRootContainer=null,e[Zr]=null}))})),!0)},t.unstable_batchedUpdates=vu,t.unstable_createPortal=function(e,t){return oc(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!nc(n))throw Error(l(200));if(null==e||void 0===e._reactInternals)throw Error(l(38));return rc(e,t,n,!1,r)},t.version="17.0.2"},935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(448)},408:(e,t,n)=>{"use strict";var r=n(418),o=60103,a=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var l=60109,i=60110,u=60112;t.Suspense=60113;var c=60115,s=60116;if("function"==typeof Symbol&&Symbol.for){var f=Symbol.for;o=f("react.element"),a=f("react.portal"),t.Fragment=f("react.fragment"),t.StrictMode=f("react.strict_mode"),t.Profiler=f("react.profiler"),l=f("react.provider"),i=f("react.context"),u=f("react.forward_ref"),t.Suspense=f("react.suspense"),c=f("react.memo"),s=f("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m={};function y(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}function v(){}function g(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=y.prototype;var b=g.prototype=new v;b.constructor=g,r(b,y.prototype),b.isPureReactComponent=!0;var w={current:null},k=Object.prototype.hasOwnProperty,E={key:!0,ref:!0,__self:!0,__source:!0};function S(e,t,n){var r,a={},l=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(l=""+t.key),t)k.call(t,r)&&!E.hasOwnProperty(r)&&(a[r]=t[r]);var u=arguments.length-2;if(1===u)a.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];a.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===a[r]&&(a[r]=u[r]);return{$$typeof:o,type:e,key:l,ref:i,props:a,_owner:w.current}}function x(e){return"object"==typeof e&&null!==e&&e.$$typeof===o}var C=/\/+/g;function _(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function P(e,t,n,r,l){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var u=!1;if(null===e)u=!0;else switch(i){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case o:case a:u=!0}}if(u)return l=l(u=e),e=""===r?"."+_(u,0):r,Array.isArray(l)?(n="",null!=e&&(n=e.replace(C,"$&/")+"/"),P(l,t,n,"",(function(e){return e}))):null!=l&&(x(l)&&(l=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(l,n+(!l.key||u&&u.key===l.key?"":(""+l.key).replace(C,"$&/")+"/")+e)),t.push(l)),1;if(u=0,r=""===r?".":r+":",Array.isArray(e))for(var c=0;c<e.length;c++){var s=r+_(i=e[c],c);u+=P(i,t,n,s,l)}else if(s=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e),"function"==typeof s)for(e=s.call(e),c=0;!(i=e.next()).done;)u+=P(i=i.value,t,n,s=r+_(i,c++),l);else if("object"===i)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return u}function O(e,t,n){if(null==e)return e;var r=[],o=0;return P(e,r,"","",(function(e){return t.call(n,e,o++)})),r}function N(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var T={current:null};function R(){var e=T.current;if(null===e)throw Error(p(321));return e}var j={ReactCurrentDispatcher:T,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:O,forEach:function(e,t,n){O(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return O(e,(function(){t++})),t},toArray:function(e){return O(e,(function(e){return e}))||[]},only:function(e){if(!x(e))throw Error(p(143));return e}},t.Component=y,t.PureComponent=g,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=j,t.cloneElement=function(e,t,n){if(null==e)throw Error(p(267,e));var a=r({},e.props),l=e.key,i=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,u=w.current),void 0!==t.key&&(l=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)k.call(t,s)&&!E.hasOwnProperty(s)&&(a[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)a.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];a.children=c}return{$$typeof:o,type:e.type,key:l,ref:i,props:a,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:i,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:l,_context:e},e.Consumer=e},t.createElement=S,t.createFactory=function(e){var t=S.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=x,t.lazy=function(e){return{$$typeof:s,_payload:{_status:-1,_result:e},_init:N}},t.memo=function(e,t){return{$$typeof:c,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return R().useCallback(e,t)},t.useContext=function(e,t){return R().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return R().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return R().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return R().useLayoutEffect(e,t)},t.useMemo=function(e,t){return R().useMemo(e,t)},t.useReducer=function(e,t,n){return R().useReducer(e,t,n)},t.useRef=function(e){return R().useRef(e)},t.useState=function(e){return R().useState(e)},t.version="17.0.2"},294:(e,t,n)=>{"use strict";e.exports=n(408)},666:e=>{var t=function(e){"use strict";var t,n=Object.prototype,r=n.hasOwnProperty,o="function"==typeof Symbol?Symbol:{},a=o.iterator||"@@iterator",l=o.asyncIterator||"@@asyncIterator",i=o.toStringTag||"@@toStringTag";function u(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{u({},"")}catch(e){u=function(e,t,n){return e[t]=n}}function c(e,t,n,r){var o=t&&t.prototype instanceof y?t:y,a=Object.create(o.prototype),l=new O(r||[]);return a._invoke=function(e,t,n){var r=f;return function(o,a){if(r===p)throw new Error("Generator is already running");if(r===h){if("throw"===o)throw a;return T()}for(n.method=o,n.arg=a;;){var l=n.delegate;if(l){var i=C(l,n);if(i){if(i===m)continue;return i}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(r===f)throw r=h,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r=p;var u=s(e,t,n);if("normal"===u.type){if(r=n.done?h:d,u.arg===m)continue;return{value:u.arg,done:n.done}}"throw"===u.type&&(r=h,n.method="throw",n.arg=u.arg)}}}(e,n,l),a}function s(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=c;var f="suspendedStart",d="suspendedYield",p="executing",h="completed",m={};function y(){}function v(){}function g(){}var b={};u(b,a,(function(){return this}));var w=Object.getPrototypeOf,k=w&&w(w(N([])));k&&k!==n&&r.call(k,a)&&(b=k);var E=g.prototype=y.prototype=Object.create(b);function S(e){["next","throw","return"].forEach((function(t){u(e,t,(function(e){return this._invoke(t,e)}))}))}function x(e,t){function n(o,a,l,i){var u=s(e[o],e,a);if("throw"!==u.type){var c=u.arg,f=c.value;return f&&"object"==typeof f&&r.call(f,"__await")?t.resolve(f.__await).then((function(e){n("next",e,l,i)}),(function(e){n("throw",e,l,i)})):t.resolve(f).then((function(e){c.value=e,l(c)}),(function(e){return n("throw",e,l,i)}))}i(u.arg)}var o;this._invoke=function(e,r){function a(){return new t((function(t,o){n(e,r,t,o)}))}return o=o?o.then(a,a):a()}}function C(e,n){var r=e.iterator[n.method];if(r===t){if(n.delegate=null,"throw"===n.method){if(e.iterator.return&&(n.method="return",n.arg=t,C(e,n),"throw"===n.method))return m;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return m}var o=s(r,e.iterator,n.arg);if("throw"===o.type)return n.method="throw",n.arg=o.arg,n.delegate=null,m;var a=o.arg;return a?a.done?(n[e.resultName]=a.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=t),n.delegate=null,m):a:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,m)}function _(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function P(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function O(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(_,this),this.reset(!0)}function N(e){if(e){var n=e[a];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,l=function n(){for(;++o<e.length;)if(r.call(e,o))return n.value=e[o],n.done=!1,n;return n.value=t,n.done=!0,n};return l.next=l}}return{next:T}}function T(){return{value:t,done:!0}}return v.prototype=g,u(E,"constructor",g),u(g,"constructor",v),v.displayName=u(g,i,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===v||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,g):(e.__proto__=g,u(e,i,"GeneratorFunction")),e.prototype=Object.create(E),e},e.awrap=function(e){return{__await:e}},S(x.prototype),u(x.prototype,l,(function(){return this})),e.AsyncIterator=x,e.async=function(t,n,r,o,a){void 0===a&&(a=Promise);var l=new x(c(t,n,r,o),a);return e.isGeneratorFunction(n)?l:l.next().then((function(e){return e.done?e.value:l.next()}))},S(E),u(E,i,"Generator"),u(E,a,(function(){return this})),u(E,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},e.values=N,O.prototype={constructor:O,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(P),!e)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function o(r,o){return i.type="throw",i.arg=e,n.next=r,o&&(n.method="next",n.arg=t),!!o}for(var a=this.tryEntries.length-1;a>=0;--a){var l=this.tryEntries[a],i=l.completion;if("root"===l.tryLoc)return o("end");if(l.tryLoc<=this.prev){var u=r.call(l,"catchLoc"),c=r.call(l,"finallyLoc");if(u&&c){if(this.prev<l.catchLoc)return o(l.catchLoc,!0);if(this.prev<l.finallyLoc)return o(l.finallyLoc)}else if(u){if(this.prev<l.catchLoc)return o(l.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<l.finallyLoc)return o(l.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var o=this.tryEntries[n];if(o.tryLoc<=this.prev&&r.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var a=o;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var l=a?a.completion:{};return l.type=e,l.arg=t,a?(this.method="next",this.next=a.finallyLoc,m):this.complete(l)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),m},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),P(n),m}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var o=r.arg;P(n)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,r){return this.delegate={iterator:N(e),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=t),m}},e}(e.exports);try{regeneratorRuntime=t}catch(e){"object"==typeof globalThis?globalThis.regeneratorRuntime=t:Function("r","regeneratorRuntime = r")(t)}},53:(e,t)=>{"use strict";var n,r,o,a;if("object"==typeof performance&&"function"==typeof performance.now){var l=performance;t.unstable_now=function(){return l.now()}}else{var i=Date,u=i.now();t.unstable_now=function(){return i.now()-u}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var c=null,s=null,f=function(){if(null!==c)try{var e=t.unstable_now();c(!0,e),c=null}catch(e){throw setTimeout(f,0),e}};n=function(e){null!==c?setTimeout(n,0,e):(c=e,setTimeout(f,0))},r=function(e,t){s=setTimeout(e,t)},o=function(){clearTimeout(s)},t.unstable_shouldYield=function(){return!1},a=t.unstable_forceFrameRate=function(){}}else{var d=window.setTimeout,p=window.clearTimeout;if("undefined"!=typeof console){var h=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof h&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var m=!1,y=null,v=-1,g=5,b=0;t.unstable_shouldYield=function(){return t.unstable_now()>=b},a=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):g=0<e?Math.floor(1e3/e):5};var w=new MessageChannel,k=w.port2;w.port1.onmessage=function(){if(null!==y){var e=t.unstable_now();b=e+g;try{y(!0,e)?k.postMessage(null):(m=!1,y=null)}catch(e){throw k.postMessage(null),e}}else m=!1},n=function(e){y=e,m||(m=!0,k.postMessage(null))},r=function(e,n){v=d((function(){e(t.unstable_now())}),n)},o=function(){p(v),v=-1}}function E(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,o=e[r];if(!(void 0!==o&&0<C(o,t)))break e;e[r]=t,e[n]=o,n=r}}function S(e){return void 0===(e=e[0])?null:e}function x(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var a=2*(r+1)-1,l=e[a],i=a+1,u=e[i];if(void 0!==l&&0>C(l,n))void 0!==u&&0>C(u,l)?(e[r]=u,e[i]=n,r=i):(e[r]=l,e[a]=n,r=a);else{if(!(void 0!==u&&0>C(u,n)))break e;e[r]=u,e[i]=n,r=i}}}return t}return null}function C(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var _=[],P=[],O=1,N=null,T=3,R=!1,j=!1,L=!1;function z(e){for(var t=S(P);null!==t;){if(null===t.callback)x(P);else{if(!(t.startTime<=e))break;x(P),t.sortIndex=t.expirationTime,E(_,t)}t=S(P)}}function D(e){if(L=!1,z(e),!j)if(null!==S(_))j=!0,n(M);else{var t=S(P);null!==t&&r(D,t.startTime-e)}}function M(e,n){j=!1,L&&(L=!1,o()),R=!0;var a=T;try{for(z(n),N=S(_);null!==N&&(!(N.expirationTime>n)||e&&!t.unstable_shouldYield());){var l=N.callback;if("function"==typeof l){N.callback=null,T=N.priorityLevel;var i=l(N.expirationTime<=n);n=t.unstable_now(),"function"==typeof i?N.callback=i:N===S(_)&&x(_),z(n)}else x(_);N=S(_)}if(null!==N)var u=!0;else{var c=S(P);null!==c&&r(D,c.startTime-n),u=!1}return u}finally{N=null,T=a,R=!1}}var A=a;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){j||R||(j=!0,n(M))},t.unstable_getCurrentPriorityLevel=function(){return T},t.unstable_getFirstCallbackNode=function(){return S(_)},t.unstable_next=function(e){switch(T){case 1:case 2:case 3:var t=3;break;default:t=T}var n=T;T=t;try{return e()}finally{T=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=A,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=T;T=e;try{return t()}finally{T=n}},t.unstable_scheduleCallback=function(e,a,l){var i=t.unstable_now();switch(l="object"==typeof l&&null!==l&&"number"==typeof(l=l.delay)&&0<l?i+l:i,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:O++,callback:a,priorityLevel:e,startTime:l,expirationTime:u=l+u,sortIndex:-1},l>i?(e.sortIndex=l,E(P,e),null===S(_)&&e===S(P)&&(L?o():L=!0,r(D,l-i))):(e.sortIndex=u,E(_,e),j||R||(j=!0,n(M))),e},t.unstable_wrapCallback=function(e){var t=T;return function(){var n=T;T=t;try{return e.apply(this,arguments)}finally{T=n}}}},840:(e,t,n)=>{"use strict";e.exports=n(53)}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={exports:{}};return e[r](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";var e,t=n(294),r=n(935),o=n(697),a=n.n(o);function l(){return l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},l.apply(this,arguments)}!function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"}(e||(e={}));var i="beforeunload";function u(e){e.preventDefault(),e.returnValue=""}function c(){var e=[];return{get length(){return e.length},push:function(t){return e.push(t),function(){e=e.filter((function(e){return e!==t}))}},call:function(t){e.forEach((function(e){return e&&e(t)}))}}}function s(e){var t=e.pathname,n=void 0===t?"/":t,r=e.search,o=void 0===r?"":r,a=e.hash,l=void 0===a?"":a;return o&&"?"!==o&&(n+="?"===o.charAt(0)?o:"?"+o),l&&"#"!==l&&(n+="#"===l.charAt(0)?l:"#"+l),n}function f(e){var t={};if(e){var n=e.indexOf("#");n>=0&&(t.hash=e.substr(n),e=e.substr(0,n));var r=e.indexOf("?");r>=0&&(t.search=e.substr(r),e=e.substr(0,r)),e&&(t.pathname=e)}return t}const d=(0,t.createContext)(null),p=(0,t.createContext)(null),h=(0,t.createContext)({outlet:null,matches:[]});function m(e,t){if(!e)throw new Error(t)}function y(e,t,n){void 0===n&&(n="/");let r=x(("string"==typeof t?f(t):t).pathname||"/",n);if(null==r)return null;let o=v(e);!function(e){e.sort(((e,t)=>e.score!==t.score?t.score-e.score:function(e,t){return e.length===t.length&&e.slice(0,-1).every(((e,n)=>e===t[n]))?e[e.length-1]-t[t.length-1]:0}(e.routesMeta.map((e=>e.childrenIndex)),t.routesMeta.map((e=>e.childrenIndex)))))}(o);let a=null;for(let e=0;null==a&&e<o.length;++e)a=k(o[e],r);return a}function v(e,t,n,r){return void 0===t&&(t=[]),void 0===n&&(n=[]),void 0===r&&(r=""),e.forEach(((e,o)=>{let a={relativePath:e.path||"",caseSensitive:!0===e.caseSensitive,childrenIndex:o,route:e};a.relativePath.startsWith("/")&&(a.relativePath.startsWith(r)||m(!1),a.relativePath=a.relativePath.slice(r.length));let l=C([r,a.relativePath]),i=n.concat(a);e.children&&e.children.length>0&&(!0===e.index&&m(!1),v(e.children,t,i,l)),(null!=e.path||e.index)&&t.push({path:l,score:w(l,e.index),routesMeta:i})})),t}const g=/^:\w+$/,b=e=>"*"===e;function w(e,t){let n=e.split("/"),r=n.length;return n.some(b)&&(r+=-2),t&&(r+=2),n.filter((e=>!b(e))).reduce(((e,t)=>e+(g.test(t)?3:""===t?1:10)),r)}function k(e,t){let{routesMeta:n}=e,r={},o="/",a=[];for(let e=0;e<n.length;++e){let l=n[e],i=e===n.length-1,u="/"===o?t:t.slice(o.length)||"/",c=E({path:l.relativePath,caseSensitive:l.caseSensitive,end:i},u);if(!c)return null;Object.assign(r,c.params);let s=l.route;a.push({params:r,pathname:C([o,c.pathname]),pathnameBase:_(C([o,c.pathnameBase])),route:s}),"/"!==c.pathnameBase&&(o=C([o,c.pathnameBase]))}return a}function E(e,t){"string"==typeof e&&(e={path:e,caseSensitive:!1,end:!0});let[n,r]=function(e,t,n){void 0===t&&(t=!1),void 0===n&&(n=!0);let r=[],o="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^$?{}|()[\]]/g,"\\$&").replace(/:(\w+)/g,((e,t)=>(r.push(t),"([^\\/]+)")));return e.endsWith("*")?(r.push("*"),o+="*"===e||"/*"===e?"(.*)$":"(?:\\/(.+)|\\/*)$"):o+=n?"\\/*$":"(?:(?=[.~-]|%[0-9A-F]{2})|\\b|\\/|$)",[new RegExp(o,t?void 0:"i"),r]}(e.path,e.caseSensitive,e.end),o=t.match(n);if(!o)return null;let a=o[0],l=a.replace(/(.)\/+$/,"$1"),i=o.slice(1);return{params:r.reduce(((e,t,n)=>{if("*"===t){let e=i[n]||"";l=a.slice(0,a.length-e.length).replace(/(.)\/+$/,"$1")}return e[t]=function(e,t){try{return decodeURIComponent(e)}catch(t){return e}}(i[n]||""),e}),{}),pathname:a,pathnameBase:l,pattern:e}}function S(e,t,n){let r,o="string"==typeof e?f(e):e,a=""===e||""===o.pathname?"/":o.pathname;if(null==a)r=n;else{let e=t.length-1;if(a.startsWith("..")){let t=a.split("/");for(;".."===t[0];)t.shift(),e-=1;o.pathname=t.join("/")}r=e>=0?t[e]:"/"}let l=function(e,t){void 0===t&&(t="/");let{pathname:n,search:r="",hash:o=""}="string"==typeof e?f(e):e,a=n?n.startsWith("/")?n:function(e,t){let n=t.replace(/\/+$/,"").split("/");return e.split("/").forEach((e=>{".."===e?n.length>1&&n.pop():"."!==e&&n.push(e)})),n.length>1?n.join("/"):"/"}(n,t):t;return{pathname:a,search:P(r),hash:O(o)}}(o,r);return a&&"/"!==a&&a.endsWith("/")&&!l.pathname.endsWith("/")&&(l.pathname+="/"),l}function x(e,t){if("/"===t)return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let n=e.charAt(t.length);return n&&"/"!==n?null:e.slice(t.length)||"/"}const C=e=>e.join("/").replace(/\/\/+/g,"/"),_=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/"),P=e=>e&&"?"!==e?e.startsWith("?")?e:"?"+e:"",O=e=>e&&"#"!==e?e.startsWith("#")?e:"#"+e:"";function N(){return null!=(0,t.useContext)(p)}function T(){return N()||m(!1),(0,t.useContext)(p).location}function R(e){let{matches:n}=(0,t.useContext)(h),{pathname:r}=T(),o=JSON.stringify(n.map((e=>e.pathnameBase)));return(0,t.useMemo)((()=>S(e,JSON.parse(o),r)),[e,o,r])}function j(e){m(!1)}function L(n){let{basename:r="/",children:o=null,location:a,navigationType:l=e.Pop,navigator:i,static:u=!1}=n;N()&&m(!1);let c=_(r),s=(0,t.useMemo)((()=>({basename:c,navigator:i,static:u})),[c,i,u]);"string"==typeof a&&(a=f(a));let{pathname:h="/",search:y="",hash:v="",state:g=null,key:b="default"}=a,w=(0,t.useMemo)((()=>{let e=x(h,c);return null==e?null:{pathname:e,search:y,hash:v,state:g,key:b}}),[c,h,y,v,g,b]);return null==w?null:(0,t.createElement)(d.Provider,{value:s},(0,t.createElement)(p.Provider,{children:o,value:{location:w,navigationType:l}}))}function z(e){let{children:n,location:r}=e;return function(e,n){N()||m(!1);let{matches:r}=(0,t.useContext)(h),o=r[r.length-1],a=o?o.params:{},l=(o&&o.pathname,o?o.pathnameBase:"/");o&&o.route;let i,u=T();if(n){var c;let e="string"==typeof n?f(n):n;"/"===l||(null==(c=e.pathname)?void 0:c.startsWith(l))||m(!1),i=e}else i=u;let s=i.pathname||"/",d=y(e,{pathname:"/"===l?s:s.slice(l.length)||"/"});return function(e,n){return void 0===n&&(n=[]),null==e?null:e.reduceRight(((r,o,a)=>(0,t.createElement)(h.Provider,{children:void 0!==o.route.element?o.route.element:r,value:{outlet:r,matches:n.concat(e.slice(0,a+1))}})),null)}(d&&d.map((e=>Object.assign({},e,{params:Object.assign({},a,e.params),pathname:C([l,e.pathname]),pathnameBase:"/"===e.pathnameBase?l:C([l,e.pathnameBase])}))),r)}(D(n),r)}function D(e){let n=[];return t.Children.forEach(e,(e=>{if(!(0,t.isValidElement)(e))return;if(e.type===t.Fragment)return void n.push.apply(n,D(e.props.children));e.type!==j&&m(!1);let r={caseSensitive:e.props.caseSensitive,element:e.props.element,index:e.props.index,path:e.props.path};e.props.children&&(r.children=D(e.props.children)),n.push(r)})),n}function M(){return M=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},M.apply(this,arguments)}function A(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}const I=["onClick","reloadDocument","replace","state","target","to"],F=["aria-current","caseSensitive","className","end","style","to","children"];function U(n){let{basename:r,children:o,window:a}=n,d=(0,t.useRef)();null==d.current&&(d.current=function(t){void 0===t&&(t={});var n=t.window,r=void 0===n?document.defaultView:n,o=r.history;function a(){var e=f(r.location.hash.substr(1)),t=e.pathname,n=void 0===t?"/":t,a=e.search,l=void 0===a?"":a,i=e.hash,u=void 0===i?"":i,c=o.state||{};return[c.idx,{pathname:n,search:l,hash:u,state:c.usr||null,key:c.key||"default"}]}var d=null;function p(){if(d)b.call(d),d=null;else{var t=e.Pop,n=a(),r=n[0],o=n[1];if(b.length){if(null!=r){var l=y-r;l&&(d={action:t,location:o,retry:function(){C(-1*l)}},C(l))}}else x(t)}}r.addEventListener("popstate",p),r.addEventListener("hashchange",(function(){s(a()[1])!==s(v)&&p()}));var h=e.Pop,m=a(),y=m[0],v=m[1],g=c(),b=c();function w(e){return function(){var e=document.querySelector("base"),t="";if(e&&e.getAttribute("href")){var n=r.location.href,o=n.indexOf("#");t=-1===o?n:n.slice(0,o)}return t}()+"#"+("string"==typeof e?e:s(e))}function k(e,t){return void 0===t&&(t=null),l({pathname:v.pathname,hash:"",search:""},"string"==typeof e?f(e):e,{state:t,key:Math.random().toString(36).substr(2,8)})}function E(e,t){return[{usr:e.state,key:e.key,idx:t},w(e)]}function S(e,t,n){return!b.length||(b.call({action:e,location:t,retry:n}),!1)}function x(e){h=e;var t=a();y=t[0],v=t[1],g.call({action:h,location:v})}function C(e){o.go(e)}return null==y&&(y=0,o.replaceState(l({},o.state,{idx:y}),"")),{get action(){return h},get location(){return v},createHref:w,push:function t(n,a){var l=e.Push,i=k(n,a);if(S(l,i,(function(){t(n,a)}))){var u=E(i,y+1),c=u[0],s=u[1];try{o.pushState(c,"",s)}catch(e){r.location.assign(s)}x(l)}},replace:function t(n,r){var a=e.Replace,l=k(n,r);if(S(a,l,(function(){t(n,r)}))){var i=E(l,y),u=i[0],c=i[1];o.replaceState(u,"",c),x(a)}},go:C,back:function(){C(-1)},forward:function(){C(1)},listen:function(e){return g.push(e)},block:function(e){var t=b.push(e);return 1===b.length&&r.addEventListener(i,u),function(){t(),b.length||r.removeEventListener(i,u)}}}}({window:a}));let p=d.current,[h,m]=(0,t.useState)({action:p.action,location:p.location});return(0,t.useLayoutEffect)((()=>p.listen(m)),[p]),(0,t.createElement)(L,{basename:r,children:o,location:h.location,navigationType:h.action,navigator:p})}const B=(0,t.forwardRef)((function(e,n){let{onClick:r,reloadDocument:o,replace:a=!1,state:l,target:i,to:u}=e,c=A(e,I),p=function(e){N()||m(!1);let{basename:n,navigator:r}=(0,t.useContext)(d),{hash:o,pathname:a,search:l}=R(e),i=a;if("/"!==n){let t=function(e){return""===e||""===e.pathname?"/":"string"==typeof e?f(e).pathname:e.pathname}(e),r=null!=t&&t.endsWith("/");i="/"===a?n+(r?"/":""):C([n,a])}return r.createHref({pathname:i,search:l,hash:o})}(u),y=function(e,n){let{target:r,replace:o,state:a}=void 0===n?{}:n,l=function(){N()||m(!1);let{basename:e,navigator:n}=(0,t.useContext)(d),{matches:r}=(0,t.useContext)(h),{pathname:o}=T(),a=JSON.stringify(r.map((e=>e.pathnameBase))),l=(0,t.useRef)(!1);return(0,t.useEffect)((()=>{l.current=!0})),(0,t.useCallback)((function(t,r){if(void 0===r&&(r={}),!l.current)return;if("number"==typeof t)return void n.go(t);let i=S(t,JSON.parse(a),o);"/"!==e&&(i.pathname=C([e,i.pathname])),(r.replace?n.replace:n.push)(i,r.state)}),[e,n,a,o])}(),i=T(),u=R(e);return(0,t.useCallback)((t=>{if(!(0!==t.button||r&&"_self"!==r||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(t))){t.preventDefault();let n=!!o||s(i)===s(u);l(e,{replace:n,state:a})}}),[i,l,u,o,a,r,e])}(u,{replace:a,state:l,target:i});return(0,t.createElement)("a",M({},c,{href:p,onClick:function(e){r&&r(e),e.defaultPrevented||o||y(e)},ref:n,target:i}))})),V=(0,t.forwardRef)((function(e,n){let{"aria-current":r="page",caseSensitive:o=!1,className:a="",end:l=!1,style:i,to:u,children:c}=e,s=A(e,F),f=T(),d=R(u),p=f.pathname,h=d.pathname;o||(p=p.toLowerCase(),h=h.toLowerCase());let m,y=p===h||!l&&p.startsWith(h)&&"/"===p.charAt(h.length),v=y?r:void 0;m="function"==typeof a?a({isActive:y}):[a,y?"active":null].filter(Boolean).join(" ");let g="function"==typeof i?i({isActive:y}):i;return(0,t.createElement)(B,M({},s,{"aria-current":v,className:m,ref:n,style:g,to:u}),"function"==typeof c?c({isActive:y}):c)}));var W=function(e){var n=e.branding;return t.createElement("nav",{className:"navbar navbar-expend-sm navbar-dark bg-success mb-3 py-0"},t.createElement("div",{className:"container"},t.createElement("a",{href:"/",className:"navbar-brand"},n),t.createElement("div",null,t.createElement("ul",{className:"navbar-nav"},t.createElement("li",{className:"navbar-item "},t.createElement(V,{to:"/",className:"nav-link"},t.createElement("i",{className:"fa fa-home m-1"}),"Home")),t.createElement("li",{className:"navbar-item"},t.createElement(V,{to:"/layout/add",className:"nav-link"},t.createElement("i",{className:"fa fa-plus m-1"}),"Add")),t.createElement("li",{className:"navbar-item"},t.createElement(V,{to:"/pages/about",className:"nav-link"},t.createElement("i",{className:"fa fa-question m-1"}),"About"))))))};W.defaultProps={branding:"My App"},W.propTypes={branding:a().string.isRequired};const $=W;var H=n(669),q=n.n(H);function Q(e){return Q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Q(e)}function K(e,t,n,r,o,a,l){try{var i=e[a](l),u=i.value}catch(e){return void n(e)}i.done?t(u):Promise.resolve(u).then(r,o)}function Y(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function X(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function G(e,t){return G=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},G(e,t)}function J(e,t){if(t&&("object"===Q(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return Z(e)}function Z(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function ee(e){return ee=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},ee(e)}function te(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function ne(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function re(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?ne(Object(n),!0).forEach((function(t){oe(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):ne(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function oe(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var ae=t.createContext(),le=function(e,t){switch(t.type){case"DELETE_CONTACT":return re(re({},e),{},{contacts:e.contacts.filter((function(e){return e.id!==t.payload}))});case"UPDATE_CONTACT":return re(re({},e),{},{contacts:e.contacts.map((function(e){e.id===t.payload.id&&(e=t.payload)}))});case"ADD_CONTACT":return re(re({},e),{},{contacts:[t.payload].concat((n=e.contacts,function(e){if(Array.isArray(e))return te(e)}(n)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(n)||function(e,t){if(e){if("string"==typeof e)return te(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?te(e,t):void 0}}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()))});default:return e}var n};const ie=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&G(e,t)}(c,e);var n,r,o,a,l,i,u=(l=c,i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=ee(l);if(i){var n=ee(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return J(this,e)});function c(){var e;Y(this,c);for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return oe(Z(e=u.call.apply(u,[this].concat(n))),"state",{contacts:[],dispatch:function(t){return e.setState((function(e){return le(e,t)}))}}),e}return n=c,r=[{key:"componentDidMount",value:(o=regeneratorRuntime.mark((function e(){var t;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,q().get("https://jsonplaceholder.typicode.com/users");case 2:t=e.sent,this.setState({contacts:t.data});case 4:case"end":return e.stop()}}),e,this)})),a=function(){var e=this,t=arguments;return new Promise((function(n,r){var a=o.apply(e,t);function l(e){K(a,n,r,l,i,"next",e)}function i(e){K(a,n,r,l,i,"throw",e)}l(void 0)}))},function(){return a.apply(this,arguments)})},{key:"render",value:function(){return t.createElement(ae.Provider,{value:re({},this.state)},this.props.children)}}],r&&X(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),c}(t.Component);var ue=ae.Consumer,ce=n(411),se=n.n(ce),fe=function(e){var n=e.label,r=e.name,o=e.value,a=e.placeholder,l=e.type,i=e.onChange,u=e.error;return t.createElement("div",{className:"form-group"},t.createElement("label",{htmlFor:r},n),t.createElement("input",{onChange:i,type:l,name:r,className:se()("is-invalid form-control form-control-lg",{"is-invalid":u}),placeholder:a,value:o}),u&&t.createElement("div",{className:"invalid-feedback"},u))};fe.propTypes={label:a().string.isRequired,name:a().string.isRequired,placeholder:a().string.isRequired,value:a().string.isRequired,type:a().string.isRequired,onChange:a().func.isRequired,error:a().string},fe.defaultProps={type:"text"};const de=fe;function pe(e){return pe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},pe(e)}function he(e,t,n,r,o,a,l){try{var i=e[a](l),u=i.value}catch(e){return void n(e)}i.done?t(u):Promise.resolve(u).then(r,o)}function me(e){return function(){var t=this,n=arguments;return new Promise((function(r,o){var a=e.apply(t,n);function l(e){he(a,r,o,l,i,"next",e)}function i(e){he(a,r,o,l,i,"throw",e)}l(void 0)}))}}function ye(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function ve(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function ge(e,t){return ge=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},ge(e,t)}function be(e,t){if(t&&("object"===pe(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return we(e)}function we(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function ke(e){return ke=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},ke(e)}function Ee(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n(666);const Se=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&ge(e,t)}(i,e);var n,r,o,a,l=(o=i,a=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=ke(o);if(a){var n=ke(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return be(this,e)});function i(){var e;ye(this,i);for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return Ee(we(e=l.call.apply(l,[this].concat(n))),"state",{name:"",email:"",phone:"",errors:{}}),Ee(we(e),"onChange",(function(t){e.setState(Ee({},t.target.name,t.target.value))})),Ee(we(e),"onSubmitHandler",function(){var t=me(regeneratorRuntime.mark((function t(n,r){var o,a,l,i,u,c;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(r.preventDefault(),o=e.state,a=o.name,l=o.email,i=o.phone,""!==a){t.next=5;break}return e.setState({errors:{name:"Name is required!"}}),t.abrupt("return");case 5:if(""!==l){t.next=8;break}return e.setState({errors:{email:"Email is required!"}}),t.abrupt("return");case 8:if(""!==i){t.next=11;break}return e.setState({errors:{phone:"Number is required!"}}),t.abrupt("return");case 11:return u={name:a,email:l,phone:i},t.next=14,q().post("https://jsonplaceholder.typicode.com/users",u);case 14:c=t.sent,n({type:"ADD_CONTACT",payload:c.data}),e.setState({name:"",email:"",phone:"",errors:{}}),browserHistory.push("/");case 18:case"end":return t.stop()}}),t)})));return function(e,n){return t.apply(this,arguments)}}()),e}return n=i,(r=[{key:"render",value:function(){var e=this,n=this.state,r=n.name,o=n.email,a=n.phone,l=n.errors;return t.createElement(ue,null,(function(n){var i=n.dispatch;return t.createElement("div",{className:"card mb-3"},t.createElement("div",{className:"card-header"},"Add Contact"),t.createElement("div",{className:"card-body"},t.createElement("form",{onSubmit:e.onSubmitHandler.bind(e,i)},t.createElement(de,{label:"Name",type:"text",name:"name",value:r,placeholder:"Enter Name...",onChange:e.onChange,error:l.name}),t.createElement(de,{label:"Email",type:"email",name:"email",value:o,placeholder:"Enter Email...",onChange:e.onChange,error:l.email}),t.createElement(de,{label:"Phone",type:"number",name:"phone",value:a,placeholder:"Enter phone...",onChange:e.onChange,error:l.phone}),t.createElement("input",{type:"submit",value:"Add Contact",className:"btn btn-success ",style:xe}))))}))}}])&&ve(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),i}(t.Component);var xe={width:"80%",transform:"translate(60px)",marginTop:"15px"};function Ce(e){return Ce="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Ce(e)}function _e(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Pe(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Oe(e,t){return Oe=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},Oe(e,t)}function Ne(e,t){if(t&&("object"===Ce(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function Te(e){return Te=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},Te(e)}const Re=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Oe(e,t)}(i,e);var n,r,o,a,l=(o=i,a=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=Te(o);if(a){var n=Te(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return Ne(this,e)});function i(){return _e(this,i),l.apply(this,arguments)}return n=i,(r=[{key:"render",value:function(){return t.createElement("div",null,t.createElement("h1",{className:"display-4"},"About Contact Manager"),t.createElement("p",{className:"lead"},"A simple application to manage contacts."),t.createElement("p",{className:"text-secondary"},"Version 1.0.13"))}}])&&Pe(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),i}(t.Component),je=function(){return t.createElement("div",null,t.createElement("h1",{className:"display-4"},t.createElement("span",{className:"text-danger"},"404")," Page Not Found"),t.createElement("p",{className:"lead"},"Sorry, that page does not exist"))};function Le(e){return Le="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Le(e)}function ze(e,t,n,r,o,a,l){try{var i=e[a](l),u=i.value}catch(e){return void n(e)}i.done?t(u):Promise.resolve(u).then(r,o)}function De(e){return function(){var t=this,n=arguments;return new Promise((function(r,o){var a=e.apply(t,n);function l(e){ze(a,r,o,l,i,"next",e)}function i(e){ze(a,r,o,l,i,"throw",e)}l(void 0)}))}}function Me(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Ae(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Ie(e,t){return Ie=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},Ie(e,t)}function Fe(e,t){if(t&&("object"===Le(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return Ue(e)}function Ue(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Be(e){return Be=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},Be(e)}function Ve(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var We=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Ie(e,t)}(i,e);var n,r,o,a,l=(o=i,a=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=Be(o);if(a){var n=Be(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return Fe(this,e)});function i(){var e;Me(this,i);for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return Ve(Ue(e=l.call.apply(l,[this].concat(n))),"state",{showContent:!1}),Ve(Ue(e),"onShowClick",(function(){e.setState({showContent:!e.state.showContent})})),Ve(Ue(e),"onClickDelete",function(){var e=De(regeneratorRuntime.mark((function e(t,n){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,q().delete("https://jsonplaceholder.typicode.com/users/".concat(t));case 2:n({type:"DELETE_CONTACT",payload:t});case 3:case"end":return e.stop()}}),e)})));return function(t,n){return e.apply(this,arguments)}}()),e}return n=i,(r=[{key:"render",value:function(){var e=this,n=this.props.contact,r=n.name,o=n.email,a=n.phone,l=n.id,i=this.state.showContent;return t.createElement(ue,null,(function(n){var u=n.dispatch;return t.createElement("div",{className:"card card-body mb-3"},t.createElement("h4",null,r,t.createElement("i",{onClick:e.onShowClick,className:"fas fa-chevron-circle-down",style:{marginLeft:"3px",color:"green",fontSize:"18px",cursor:"pointer"}}),t.createElement("i",{className:"fas fa-times-circle",onClick:e.onClickDelete.bind(e,l,u),style:{cursor:"pointer",float:"right",color:"red",fontSize:"20px",padding:"4px"}}),t.createElement(V,{to:"/edit/".concat(l)},t.createElement("i",{className:"fas fa-pencil-alt",style:{cursor:"pointer",color:"black",float:"right",marginRight:"1rem"}}))),i?t.createElement("ul",{className:"list-group"},t.createElement("li",{className:"list-group-item"}," Phone: ",a," "),t.createElement("li",{className:"list-group-item"}," Email: ",o," ")):null)}))}}])&&Ae(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),i}(t.Component);We.protoType={contact:a().object.isRequired};const $e=We;function He(e){return He="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},He(e)}function qe(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Qe(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Ke(e,t){return Ke=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},Ke(e,t)}function Ye(e,t){if(t&&("object"===He(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return Xe(e)}function Xe(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Ge(e){return Ge=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},Ge(e)}function Je(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const Ze=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Ke(e,t)}(i,e);var n,r,o,a,l=(o=i,a=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=Ge(o);if(a){var n=Ge(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return Ye(this,e)});function i(){var e;qe(this,i);for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return Je(Xe(e=l.call.apply(l,[this].concat(n))),"deleteContact",(function(t){var n=e.state.contacts.filter((function(e){return e.id!==t}));e.setState({contacts:n})})),e}return n=i,(r=[{key:"render",value:function(){var e=this;return t.createElement(ue,null,(function(n){var r=n.contacts;return t.createElement(t.Fragment,null,r.map((function(n){return t.createElement($e,{key:n.id,contact:n,deleteClickHandler:e.deleteContact.bind(e,n.id)})})))}))}}])&&Qe(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),i}(t.Component);function et(e){return et="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},et(e)}function tt(e,t,n,r,o,a,l){try{var i=e[a](l),u=i.value}catch(e){return void n(e)}i.done?t(u):Promise.resolve(u).then(r,o)}function nt(e){return function(){var t=this,n=arguments;return new Promise((function(r,o){var a=e.apply(t,n);function l(e){tt(a,r,o,l,i,"next",e)}function i(e){tt(a,r,o,l,i,"throw",e)}l(void 0)}))}}function rt(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function ot(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function at(e,t){return at=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},at(e,t)}function lt(e,t){if(t&&("object"===et(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return it(e)}function it(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function ut(e){return ut=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},ut(e)}function ct(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const st=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&at(e,t)}(u,e);var n,r,o,a,l,i=(a=u,l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=ut(a);if(l){var n=ut(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return lt(this,e)});function u(){var e;rt(this,u);for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return ct(it(e=i.call.apply(i,[this].concat(n))),"state",{name:"",email:"",phone:"",errors:{}}),ct(it(e),"onSubmitHandler",function(){var t=nt(regeneratorRuntime.mark((function t(n,r){var o,a,l,i,u,c,s;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(r.preventDefault(),o=e.state,a=o.name,l=o.email,i=o.phone,""!==a){t.next=5;break}return e.setState({errors:{name:"Name is required"}}),t.abrupt("return");case 5:if(""!==l){t.next=8;break}return e.setState({errors:{email:"Email is required"}}),t.abrupt("return");case 8:if(""!==i){t.next=11;break}return e.setState({errors:{phone:"Phone is required"}}),t.abrupt("return");case 11:return u={name:a,email:l,phone:i},c=e.props.match.params.id.id,t.next=15,q().put("https://jsonplaceholder.typicode.com/users/".concat(c),u);case 15:s=t.sent,n({type:"UPDATE_CONTACT",payload:s.data}),e.setState({name:"",email:"",phone:"",errors:{}}),e.props.history.push("/");case 19:case"end":return t.stop()}}),t)})));return function(e,n){return t.apply(this,arguments)}}()),ct(it(e),"onChange",(function(t){return e.setState(ct({},t.target.name,t.target.value))})),e}return n=u,r=[{key:"componentDidMount",value:(o=nt(regeneratorRuntime.mark((function e(){var t,n,r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return console.log(this.props.proto),t=this.props.match.params.id.id,e.next=4,q().get("https://jsonplaceholder.typicode.com/users/".concat(t));case 4:n=e.sent,r=n.data,this.setState({name:r.name,email:r.email,phone:r.phone});case 7:case"end":return e.stop()}}),e,this)}))),function(){return o.apply(this,arguments)})},{key:"render",value:function(){var e=this,n=this.state,r=n.name,o=n.email,a=n.phone,l=n.errors;return t.createElement(ue,null,(function(n){var i=n.dispatch;return t.createElement("div",{className:"card mb-3"},t.createElement("div",{className:"card-header"},"Edit Contact"),t.createElement("div",{className:"card-body"},t.createElement("form",{onSubmit:e.onSubmitHandler.bind(e,i)},t.createElement(de,{label:"Name",type:"text",name:"name",value:r,placeholder:"Enter Name...",onChange:e.onChange,error:l.name}),t.createElement(de,{label:"Email",type:"email",name:"email",value:o,placeholder:"Enter Email...",onChange:e.onChange,error:l.email}),t.createElement(de,{label:"Phone",type:"number",name:"phone",value:a,placeholder:"Enter phone...",onChange:e.onChange,error:l.phone}),t.createElement("input",{type:"submit",value:"Update Contact",className:"btn btn-success",style:ft}))))}))}}],r&&ot(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),u}(t.Component);var ft={width:"80%",transform:"translate(60px)",marginTop:"15px"};const dt=function(e){return t.createElement(ie,null,t.createElement(U,null,t.createElement("div",{className:"App"},t.createElement($,{branding:"Contact Manager"}),t.createElement("div",{className:"container",style:pt},t.createElement(z,null,t.createElement(j,{exact:!0,path:"/",element:t.createElement(Ze,null)}),t.createElement(j,{exact:!0,path:"layout/add",element:t.createElement(Se,null)}),t.createElement(j,{exact:!0,path:"/edit/:id",element:t.createElement(st,null)}),t.createElement(j,{exact:!0,path:"pages/about",element:t.createElement(Re,null)}),t.createElement(j,{path:"*",element:t.createElement(je,null)}))))))};var pt={padding:"15px",background:"#dee2e6",maxWidth:"750px"};function ht(e){return ht="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ht(e)}function mt(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function yt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function vt(e,t){return vt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},vt(e,t)}function gt(e,t){if(t&&("object"===ht(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function bt(e){return bt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},bt(e)}const wt=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&vt(e,t)}(i,e);var n,r,o,a,l=(o=i,a=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=bt(o);if(a){var n=bt(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return gt(this,e)});function i(){return mt(this,i),l.apply(this,arguments)}return n=i,(r=[{key:"render",value:function(){return t.createElement(dt,null)}}])&&yt(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),i}(t.Component);r.render(t.createElement(wt,null),document.getElementById("root"))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LElBQU00dUIsR0FBVyxDQUNmMStCLE1BQU8sTUFDUDIrQixVQUFXLGtCQUNYQyxVQUFXLFFDN0diLFNBcEJtQixTQUFDNzdDLEdBQ2xCLE9BQ0UsZ0JBQUMsR0FBRCxLQUNFLGdCQUFDazJDLEVBQUQsS0FDRSx1QkFBS3A0QyxVQUFVLE9BQ2IsZ0JBQUMsRUFBRCxDQUFRMDhDLFNBQVMsb0JBQ2pCLHVCQUFLMThDLFVBQVUsWUFBWXdQLE1BQU80dkMsSUFDaEMsZ0JBQUNsSSxFQUFELEtBQ0UsZ0JBQUNYLEVBQUQsQ0FBTzl5QyxPQUFLLEVBQUN6SSxLQUFLLElBQUlxRixRQUFTLGdCQUFDLEdBQUQsUUFDL0IsZ0JBQUNrMkMsRUFBRCxDQUFPOXlDLE9BQUssRUFBQ3pJLEtBQUssYUFBYXFGLFFBQVMsZ0JBQUMsR0FBRCxRQUN4QyxnQkFBQ2syQyxFQUFELENBQU85eUMsT0FBSyxFQUFDekksS0FBSyxZQUFZcUYsUUFBUyxnQkFBQyxHQUFELFFBQ3ZDLGdCQUFDazJDLEVBQUQsQ0FBTzl5QyxPQUFLLEVBQUN6SSxLQUFLLGNBQWNxRixRQUFTLGdCQUFDLEdBQUQsUUFDekMsZ0JBQUNrMkMsRUFBRCxDQUFPdjdDLEtBQUssSUFBSXFGLFFBQVMsZ0JBQUNnL0MsR0FBRCxjQVV2QyxJQUFNRCxHQUFpQixDQUNyQlgsUUFBUyxPQUNUYSxXQUFZLFVBQ1pDLFNBQVUsd2dDQ3pCWixTQUxNQyxTQUFBQSwreEJBQ0osV0FDRSxPQUFPLGdCQUFDLEdBQUQsa0ZBRkxBLENBQVl2d0IsRUFBQUEsV0NBbEJ3d0IsRUFBQUEsT0FBZ0IsZ0JBQUMsR0FBRCxNQUFTbGtELFNBQVNta0QsZUFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL2NvbnRhY3QtbWFuYWdlci8uL25vZGVfbW9kdWxlcy9heGlvcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9jb250YWN0LW1hbmFnZXIvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2FkYXB0ZXJzL3hoci5qcyIsIndlYnBhY2s6Ly9jb250YWN0LW1hbmFnZXIvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2F4aW9zLmpzIiwid2VicGFjazovL2NvbnRhY3QtbWFuYWdlci8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY2FuY2VsL0NhbmNlbC5qcyIsIndlYnBhY2s6Ly9jb250YWN0LW1hbmFnZXIvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWxUb2tlbi5qcyIsIndlYnBhY2s6Ly9jb250YWN0LW1hbmFnZXIvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9pc0NhbmNlbC5qcyIsIndlYnBhY2s6Ly9jb250YWN0LW1hbmFnZXIvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvQXhpb3MuanMiLCJ3ZWJwYWNrOi8vY29udGFjdC1tYW5hZ2VyLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL0ludGVyY2VwdG9yTWFuYWdlci5qcyIsIndlYnBhY2s6Ly9jb250YWN0LW1hbmFnZXIvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvYnVpbGRGdWxsUGF0aC5qcyIsIndlYnBhY2s6Ly9jb250YWN0LW1hbmFnZXIvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvY3JlYXRlRXJyb3IuanMiLCJ3ZWJwYWNrOi8vY29udGFjdC1tYW5hZ2VyLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2Rpc3BhdGNoUmVxdWVzdC5qcyIsIndlYnBhY2s6Ly9jb250YWN0LW1hbmFnZXIvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvZW5oYW5jZUVycm9yLmpzIiwid2VicGFjazovL2NvbnRhY3QtbWFuYWdlci8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9tZXJnZUNvbmZpZy5qcyIsIndlYnBhY2s6Ly9jb250YWN0LW1hbmFnZXIvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvc2V0dGxlLmpzIiwid2VicGFjazovL2NvbnRhY3QtbWFuYWdlci8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS90cmFuc2Zvcm1EYXRhLmpzIiwid2VicGFjazovL2NvbnRhY3QtbWFuYWdlci8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvZGVmYXVsdHMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vY29udGFjdC1tYW5hZ2VyLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9kZWZhdWx0cy90cmFuc2l0aW9uYWwuanMiLCJ3ZWJwYWNrOi8vY29udGFjdC1tYW5hZ2VyLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9lbnYvZGF0YS5qcyIsIndlYnBhY2s6Ly9jb250YWN0LW1hbmFnZXIvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYmluZC5qcyIsIndlYnBhY2s6Ly9jb250YWN0LW1hbmFnZXIvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYnVpbGRVUkwuanMiLCJ3ZWJwYWNrOi8vY29udGFjdC1tYW5hZ2VyLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2NvbWJpbmVVUkxzLmpzIiwid2VicGFjazovL2NvbnRhY3QtbWFuYWdlci8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9jb29raWVzLmpzIiwid2VicGFjazovL2NvbnRhY3QtbWFuYWdlci8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9pc0Fic29sdXRlVVJMLmpzIiwid2VicGFjazovL2NvbnRhY3QtbWFuYWdlci8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9pc0F4aW9zRXJyb3IuanMiLCJ3ZWJwYWNrOi8vY29udGFjdC1tYW5hZ2VyLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzVVJMU2FtZU9yaWdpbi5qcyIsIndlYnBhY2s6Ly9jb250YWN0LW1hbmFnZXIvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvbm9ybWFsaXplSGVhZGVyTmFtZS5qcyIsIndlYnBhY2s6Ly9jb250YWN0LW1hbmFnZXIvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcGFyc2VIZWFkZXJzLmpzIiwid2VicGFjazovL2NvbnRhY3QtbWFuYWdlci8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9zcHJlYWQuanMiLCJ3ZWJwYWNrOi8vY29udGFjdC1tYW5hZ2VyLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3ZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9jb250YWN0LW1hbmFnZXIvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL3V0aWxzLmpzIiwid2VicGFjazovL2NvbnRhY3QtbWFuYWdlci8uL25vZGVfbW9kdWxlcy9jbGFzc25hbWUvY2xhc3NuYW1lLmpzIiwid2VicGFjazovL2NvbnRhY3QtbWFuYWdlci8uL25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzIiwid2VicGFjazovL2NvbnRhY3QtbWFuYWdlci8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly9jb250YWN0LW1hbmFnZXIvLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9jb250YWN0LW1hbmFnZXIvLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vY29udGFjdC1tYW5hZ2VyLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL2NvbnRhY3QtbWFuYWdlci8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vY29udGFjdC1tYW5hZ2VyLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly9jb250YWN0LW1hbmFnZXIvLi9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanMiLCJ3ZWJwYWNrOi8vY29udGFjdC1tYW5hZ2VyLy4vbm9kZV9tb2R1bGVzL3JlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyIsIndlYnBhY2s6Ly9jb250YWN0LW1hbmFnZXIvLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vY29udGFjdC1tYW5hZ2VyLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9pbmRleC5qcyIsIndlYnBhY2s6Ly9jb250YWN0LW1hbmFnZXIvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vY29udGFjdC1tYW5hZ2VyL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL2NvbnRhY3QtbWFuYWdlci93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vY29udGFjdC1tYW5hZ2VyL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vY29udGFjdC1tYW5hZ2VyLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vY29udGFjdC1tYW5hZ2VyLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMuanMiLCJ3ZWJwYWNrOi8vY29udGFjdC1tYW5hZ2VyLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9pbmRleC5qcyIsIndlYnBhY2s6Ly9jb250YWN0LW1hbmFnZXIvLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly9jb250YWN0LW1hbmFnZXIvLi9zcmMvY29tcG9uZW50cy9IZWFkZXIvSGVhZGVyLmpzIiwid2VicGFjazovL2NvbnRhY3QtbWFuYWdlci8uL3NyYy9jb21wb25lbnRzL0NvbnRleHQvQ29udGV4dC5qcyIsIndlYnBhY2s6Ly9jb250YWN0LW1hbmFnZXIvLi9zcmMvY29tcG9uZW50cy9MYXlvdXQvVGV4dElucHV0LmpzIiwid2VicGFjazovL2NvbnRhY3QtbWFuYWdlci8uL3NyYy9jb21wb25lbnRzL0xheW91dC9BZGRDb250YWN0LmpzIiwid2VicGFjazovL2NvbnRhY3QtbWFuYWdlci8uL3NyYy9jb21wb25lbnRzL1BhZ2VzL0Fib3V0LmpzIiwid2VicGFjazovL2NvbnRhY3QtbWFuYWdlci8uL3NyYy9jb21wb25lbnRzL1BhZ2VzL05vdEZvdW5kLmpzIiwid2VicGFjazovL2NvbnRhY3QtbWFuYWdlci8uL3NyYy9jb21wb25lbnRzL0NvbnRleHQvQ29tcG9uZW50cy9Db250YWN0Qy5qcyIsIndlYnBhY2s6Ly9jb250YWN0LW1hbmFnZXIvLi9zcmMvY29tcG9uZW50cy9Db250ZXh0L0NvbXBvbmVudHMvQ29udGFjdHNDLmpzIiwid2VicGFjazovL2NvbnRhY3QtbWFuYWdlci8uL3NyYy9jb21wb25lbnRzL0xheW91dC9FZGl0Q29udGFjdC5qcyIsIndlYnBhY2s6Ly9jb250YWN0LW1hbmFnZXIvLi9zcmMvY29tcG9uZW50cy9Db250ZXh0L0NvbnRleHRBcHAuanMiLCJ3ZWJwYWNrOi8vY29udGFjdC1tYW5hZ2VyLy4vc3JjL2NvbXBvbmVudHMvQXBwLmpzIiwid2VicGFjazovL2NvbnRhY3QtbWFuYWdlci8uL3NyYy9tYWluLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWIvYXhpb3MnKTsiLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcbnZhciBzZXR0bGUgPSByZXF1aXJlKCcuLy4uL2NvcmUvc2V0dGxlJyk7XG52YXIgY29va2llcyA9IHJlcXVpcmUoJy4vLi4vaGVscGVycy9jb29raWVzJyk7XG52YXIgYnVpbGRVUkwgPSByZXF1aXJlKCcuLy4uL2hlbHBlcnMvYnVpbGRVUkwnKTtcbnZhciBidWlsZEZ1bGxQYXRoID0gcmVxdWlyZSgnLi4vY29yZS9idWlsZEZ1bGxQYXRoJyk7XG52YXIgcGFyc2VIZWFkZXJzID0gcmVxdWlyZSgnLi8uLi9oZWxwZXJzL3BhcnNlSGVhZGVycycpO1xudmFyIGlzVVJMU2FtZU9yaWdpbiA9IHJlcXVpcmUoJy4vLi4vaGVscGVycy9pc1VSTFNhbWVPcmlnaW4nKTtcbnZhciBjcmVhdGVFcnJvciA9IHJlcXVpcmUoJy4uL2NvcmUvY3JlYXRlRXJyb3InKTtcbnZhciB0cmFuc2l0aW9uYWxEZWZhdWx0cyA9IHJlcXVpcmUoJy4uL2RlZmF1bHRzL3RyYW5zaXRpb25hbCcpO1xudmFyIENhbmNlbCA9IHJlcXVpcmUoJy4uL2NhbmNlbC9DYW5jZWwnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB4aHJBZGFwdGVyKGNvbmZpZykge1xuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gZGlzcGF0Y2hYaHJSZXF1ZXN0KHJlc29sdmUsIHJlamVjdCkge1xuICAgIHZhciByZXF1ZXN0RGF0YSA9IGNvbmZpZy5kYXRhO1xuICAgIHZhciByZXF1ZXN0SGVhZGVycyA9IGNvbmZpZy5oZWFkZXJzO1xuICAgIHZhciByZXNwb25zZVR5cGUgPSBjb25maWcucmVzcG9uc2VUeXBlO1xuICAgIHZhciBvbkNhbmNlbGVkO1xuICAgIGZ1bmN0aW9uIGRvbmUoKSB7XG4gICAgICBpZiAoY29uZmlnLmNhbmNlbFRva2VuKSB7XG4gICAgICAgIGNvbmZpZy5jYW5jZWxUb2tlbi51bnN1YnNjcmliZShvbkNhbmNlbGVkKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGNvbmZpZy5zaWduYWwpIHtcbiAgICAgICAgY29uZmlnLnNpZ25hbC5yZW1vdmVFdmVudExpc3RlbmVyKCdhYm9ydCcsIG9uQ2FuY2VsZWQpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh1dGlscy5pc0Zvcm1EYXRhKHJlcXVlc3REYXRhKSkge1xuICAgICAgZGVsZXRlIHJlcXVlc3RIZWFkZXJzWydDb250ZW50LVR5cGUnXTsgLy8gTGV0IHRoZSBicm93c2VyIHNldCBpdFxuICAgIH1cblxuICAgIHZhciByZXF1ZXN0ID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG5cbiAgICAvLyBIVFRQIGJhc2ljIGF1dGhlbnRpY2F0aW9uXG4gICAgaWYgKGNvbmZpZy5hdXRoKSB7XG4gICAgICB2YXIgdXNlcm5hbWUgPSBjb25maWcuYXV0aC51c2VybmFtZSB8fCAnJztcbiAgICAgIHZhciBwYXNzd29yZCA9IGNvbmZpZy5hdXRoLnBhc3N3b3JkID8gdW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KGNvbmZpZy5hdXRoLnBhc3N3b3JkKSkgOiAnJztcbiAgICAgIHJlcXVlc3RIZWFkZXJzLkF1dGhvcml6YXRpb24gPSAnQmFzaWMgJyArIGJ0b2EodXNlcm5hbWUgKyAnOicgKyBwYXNzd29yZCk7XG4gICAgfVxuXG4gICAgdmFyIGZ1bGxQYXRoID0gYnVpbGRGdWxsUGF0aChjb25maWcuYmFzZVVSTCwgY29uZmlnLnVybCk7XG4gICAgcmVxdWVzdC5vcGVuKGNvbmZpZy5tZXRob2QudG9VcHBlckNhc2UoKSwgYnVpbGRVUkwoZnVsbFBhdGgsIGNvbmZpZy5wYXJhbXMsIGNvbmZpZy5wYXJhbXNTZXJpYWxpemVyKSwgdHJ1ZSk7XG5cbiAgICAvLyBTZXQgdGhlIHJlcXVlc3QgdGltZW91dCBpbiBNU1xuICAgIHJlcXVlc3QudGltZW91dCA9IGNvbmZpZy50aW1lb3V0O1xuXG4gICAgZnVuY3Rpb24gb25sb2FkZW5kKCkge1xuICAgICAgaWYgKCFyZXF1ZXN0KSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIC8vIFByZXBhcmUgdGhlIHJlc3BvbnNlXG4gICAgICB2YXIgcmVzcG9uc2VIZWFkZXJzID0gJ2dldEFsbFJlc3BvbnNlSGVhZGVycycgaW4gcmVxdWVzdCA/IHBhcnNlSGVhZGVycyhyZXF1ZXN0LmdldEFsbFJlc3BvbnNlSGVhZGVycygpKSA6IG51bGw7XG4gICAgICB2YXIgcmVzcG9uc2VEYXRhID0gIXJlc3BvbnNlVHlwZSB8fCByZXNwb25zZVR5cGUgPT09ICd0ZXh0JyB8fCAgcmVzcG9uc2VUeXBlID09PSAnanNvbicgP1xuICAgICAgICByZXF1ZXN0LnJlc3BvbnNlVGV4dCA6IHJlcXVlc3QucmVzcG9uc2U7XG4gICAgICB2YXIgcmVzcG9uc2UgPSB7XG4gICAgICAgIGRhdGE6IHJlc3BvbnNlRGF0YSxcbiAgICAgICAgc3RhdHVzOiByZXF1ZXN0LnN0YXR1cyxcbiAgICAgICAgc3RhdHVzVGV4dDogcmVxdWVzdC5zdGF0dXNUZXh0LFxuICAgICAgICBoZWFkZXJzOiByZXNwb25zZUhlYWRlcnMsXG4gICAgICAgIGNvbmZpZzogY29uZmlnLFxuICAgICAgICByZXF1ZXN0OiByZXF1ZXN0XG4gICAgICB9O1xuXG4gICAgICBzZXR0bGUoZnVuY3Rpb24gX3Jlc29sdmUodmFsdWUpIHtcbiAgICAgICAgcmVzb2x2ZSh2YWx1ZSk7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgIH0sIGZ1bmN0aW9uIF9yZWplY3QoZXJyKSB7XG4gICAgICAgIHJlamVjdChlcnIpO1xuICAgICAgICBkb25lKCk7XG4gICAgICB9LCByZXNwb25zZSk7XG5cbiAgICAgIC8vIENsZWFuIHVwIHJlcXVlc3RcbiAgICAgIHJlcXVlc3QgPSBudWxsO1xuICAgIH1cblxuICAgIGlmICgnb25sb2FkZW5kJyBpbiByZXF1ZXN0KSB7XG4gICAgICAvLyBVc2Ugb25sb2FkZW5kIGlmIGF2YWlsYWJsZVxuICAgICAgcmVxdWVzdC5vbmxvYWRlbmQgPSBvbmxvYWRlbmQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIExpc3RlbiBmb3IgcmVhZHkgc3RhdGUgdG8gZW11bGF0ZSBvbmxvYWRlbmRcbiAgICAgIHJlcXVlc3Qub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24gaGFuZGxlTG9hZCgpIHtcbiAgICAgICAgaWYgKCFyZXF1ZXN0IHx8IHJlcXVlc3QucmVhZHlTdGF0ZSAhPT0gNCkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFRoZSByZXF1ZXN0IGVycm9yZWQgb3V0IGFuZCB3ZSBkaWRuJ3QgZ2V0IGEgcmVzcG9uc2UsIHRoaXMgd2lsbCBiZVxuICAgICAgICAvLyBoYW5kbGVkIGJ5IG9uZXJyb3IgaW5zdGVhZFxuICAgICAgICAvLyBXaXRoIG9uZSBleGNlcHRpb246IHJlcXVlc3QgdGhhdCB1c2luZyBmaWxlOiBwcm90b2NvbCwgbW9zdCBicm93c2Vyc1xuICAgICAgICAvLyB3aWxsIHJldHVybiBzdGF0dXMgYXMgMCBldmVuIHRob3VnaCBpdCdzIGEgc3VjY2Vzc2Z1bCByZXF1ZXN0XG4gICAgICAgIGlmIChyZXF1ZXN0LnN0YXR1cyA9PT0gMCAmJiAhKHJlcXVlc3QucmVzcG9uc2VVUkwgJiYgcmVxdWVzdC5yZXNwb25zZVVSTC5pbmRleE9mKCdmaWxlOicpID09PSAwKSkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICAvLyByZWFkeXN0YXRlIGhhbmRsZXIgaXMgY2FsbGluZyBiZWZvcmUgb25lcnJvciBvciBvbnRpbWVvdXQgaGFuZGxlcnMsXG4gICAgICAgIC8vIHNvIHdlIHNob3VsZCBjYWxsIG9ubG9hZGVuZCBvbiB0aGUgbmV4dCAndGljaydcbiAgICAgICAgc2V0VGltZW91dChvbmxvYWRlbmQpO1xuICAgICAgfTtcbiAgICB9XG5cbiAgICAvLyBIYW5kbGUgYnJvd3NlciByZXF1ZXN0IGNhbmNlbGxhdGlvbiAoYXMgb3Bwb3NlZCB0byBhIG1hbnVhbCBjYW5jZWxsYXRpb24pXG4gICAgcmVxdWVzdC5vbmFib3J0ID0gZnVuY3Rpb24gaGFuZGxlQWJvcnQoKSB7XG4gICAgICBpZiAoIXJlcXVlc3QpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICByZWplY3QoY3JlYXRlRXJyb3IoJ1JlcXVlc3QgYWJvcnRlZCcsIGNvbmZpZywgJ0VDT05OQUJPUlRFRCcsIHJlcXVlc3QpKTtcblxuICAgICAgLy8gQ2xlYW4gdXAgcmVxdWVzdFxuICAgICAgcmVxdWVzdCA9IG51bGw7XG4gICAgfTtcblxuICAgIC8vIEhhbmRsZSBsb3cgbGV2ZWwgbmV0d29yayBlcnJvcnNcbiAgICByZXF1ZXN0Lm9uZXJyb3IgPSBmdW5jdGlvbiBoYW5kbGVFcnJvcigpIHtcbiAgICAgIC8vIFJlYWwgZXJyb3JzIGFyZSBoaWRkZW4gZnJvbSB1cyBieSB0aGUgYnJvd3NlclxuICAgICAgLy8gb25lcnJvciBzaG91bGQgb25seSBmaXJlIGlmIGl0J3MgYSBuZXR3b3JrIGVycm9yXG4gICAgICByZWplY3QoY3JlYXRlRXJyb3IoJ05ldHdvcmsgRXJyb3InLCBjb25maWcsIG51bGwsIHJlcXVlc3QpKTtcblxuICAgICAgLy8gQ2xlYW4gdXAgcmVxdWVzdFxuICAgICAgcmVxdWVzdCA9IG51bGw7XG4gICAgfTtcblxuICAgIC8vIEhhbmRsZSB0aW1lb3V0XG4gICAgcmVxdWVzdC5vbnRpbWVvdXQgPSBmdW5jdGlvbiBoYW5kbGVUaW1lb3V0KCkge1xuICAgICAgdmFyIHRpbWVvdXRFcnJvck1lc3NhZ2UgPSBjb25maWcudGltZW91dCA/ICd0aW1lb3V0IG9mICcgKyBjb25maWcudGltZW91dCArICdtcyBleGNlZWRlZCcgOiAndGltZW91dCBleGNlZWRlZCc7XG4gICAgICB2YXIgdHJhbnNpdGlvbmFsID0gY29uZmlnLnRyYW5zaXRpb25hbCB8fCB0cmFuc2l0aW9uYWxEZWZhdWx0cztcbiAgICAgIGlmIChjb25maWcudGltZW91dEVycm9yTWVzc2FnZSkge1xuICAgICAgICB0aW1lb3V0RXJyb3JNZXNzYWdlID0gY29uZmlnLnRpbWVvdXRFcnJvck1lc3NhZ2U7XG4gICAgICB9XG4gICAgICByZWplY3QoY3JlYXRlRXJyb3IoXG4gICAgICAgIHRpbWVvdXRFcnJvck1lc3NhZ2UsXG4gICAgICAgIGNvbmZpZyxcbiAgICAgICAgdHJhbnNpdGlvbmFsLmNsYXJpZnlUaW1lb3V0RXJyb3IgPyAnRVRJTUVET1VUJyA6ICdFQ09OTkFCT1JURUQnLFxuICAgICAgICByZXF1ZXN0KSk7XG5cbiAgICAgIC8vIENsZWFuIHVwIHJlcXVlc3RcbiAgICAgIHJlcXVlc3QgPSBudWxsO1xuICAgIH07XG5cbiAgICAvLyBBZGQgeHNyZiBoZWFkZXJcbiAgICAvLyBUaGlzIGlzIG9ubHkgZG9uZSBpZiBydW5uaW5nIGluIGEgc3RhbmRhcmQgYnJvd3NlciBlbnZpcm9ubWVudC5cbiAgICAvLyBTcGVjaWZpY2FsbHkgbm90IGlmIHdlJ3JlIGluIGEgd2ViIHdvcmtlciwgb3IgcmVhY3QtbmF0aXZlLlxuICAgIGlmICh1dGlscy5pc1N0YW5kYXJkQnJvd3NlckVudigpKSB7XG4gICAgICAvLyBBZGQgeHNyZiBoZWFkZXJcbiAgICAgIHZhciB4c3JmVmFsdWUgPSAoY29uZmlnLndpdGhDcmVkZW50aWFscyB8fCBpc1VSTFNhbWVPcmlnaW4oZnVsbFBhdGgpKSAmJiBjb25maWcueHNyZkNvb2tpZU5hbWUgP1xuICAgICAgICBjb29raWVzLnJlYWQoY29uZmlnLnhzcmZDb29raWVOYW1lKSA6XG4gICAgICAgIHVuZGVmaW5lZDtcblxuICAgICAgaWYgKHhzcmZWYWx1ZSkge1xuICAgICAgICByZXF1ZXN0SGVhZGVyc1tjb25maWcueHNyZkhlYWRlck5hbWVdID0geHNyZlZhbHVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEFkZCBoZWFkZXJzIHRvIHRoZSByZXF1ZXN0XG4gICAgaWYgKCdzZXRSZXF1ZXN0SGVhZGVyJyBpbiByZXF1ZXN0KSB7XG4gICAgICB1dGlscy5mb3JFYWNoKHJlcXVlc3RIZWFkZXJzLCBmdW5jdGlvbiBzZXRSZXF1ZXN0SGVhZGVyKHZhbCwga2V5KSB7XG4gICAgICAgIGlmICh0eXBlb2YgcmVxdWVzdERhdGEgPT09ICd1bmRlZmluZWQnICYmIGtleS50b0xvd2VyQ2FzZSgpID09PSAnY29udGVudC10eXBlJykge1xuICAgICAgICAgIC8vIFJlbW92ZSBDb250ZW50LVR5cGUgaWYgZGF0YSBpcyB1bmRlZmluZWRcbiAgICAgICAgICBkZWxldGUgcmVxdWVzdEhlYWRlcnNba2V5XTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBPdGhlcndpc2UgYWRkIGhlYWRlciB0byB0aGUgcmVxdWVzdFxuICAgICAgICAgIHJlcXVlc3Quc2V0UmVxdWVzdEhlYWRlcihrZXksIHZhbCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIEFkZCB3aXRoQ3JlZGVudGlhbHMgdG8gcmVxdWVzdCBpZiBuZWVkZWRcbiAgICBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGNvbmZpZy53aXRoQ3JlZGVudGlhbHMpKSB7XG4gICAgICByZXF1ZXN0LndpdGhDcmVkZW50aWFscyA9ICEhY29uZmlnLndpdGhDcmVkZW50aWFscztcbiAgICB9XG5cbiAgICAvLyBBZGQgcmVzcG9uc2VUeXBlIHRvIHJlcXVlc3QgaWYgbmVlZGVkXG4gICAgaWYgKHJlc3BvbnNlVHlwZSAmJiByZXNwb25zZVR5cGUgIT09ICdqc29uJykge1xuICAgICAgcmVxdWVzdC5yZXNwb25zZVR5cGUgPSBjb25maWcucmVzcG9uc2VUeXBlO1xuICAgIH1cblxuICAgIC8vIEhhbmRsZSBwcm9ncmVzcyBpZiBuZWVkZWRcbiAgICBpZiAodHlwZW9mIGNvbmZpZy5vbkRvd25sb2FkUHJvZ3Jlc3MgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJlcXVlc3QuYWRkRXZlbnRMaXN0ZW5lcigncHJvZ3Jlc3MnLCBjb25maWcub25Eb3dubG9hZFByb2dyZXNzKTtcbiAgICB9XG5cbiAgICAvLyBOb3QgYWxsIGJyb3dzZXJzIHN1cHBvcnQgdXBsb2FkIGV2ZW50c1xuICAgIGlmICh0eXBlb2YgY29uZmlnLm9uVXBsb2FkUHJvZ3Jlc3MgPT09ICdmdW5jdGlvbicgJiYgcmVxdWVzdC51cGxvYWQpIHtcbiAgICAgIHJlcXVlc3QudXBsb2FkLmFkZEV2ZW50TGlzdGVuZXIoJ3Byb2dyZXNzJywgY29uZmlnLm9uVXBsb2FkUHJvZ3Jlc3MpO1xuICAgIH1cblxuICAgIGlmIChjb25maWcuY2FuY2VsVG9rZW4gfHwgY29uZmlnLnNpZ25hbCkge1xuICAgICAgLy8gSGFuZGxlIGNhbmNlbGxhdGlvblxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbiAgICAgIG9uQ2FuY2VsZWQgPSBmdW5jdGlvbihjYW5jZWwpIHtcbiAgICAgICAgaWYgKCFyZXF1ZXN0KSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHJlamVjdCghY2FuY2VsIHx8IChjYW5jZWwgJiYgY2FuY2VsLnR5cGUpID8gbmV3IENhbmNlbCgnY2FuY2VsZWQnKSA6IGNhbmNlbCk7XG4gICAgICAgIHJlcXVlc3QuYWJvcnQoKTtcbiAgICAgICAgcmVxdWVzdCA9IG51bGw7XG4gICAgICB9O1xuXG4gICAgICBjb25maWcuY2FuY2VsVG9rZW4gJiYgY29uZmlnLmNhbmNlbFRva2VuLnN1YnNjcmliZShvbkNhbmNlbGVkKTtcbiAgICAgIGlmIChjb25maWcuc2lnbmFsKSB7XG4gICAgICAgIGNvbmZpZy5zaWduYWwuYWJvcnRlZCA/IG9uQ2FuY2VsZWQoKSA6IGNvbmZpZy5zaWduYWwuYWRkRXZlbnRMaXN0ZW5lcignYWJvcnQnLCBvbkNhbmNlbGVkKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoIXJlcXVlc3REYXRhKSB7XG4gICAgICByZXF1ZXN0RGF0YSA9IG51bGw7XG4gICAgfVxuXG4gICAgLy8gU2VuZCB0aGUgcmVxdWVzdFxuICAgIHJlcXVlc3Quc2VuZChyZXF1ZXN0RGF0YSk7XG4gIH0pO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi91dGlscycpO1xudmFyIGJpbmQgPSByZXF1aXJlKCcuL2hlbHBlcnMvYmluZCcpO1xudmFyIEF4aW9zID0gcmVxdWlyZSgnLi9jb3JlL0F4aW9zJyk7XG52YXIgbWVyZ2VDb25maWcgPSByZXF1aXJlKCcuL2NvcmUvbWVyZ2VDb25maWcnKTtcbnZhciBkZWZhdWx0cyA9IHJlcXVpcmUoJy4vZGVmYXVsdHMnKTtcblxuLyoqXG4gKiBDcmVhdGUgYW4gaW5zdGFuY2Ugb2YgQXhpb3NcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gZGVmYXVsdENvbmZpZyBUaGUgZGVmYXVsdCBjb25maWcgZm9yIHRoZSBpbnN0YW5jZVxuICogQHJldHVybiB7QXhpb3N9IEEgbmV3IGluc3RhbmNlIG9mIEF4aW9zXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUluc3RhbmNlKGRlZmF1bHRDb25maWcpIHtcbiAgdmFyIGNvbnRleHQgPSBuZXcgQXhpb3MoZGVmYXVsdENvbmZpZyk7XG4gIHZhciBpbnN0YW5jZSA9IGJpbmQoQXhpb3MucHJvdG90eXBlLnJlcXVlc3QsIGNvbnRleHQpO1xuXG4gIC8vIENvcHkgYXhpb3MucHJvdG90eXBlIHRvIGluc3RhbmNlXG4gIHV0aWxzLmV4dGVuZChpbnN0YW5jZSwgQXhpb3MucHJvdG90eXBlLCBjb250ZXh0KTtcblxuICAvLyBDb3B5IGNvbnRleHQgdG8gaW5zdGFuY2VcbiAgdXRpbHMuZXh0ZW5kKGluc3RhbmNlLCBjb250ZXh0KTtcblxuICAvLyBGYWN0b3J5IGZvciBjcmVhdGluZyBuZXcgaW5zdGFuY2VzXG4gIGluc3RhbmNlLmNyZWF0ZSA9IGZ1bmN0aW9uIGNyZWF0ZShpbnN0YW5jZUNvbmZpZykge1xuICAgIHJldHVybiBjcmVhdGVJbnN0YW5jZShtZXJnZUNvbmZpZyhkZWZhdWx0Q29uZmlnLCBpbnN0YW5jZUNvbmZpZykpO1xuICB9O1xuXG4gIHJldHVybiBpbnN0YW5jZTtcbn1cblxuLy8gQ3JlYXRlIHRoZSBkZWZhdWx0IGluc3RhbmNlIHRvIGJlIGV4cG9ydGVkXG52YXIgYXhpb3MgPSBjcmVhdGVJbnN0YW5jZShkZWZhdWx0cyk7XG5cbi8vIEV4cG9zZSBBeGlvcyBjbGFzcyB0byBhbGxvdyBjbGFzcyBpbmhlcml0YW5jZVxuYXhpb3MuQXhpb3MgPSBBeGlvcztcblxuLy8gRXhwb3NlIENhbmNlbCAmIENhbmNlbFRva2VuXG5heGlvcy5DYW5jZWwgPSByZXF1aXJlKCcuL2NhbmNlbC9DYW5jZWwnKTtcbmF4aW9zLkNhbmNlbFRva2VuID0gcmVxdWlyZSgnLi9jYW5jZWwvQ2FuY2VsVG9rZW4nKTtcbmF4aW9zLmlzQ2FuY2VsID0gcmVxdWlyZSgnLi9jYW5jZWwvaXNDYW5jZWwnKTtcbmF4aW9zLlZFUlNJT04gPSByZXF1aXJlKCcuL2Vudi9kYXRhJykudmVyc2lvbjtcblxuLy8gRXhwb3NlIGFsbC9zcHJlYWRcbmF4aW9zLmFsbCA9IGZ1bmN0aW9uIGFsbChwcm9taXNlcykge1xuICByZXR1cm4gUHJvbWlzZS5hbGwocHJvbWlzZXMpO1xufTtcbmF4aW9zLnNwcmVhZCA9IHJlcXVpcmUoJy4vaGVscGVycy9zcHJlYWQnKTtcblxuLy8gRXhwb3NlIGlzQXhpb3NFcnJvclxuYXhpb3MuaXNBeGlvc0Vycm9yID0gcmVxdWlyZSgnLi9oZWxwZXJzL2lzQXhpb3NFcnJvcicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGF4aW9zO1xuXG4vLyBBbGxvdyB1c2Ugb2YgZGVmYXVsdCBpbXBvcnQgc3ludGF4IGluIFR5cGVTY3JpcHRcbm1vZHVsZS5leHBvcnRzLmRlZmF1bHQgPSBheGlvcztcbiIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBBIGBDYW5jZWxgIGlzIGFuIG9iamVjdCB0aGF0IGlzIHRocm93biB3aGVuIGFuIG9wZXJhdGlvbiBpcyBjYW5jZWxlZC5cbiAqXG4gKiBAY2xhc3NcbiAqIEBwYXJhbSB7c3RyaW5nPX0gbWVzc2FnZSBUaGUgbWVzc2FnZS5cbiAqL1xuZnVuY3Rpb24gQ2FuY2VsKG1lc3NhZ2UpIHtcbiAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbn1cblxuQ2FuY2VsLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICByZXR1cm4gJ0NhbmNlbCcgKyAodGhpcy5tZXNzYWdlID8gJzogJyArIHRoaXMubWVzc2FnZSA6ICcnKTtcbn07XG5cbkNhbmNlbC5wcm90b3R5cGUuX19DQU5DRUxfXyA9IHRydWU7XG5cbm1vZHVsZS5leHBvcnRzID0gQ2FuY2VsO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgQ2FuY2VsID0gcmVxdWlyZSgnLi9DYW5jZWwnKTtcblxuLyoqXG4gKiBBIGBDYW5jZWxUb2tlbmAgaXMgYW4gb2JqZWN0IHRoYXQgY2FuIGJlIHVzZWQgdG8gcmVxdWVzdCBjYW5jZWxsYXRpb24gb2YgYW4gb3BlcmF0aW9uLlxuICpcbiAqIEBjbGFzc1xuICogQHBhcmFtIHtGdW5jdGlvbn0gZXhlY3V0b3IgVGhlIGV4ZWN1dG9yIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiBDYW5jZWxUb2tlbihleGVjdXRvcikge1xuICBpZiAodHlwZW9mIGV4ZWN1dG9yICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignZXhlY3V0b3IgbXVzdCBiZSBhIGZ1bmN0aW9uLicpO1xuICB9XG5cbiAgdmFyIHJlc29sdmVQcm9taXNlO1xuXG4gIHRoaXMucHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIHByb21pc2VFeGVjdXRvcihyZXNvbHZlKSB7XG4gICAgcmVzb2x2ZVByb21pc2UgPSByZXNvbHZlO1xuICB9KTtcblxuICB2YXIgdG9rZW4gPSB0aGlzO1xuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG4gIHRoaXMucHJvbWlzZS50aGVuKGZ1bmN0aW9uKGNhbmNlbCkge1xuICAgIGlmICghdG9rZW4uX2xpc3RlbmVycykgcmV0dXJuO1xuXG4gICAgdmFyIGk7XG4gICAgdmFyIGwgPSB0b2tlbi5fbGlzdGVuZXJzLmxlbmd0aDtcblxuICAgIGZvciAoaSA9IDA7IGkgPCBsOyBpKyspIHtcbiAgICAgIHRva2VuLl9saXN0ZW5lcnNbaV0oY2FuY2VsKTtcbiAgICB9XG4gICAgdG9rZW4uX2xpc3RlbmVycyA9IG51bGw7XG4gIH0pO1xuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG4gIHRoaXMucHJvbWlzZS50aGVuID0gZnVuY3Rpb24ob25mdWxmaWxsZWQpIHtcbiAgICB2YXIgX3Jlc29sdmU7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbiAgICB2YXIgcHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUpIHtcbiAgICAgIHRva2VuLnN1YnNjcmliZShyZXNvbHZlKTtcbiAgICAgIF9yZXNvbHZlID0gcmVzb2x2ZTtcbiAgICB9KS50aGVuKG9uZnVsZmlsbGVkKTtcblxuICAgIHByb21pc2UuY2FuY2VsID0gZnVuY3Rpb24gcmVqZWN0KCkge1xuICAgICAgdG9rZW4udW5zdWJzY3JpYmUoX3Jlc29sdmUpO1xuICAgIH07XG5cbiAgICByZXR1cm4gcHJvbWlzZTtcbiAgfTtcblxuICBleGVjdXRvcihmdW5jdGlvbiBjYW5jZWwobWVzc2FnZSkge1xuICAgIGlmICh0b2tlbi5yZWFzb24pIHtcbiAgICAgIC8vIENhbmNlbGxhdGlvbiBoYXMgYWxyZWFkeSBiZWVuIHJlcXVlc3RlZFxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRva2VuLnJlYXNvbiA9IG5ldyBDYW5jZWwobWVzc2FnZSk7XG4gICAgcmVzb2x2ZVByb21pc2UodG9rZW4ucmVhc29uKTtcbiAgfSk7XG59XG5cbi8qKlxuICogVGhyb3dzIGEgYENhbmNlbGAgaWYgY2FuY2VsbGF0aW9uIGhhcyBiZWVuIHJlcXVlc3RlZC5cbiAqL1xuQ2FuY2VsVG9rZW4ucHJvdG90eXBlLnRocm93SWZSZXF1ZXN0ZWQgPSBmdW5jdGlvbiB0aHJvd0lmUmVxdWVzdGVkKCkge1xuICBpZiAodGhpcy5yZWFzb24pIHtcbiAgICB0aHJvdyB0aGlzLnJlYXNvbjtcbiAgfVxufTtcblxuLyoqXG4gKiBTdWJzY3JpYmUgdG8gdGhlIGNhbmNlbCBzaWduYWxcbiAqL1xuXG5DYW5jZWxUb2tlbi5wcm90b3R5cGUuc3Vic2NyaWJlID0gZnVuY3Rpb24gc3Vic2NyaWJlKGxpc3RlbmVyKSB7XG4gIGlmICh0aGlzLnJlYXNvbikge1xuICAgIGxpc3RlbmVyKHRoaXMucmVhc29uKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAodGhpcy5fbGlzdGVuZXJzKSB7XG4gICAgdGhpcy5fbGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuICB9IGVsc2Uge1xuICAgIHRoaXMuX2xpc3RlbmVycyA9IFtsaXN0ZW5lcl07XG4gIH1cbn07XG5cbi8qKlxuICogVW5zdWJzY3JpYmUgZnJvbSB0aGUgY2FuY2VsIHNpZ25hbFxuICovXG5cbkNhbmNlbFRva2VuLnByb3RvdHlwZS51bnN1YnNjcmliZSA9IGZ1bmN0aW9uIHVuc3Vic2NyaWJlKGxpc3RlbmVyKSB7XG4gIGlmICghdGhpcy5fbGlzdGVuZXJzKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIHZhciBpbmRleCA9IHRoaXMuX2xpc3RlbmVycy5pbmRleE9mKGxpc3RlbmVyKTtcbiAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgIHRoaXMuX2xpc3RlbmVycy5zcGxpY2UoaW5kZXgsIDEpO1xuICB9XG59O1xuXG4vKipcbiAqIFJldHVybnMgYW4gb2JqZWN0IHRoYXQgY29udGFpbnMgYSBuZXcgYENhbmNlbFRva2VuYCBhbmQgYSBmdW5jdGlvbiB0aGF0LCB3aGVuIGNhbGxlZCxcbiAqIGNhbmNlbHMgdGhlIGBDYW5jZWxUb2tlbmAuXG4gKi9cbkNhbmNlbFRva2VuLnNvdXJjZSA9IGZ1bmN0aW9uIHNvdXJjZSgpIHtcbiAgdmFyIGNhbmNlbDtcbiAgdmFyIHRva2VuID0gbmV3IENhbmNlbFRva2VuKGZ1bmN0aW9uIGV4ZWN1dG9yKGMpIHtcbiAgICBjYW5jZWwgPSBjO1xuICB9KTtcbiAgcmV0dXJuIHtcbiAgICB0b2tlbjogdG9rZW4sXG4gICAgY2FuY2VsOiBjYW5jZWxcbiAgfTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQ2FuY2VsVG9rZW47XG4iLCIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNDYW5jZWwodmFsdWUpIHtcbiAgcmV0dXJuICEhKHZhbHVlICYmIHZhbHVlLl9fQ0FOQ0VMX18pO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xudmFyIGJ1aWxkVVJMID0gcmVxdWlyZSgnLi4vaGVscGVycy9idWlsZFVSTCcpO1xudmFyIEludGVyY2VwdG9yTWFuYWdlciA9IHJlcXVpcmUoJy4vSW50ZXJjZXB0b3JNYW5hZ2VyJyk7XG52YXIgZGlzcGF0Y2hSZXF1ZXN0ID0gcmVxdWlyZSgnLi9kaXNwYXRjaFJlcXVlc3QnKTtcbnZhciBtZXJnZUNvbmZpZyA9IHJlcXVpcmUoJy4vbWVyZ2VDb25maWcnKTtcbnZhciB2YWxpZGF0b3IgPSByZXF1aXJlKCcuLi9oZWxwZXJzL3ZhbGlkYXRvcicpO1xuXG52YXIgdmFsaWRhdG9ycyA9IHZhbGlkYXRvci52YWxpZGF0b3JzO1xuLyoqXG4gKiBDcmVhdGUgYSBuZXcgaW5zdGFuY2Ugb2YgQXhpb3NcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gaW5zdGFuY2VDb25maWcgVGhlIGRlZmF1bHQgY29uZmlnIGZvciB0aGUgaW5zdGFuY2VcbiAqL1xuZnVuY3Rpb24gQXhpb3MoaW5zdGFuY2VDb25maWcpIHtcbiAgdGhpcy5kZWZhdWx0cyA9IGluc3RhbmNlQ29uZmlnO1xuICB0aGlzLmludGVyY2VwdG9ycyA9IHtcbiAgICByZXF1ZXN0OiBuZXcgSW50ZXJjZXB0b3JNYW5hZ2VyKCksXG4gICAgcmVzcG9uc2U6IG5ldyBJbnRlcmNlcHRvck1hbmFnZXIoKVxuICB9O1xufVxuXG4vKipcbiAqIERpc3BhdGNoIGEgcmVxdWVzdFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZyBzcGVjaWZpYyBmb3IgdGhpcyByZXF1ZXN0IChtZXJnZWQgd2l0aCB0aGlzLmRlZmF1bHRzKVxuICovXG5BeGlvcy5wcm90b3R5cGUucmVxdWVzdCA9IGZ1bmN0aW9uIHJlcXVlc3QoY29uZmlnT3JVcmwsIGNvbmZpZykge1xuICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgLy8gQWxsb3cgZm9yIGF4aW9zKCdleGFtcGxlL3VybCdbLCBjb25maWddKSBhIGxhIGZldGNoIEFQSVxuICBpZiAodHlwZW9mIGNvbmZpZ09yVXJsID09PSAnc3RyaW5nJykge1xuICAgIGNvbmZpZyA9IGNvbmZpZyB8fCB7fTtcbiAgICBjb25maWcudXJsID0gY29uZmlnT3JVcmw7XG4gIH0gZWxzZSB7XG4gICAgY29uZmlnID0gY29uZmlnT3JVcmwgfHwge307XG4gIH1cblxuICBjb25maWcgPSBtZXJnZUNvbmZpZyh0aGlzLmRlZmF1bHRzLCBjb25maWcpO1xuXG4gIC8vIFNldCBjb25maWcubWV0aG9kXG4gIGlmIChjb25maWcubWV0aG9kKSB7XG4gICAgY29uZmlnLm1ldGhvZCA9IGNvbmZpZy5tZXRob2QudG9Mb3dlckNhc2UoKTtcbiAgfSBlbHNlIGlmICh0aGlzLmRlZmF1bHRzLm1ldGhvZCkge1xuICAgIGNvbmZpZy5tZXRob2QgPSB0aGlzLmRlZmF1bHRzLm1ldGhvZC50b0xvd2VyQ2FzZSgpO1xuICB9IGVsc2Uge1xuICAgIGNvbmZpZy5tZXRob2QgPSAnZ2V0JztcbiAgfVxuXG4gIHZhciB0cmFuc2l0aW9uYWwgPSBjb25maWcudHJhbnNpdGlvbmFsO1xuXG4gIGlmICh0cmFuc2l0aW9uYWwgIT09IHVuZGVmaW5lZCkge1xuICAgIHZhbGlkYXRvci5hc3NlcnRPcHRpb25zKHRyYW5zaXRpb25hbCwge1xuICAgICAgc2lsZW50SlNPTlBhcnNpbmc6IHZhbGlkYXRvcnMudHJhbnNpdGlvbmFsKHZhbGlkYXRvcnMuYm9vbGVhbiksXG4gICAgICBmb3JjZWRKU09OUGFyc2luZzogdmFsaWRhdG9ycy50cmFuc2l0aW9uYWwodmFsaWRhdG9ycy5ib29sZWFuKSxcbiAgICAgIGNsYXJpZnlUaW1lb3V0RXJyb3I6IHZhbGlkYXRvcnMudHJhbnNpdGlvbmFsKHZhbGlkYXRvcnMuYm9vbGVhbilcbiAgICB9LCBmYWxzZSk7XG4gIH1cblxuICAvLyBmaWx0ZXIgb3V0IHNraXBwZWQgaW50ZXJjZXB0b3JzXG4gIHZhciByZXF1ZXN0SW50ZXJjZXB0b3JDaGFpbiA9IFtdO1xuICB2YXIgc3luY2hyb25vdXNSZXF1ZXN0SW50ZXJjZXB0b3JzID0gdHJ1ZTtcbiAgdGhpcy5pbnRlcmNlcHRvcnMucmVxdWVzdC5mb3JFYWNoKGZ1bmN0aW9uIHVuc2hpZnRSZXF1ZXN0SW50ZXJjZXB0b3JzKGludGVyY2VwdG9yKSB7XG4gICAgaWYgKHR5cGVvZiBpbnRlcmNlcHRvci5ydW5XaGVuID09PSAnZnVuY3Rpb24nICYmIGludGVyY2VwdG9yLnJ1bldoZW4oY29uZmlnKSA9PT0gZmFsc2UpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBzeW5jaHJvbm91c1JlcXVlc3RJbnRlcmNlcHRvcnMgPSBzeW5jaHJvbm91c1JlcXVlc3RJbnRlcmNlcHRvcnMgJiYgaW50ZXJjZXB0b3Iuc3luY2hyb25vdXM7XG5cbiAgICByZXF1ZXN0SW50ZXJjZXB0b3JDaGFpbi51bnNoaWZ0KGludGVyY2VwdG9yLmZ1bGZpbGxlZCwgaW50ZXJjZXB0b3IucmVqZWN0ZWQpO1xuICB9KTtcblxuICB2YXIgcmVzcG9uc2VJbnRlcmNlcHRvckNoYWluID0gW107XG4gIHRoaXMuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLmZvckVhY2goZnVuY3Rpb24gcHVzaFJlc3BvbnNlSW50ZXJjZXB0b3JzKGludGVyY2VwdG9yKSB7XG4gICAgcmVzcG9uc2VJbnRlcmNlcHRvckNoYWluLnB1c2goaW50ZXJjZXB0b3IuZnVsZmlsbGVkLCBpbnRlcmNlcHRvci5yZWplY3RlZCk7XG4gIH0pO1xuXG4gIHZhciBwcm9taXNlO1xuXG4gIGlmICghc3luY2hyb25vdXNSZXF1ZXN0SW50ZXJjZXB0b3JzKSB7XG4gICAgdmFyIGNoYWluID0gW2Rpc3BhdGNoUmVxdWVzdCwgdW5kZWZpbmVkXTtcblxuICAgIEFycmF5LnByb3RvdHlwZS51bnNoaWZ0LmFwcGx5KGNoYWluLCByZXF1ZXN0SW50ZXJjZXB0b3JDaGFpbik7XG4gICAgY2hhaW4gPSBjaGFpbi5jb25jYXQocmVzcG9uc2VJbnRlcmNlcHRvckNoYWluKTtcblxuICAgIHByb21pc2UgPSBQcm9taXNlLnJlc29sdmUoY29uZmlnKTtcbiAgICB3aGlsZSAoY2hhaW4ubGVuZ3RoKSB7XG4gICAgICBwcm9taXNlID0gcHJvbWlzZS50aGVuKGNoYWluLnNoaWZ0KCksIGNoYWluLnNoaWZ0KCkpO1xuICAgIH1cblxuICAgIHJldHVybiBwcm9taXNlO1xuICB9XG5cblxuICB2YXIgbmV3Q29uZmlnID0gY29uZmlnO1xuICB3aGlsZSAocmVxdWVzdEludGVyY2VwdG9yQ2hhaW4ubGVuZ3RoKSB7XG4gICAgdmFyIG9uRnVsZmlsbGVkID0gcmVxdWVzdEludGVyY2VwdG9yQ2hhaW4uc2hpZnQoKTtcbiAgICB2YXIgb25SZWplY3RlZCA9IHJlcXVlc3RJbnRlcmNlcHRvckNoYWluLnNoaWZ0KCk7XG4gICAgdHJ5IHtcbiAgICAgIG5ld0NvbmZpZyA9IG9uRnVsZmlsbGVkKG5ld0NvbmZpZyk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIG9uUmVqZWN0ZWQoZXJyb3IpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgdHJ5IHtcbiAgICBwcm9taXNlID0gZGlzcGF0Y2hSZXF1ZXN0KG5ld0NvbmZpZyk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTtcbiAgfVxuXG4gIHdoaWxlIChyZXNwb25zZUludGVyY2VwdG9yQ2hhaW4ubGVuZ3RoKSB7XG4gICAgcHJvbWlzZSA9IHByb21pc2UudGhlbihyZXNwb25zZUludGVyY2VwdG9yQ2hhaW4uc2hpZnQoKSwgcmVzcG9uc2VJbnRlcmNlcHRvckNoYWluLnNoaWZ0KCkpO1xuICB9XG5cbiAgcmV0dXJuIHByb21pc2U7XG59O1xuXG5BeGlvcy5wcm90b3R5cGUuZ2V0VXJpID0gZnVuY3Rpb24gZ2V0VXJpKGNvbmZpZykge1xuICBjb25maWcgPSBtZXJnZUNvbmZpZyh0aGlzLmRlZmF1bHRzLCBjb25maWcpO1xuICByZXR1cm4gYnVpbGRVUkwoY29uZmlnLnVybCwgY29uZmlnLnBhcmFtcywgY29uZmlnLnBhcmFtc1NlcmlhbGl6ZXIpLnJlcGxhY2UoL15cXD8vLCAnJyk7XG59O1xuXG4vLyBQcm92aWRlIGFsaWFzZXMgZm9yIHN1cHBvcnRlZCByZXF1ZXN0IG1ldGhvZHNcbnV0aWxzLmZvckVhY2goWydkZWxldGUnLCAnZ2V0JywgJ2hlYWQnLCAnb3B0aW9ucyddLCBmdW5jdGlvbiBmb3JFYWNoTWV0aG9kTm9EYXRhKG1ldGhvZCkge1xuICAvKmVzbGludCBmdW5jLW5hbWVzOjAqL1xuICBBeGlvcy5wcm90b3R5cGVbbWV0aG9kXSA9IGZ1bmN0aW9uKHVybCwgY29uZmlnKSB7XG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdChtZXJnZUNvbmZpZyhjb25maWcgfHwge30sIHtcbiAgICAgIG1ldGhvZDogbWV0aG9kLFxuICAgICAgdXJsOiB1cmwsXG4gICAgICBkYXRhOiAoY29uZmlnIHx8IHt9KS5kYXRhXG4gICAgfSkpO1xuICB9O1xufSk7XG5cbnV0aWxzLmZvckVhY2goWydwb3N0JywgJ3B1dCcsICdwYXRjaCddLCBmdW5jdGlvbiBmb3JFYWNoTWV0aG9kV2l0aERhdGEobWV0aG9kKSB7XG4gIC8qZXNsaW50IGZ1bmMtbmFtZXM6MCovXG4gIEF4aW9zLnByb3RvdHlwZVttZXRob2RdID0gZnVuY3Rpb24odXJsLCBkYXRhLCBjb25maWcpIHtcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0KG1lcmdlQ29uZmlnKGNvbmZpZyB8fCB7fSwge1xuICAgICAgbWV0aG9kOiBtZXRob2QsXG4gICAgICB1cmw6IHVybCxcbiAgICAgIGRhdGE6IGRhdGFcbiAgICB9KSk7XG4gIH07XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBBeGlvcztcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5mdW5jdGlvbiBJbnRlcmNlcHRvck1hbmFnZXIoKSB7XG4gIHRoaXMuaGFuZGxlcnMgPSBbXTtcbn1cblxuLyoqXG4gKiBBZGQgYSBuZXcgaW50ZXJjZXB0b3IgdG8gdGhlIHN0YWNrXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVsZmlsbGVkIFRoZSBmdW5jdGlvbiB0byBoYW5kbGUgYHRoZW5gIGZvciBhIGBQcm9taXNlYFxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVqZWN0ZWQgVGhlIGZ1bmN0aW9uIHRvIGhhbmRsZSBgcmVqZWN0YCBmb3IgYSBgUHJvbWlzZWBcbiAqXG4gKiBAcmV0dXJuIHtOdW1iZXJ9IEFuIElEIHVzZWQgdG8gcmVtb3ZlIGludGVyY2VwdG9yIGxhdGVyXG4gKi9cbkludGVyY2VwdG9yTWFuYWdlci5wcm90b3R5cGUudXNlID0gZnVuY3Rpb24gdXNlKGZ1bGZpbGxlZCwgcmVqZWN0ZWQsIG9wdGlvbnMpIHtcbiAgdGhpcy5oYW5kbGVycy5wdXNoKHtcbiAgICBmdWxmaWxsZWQ6IGZ1bGZpbGxlZCxcbiAgICByZWplY3RlZDogcmVqZWN0ZWQsXG4gICAgc3luY2hyb25vdXM6IG9wdGlvbnMgPyBvcHRpb25zLnN5bmNocm9ub3VzIDogZmFsc2UsXG4gICAgcnVuV2hlbjogb3B0aW9ucyA/IG9wdGlvbnMucnVuV2hlbiA6IG51bGxcbiAgfSk7XG4gIHJldHVybiB0aGlzLmhhbmRsZXJzLmxlbmd0aCAtIDE7XG59O1xuXG4vKipcbiAqIFJlbW92ZSBhbiBpbnRlcmNlcHRvciBmcm9tIHRoZSBzdGFja1xuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBpZCBUaGUgSUQgdGhhdCB3YXMgcmV0dXJuZWQgYnkgYHVzZWBcbiAqL1xuSW50ZXJjZXB0b3JNYW5hZ2VyLnByb3RvdHlwZS5lamVjdCA9IGZ1bmN0aW9uIGVqZWN0KGlkKSB7XG4gIGlmICh0aGlzLmhhbmRsZXJzW2lkXSkge1xuICAgIHRoaXMuaGFuZGxlcnNbaWRdID0gbnVsbDtcbiAgfVxufTtcblxuLyoqXG4gKiBJdGVyYXRlIG92ZXIgYWxsIHRoZSByZWdpc3RlcmVkIGludGVyY2VwdG9yc1xuICpcbiAqIFRoaXMgbWV0aG9kIGlzIHBhcnRpY3VsYXJseSB1c2VmdWwgZm9yIHNraXBwaW5nIG92ZXIgYW55XG4gKiBpbnRlcmNlcHRvcnMgdGhhdCBtYXkgaGF2ZSBiZWNvbWUgYG51bGxgIGNhbGxpbmcgYGVqZWN0YC5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgZnVuY3Rpb24gdG8gY2FsbCBmb3IgZWFjaCBpbnRlcmNlcHRvclxuICovXG5JbnRlcmNlcHRvck1hbmFnZXIucHJvdG90eXBlLmZvckVhY2ggPSBmdW5jdGlvbiBmb3JFYWNoKGZuKSB7XG4gIHV0aWxzLmZvckVhY2godGhpcy5oYW5kbGVycywgZnVuY3Rpb24gZm9yRWFjaEhhbmRsZXIoaCkge1xuICAgIGlmIChoICE9PSBudWxsKSB7XG4gICAgICBmbihoKTtcbiAgICB9XG4gIH0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBJbnRlcmNlcHRvck1hbmFnZXI7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBpc0Fic29sdXRlVVJMID0gcmVxdWlyZSgnLi4vaGVscGVycy9pc0Fic29sdXRlVVJMJyk7XG52YXIgY29tYmluZVVSTHMgPSByZXF1aXJlKCcuLi9oZWxwZXJzL2NvbWJpbmVVUkxzJyk7XG5cbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBVUkwgYnkgY29tYmluaW5nIHRoZSBiYXNlVVJMIHdpdGggdGhlIHJlcXVlc3RlZFVSTCxcbiAqIG9ubHkgd2hlbiB0aGUgcmVxdWVzdGVkVVJMIGlzIG5vdCBhbHJlYWR5IGFuIGFic29sdXRlIFVSTC5cbiAqIElmIHRoZSByZXF1ZXN0VVJMIGlzIGFic29sdXRlLCB0aGlzIGZ1bmN0aW9uIHJldHVybnMgdGhlIHJlcXVlc3RlZFVSTCB1bnRvdWNoZWQuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGJhc2VVUkwgVGhlIGJhc2UgVVJMXG4gKiBAcGFyYW0ge3N0cmluZ30gcmVxdWVzdGVkVVJMIEFic29sdXRlIG9yIHJlbGF0aXZlIFVSTCB0byBjb21iaW5lXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgY29tYmluZWQgZnVsbCBwYXRoXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gYnVpbGRGdWxsUGF0aChiYXNlVVJMLCByZXF1ZXN0ZWRVUkwpIHtcbiAgaWYgKGJhc2VVUkwgJiYgIWlzQWJzb2x1dGVVUkwocmVxdWVzdGVkVVJMKSkge1xuICAgIHJldHVybiBjb21iaW5lVVJMcyhiYXNlVVJMLCByZXF1ZXN0ZWRVUkwpO1xuICB9XG4gIHJldHVybiByZXF1ZXN0ZWRVUkw7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgZW5oYW5jZUVycm9yID0gcmVxdWlyZSgnLi9lbmhhbmNlRXJyb3InKTtcblxuLyoqXG4gKiBDcmVhdGUgYW4gRXJyb3Igd2l0aCB0aGUgc3BlY2lmaWVkIG1lc3NhZ2UsIGNvbmZpZywgZXJyb3IgY29kZSwgcmVxdWVzdCBhbmQgcmVzcG9uc2UuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2UgVGhlIGVycm9yIG1lc3NhZ2UuXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnIFRoZSBjb25maWcuXG4gKiBAcGFyYW0ge3N0cmluZ30gW2NvZGVdIFRoZSBlcnJvciBjb2RlIChmb3IgZXhhbXBsZSwgJ0VDT05OQUJPUlRFRCcpLlxuICogQHBhcmFtIHtPYmplY3R9IFtyZXF1ZXN0XSBUaGUgcmVxdWVzdC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVzcG9uc2VdIFRoZSByZXNwb25zZS5cbiAqIEByZXR1cm5zIHtFcnJvcn0gVGhlIGNyZWF0ZWQgZXJyb3IuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY3JlYXRlRXJyb3IobWVzc2FnZSwgY29uZmlnLCBjb2RlLCByZXF1ZXN0LCByZXNwb25zZSkge1xuICB2YXIgZXJyb3IgPSBuZXcgRXJyb3IobWVzc2FnZSk7XG4gIHJldHVybiBlbmhhbmNlRXJyb3IoZXJyb3IsIGNvbmZpZywgY29kZSwgcmVxdWVzdCwgcmVzcG9uc2UpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xudmFyIHRyYW5zZm9ybURhdGEgPSByZXF1aXJlKCcuL3RyYW5zZm9ybURhdGEnKTtcbnZhciBpc0NhbmNlbCA9IHJlcXVpcmUoJy4uL2NhbmNlbC9pc0NhbmNlbCcpO1xudmFyIGRlZmF1bHRzID0gcmVxdWlyZSgnLi4vZGVmYXVsdHMnKTtcbnZhciBDYW5jZWwgPSByZXF1aXJlKCcuLi9jYW5jZWwvQ2FuY2VsJyk7XG5cbi8qKlxuICogVGhyb3dzIGEgYENhbmNlbGAgaWYgY2FuY2VsbGF0aW9uIGhhcyBiZWVuIHJlcXVlc3RlZC5cbiAqL1xuZnVuY3Rpb24gdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpIHtcbiAgaWYgKGNvbmZpZy5jYW5jZWxUb2tlbikge1xuICAgIGNvbmZpZy5jYW5jZWxUb2tlbi50aHJvd0lmUmVxdWVzdGVkKCk7XG4gIH1cblxuICBpZiAoY29uZmlnLnNpZ25hbCAmJiBjb25maWcuc2lnbmFsLmFib3J0ZWQpIHtcbiAgICB0aHJvdyBuZXcgQ2FuY2VsKCdjYW5jZWxlZCcpO1xuICB9XG59XG5cbi8qKlxuICogRGlzcGF0Y2ggYSByZXF1ZXN0IHRvIHRoZSBzZXJ2ZXIgdXNpbmcgdGhlIGNvbmZpZ3VyZWQgYWRhcHRlci5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gY29uZmlnIFRoZSBjb25maWcgdGhhdCBpcyB0byBiZSB1c2VkIGZvciB0aGUgcmVxdWVzdFxuICogQHJldHVybnMge1Byb21pc2V9IFRoZSBQcm9taXNlIHRvIGJlIGZ1bGZpbGxlZFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGRpc3BhdGNoUmVxdWVzdChjb25maWcpIHtcbiAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gIC8vIEVuc3VyZSBoZWFkZXJzIGV4aXN0XG4gIGNvbmZpZy5oZWFkZXJzID0gY29uZmlnLmhlYWRlcnMgfHwge307XG5cbiAgLy8gVHJhbnNmb3JtIHJlcXVlc3QgZGF0YVxuICBjb25maWcuZGF0YSA9IHRyYW5zZm9ybURhdGEuY2FsbChcbiAgICBjb25maWcsXG4gICAgY29uZmlnLmRhdGEsXG4gICAgY29uZmlnLmhlYWRlcnMsXG4gICAgY29uZmlnLnRyYW5zZm9ybVJlcXVlc3RcbiAgKTtcblxuICAvLyBGbGF0dGVuIGhlYWRlcnNcbiAgY29uZmlnLmhlYWRlcnMgPSB1dGlscy5tZXJnZShcbiAgICBjb25maWcuaGVhZGVycy5jb21tb24gfHwge30sXG4gICAgY29uZmlnLmhlYWRlcnNbY29uZmlnLm1ldGhvZF0gfHwge30sXG4gICAgY29uZmlnLmhlYWRlcnNcbiAgKTtcblxuICB1dGlscy5mb3JFYWNoKFxuICAgIFsnZGVsZXRlJywgJ2dldCcsICdoZWFkJywgJ3Bvc3QnLCAncHV0JywgJ3BhdGNoJywgJ2NvbW1vbiddLFxuICAgIGZ1bmN0aW9uIGNsZWFuSGVhZGVyQ29uZmlnKG1ldGhvZCkge1xuICAgICAgZGVsZXRlIGNvbmZpZy5oZWFkZXJzW21ldGhvZF07XG4gICAgfVxuICApO1xuXG4gIHZhciBhZGFwdGVyID0gY29uZmlnLmFkYXB0ZXIgfHwgZGVmYXVsdHMuYWRhcHRlcjtcblxuICByZXR1cm4gYWRhcHRlcihjb25maWcpLnRoZW4oZnVuY3Rpb24gb25BZGFwdGVyUmVzb2x1dGlvbihyZXNwb25zZSkge1xuICAgIHRocm93SWZDYW5jZWxsYXRpb25SZXF1ZXN0ZWQoY29uZmlnKTtcblxuICAgIC8vIFRyYW5zZm9ybSByZXNwb25zZSBkYXRhXG4gICAgcmVzcG9uc2UuZGF0YSA9IHRyYW5zZm9ybURhdGEuY2FsbChcbiAgICAgIGNvbmZpZyxcbiAgICAgIHJlc3BvbnNlLmRhdGEsXG4gICAgICByZXNwb25zZS5oZWFkZXJzLFxuICAgICAgY29uZmlnLnRyYW5zZm9ybVJlc3BvbnNlXG4gICAgKTtcblxuICAgIHJldHVybiByZXNwb25zZTtcbiAgfSwgZnVuY3Rpb24gb25BZGFwdGVyUmVqZWN0aW9uKHJlYXNvbikge1xuICAgIGlmICghaXNDYW5jZWwocmVhc29uKSkge1xuICAgICAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gICAgICAvLyBUcmFuc2Zvcm0gcmVzcG9uc2UgZGF0YVxuICAgICAgaWYgKHJlYXNvbiAmJiByZWFzb24ucmVzcG9uc2UpIHtcbiAgICAgICAgcmVhc29uLnJlc3BvbnNlLmRhdGEgPSB0cmFuc2Zvcm1EYXRhLmNhbGwoXG4gICAgICAgICAgY29uZmlnLFxuICAgICAgICAgIHJlYXNvbi5yZXNwb25zZS5kYXRhLFxuICAgICAgICAgIHJlYXNvbi5yZXNwb25zZS5oZWFkZXJzLFxuICAgICAgICAgIGNvbmZpZy50cmFuc2Zvcm1SZXNwb25zZVxuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChyZWFzb24pO1xuICB9KTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogVXBkYXRlIGFuIEVycm9yIHdpdGggdGhlIHNwZWNpZmllZCBjb25maWcsIGVycm9yIGNvZGUsIGFuZCByZXNwb25zZS5cbiAqXG4gKiBAcGFyYW0ge0Vycm9yfSBlcnJvciBUaGUgZXJyb3IgdG8gdXBkYXRlLlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZyBUaGUgY29uZmlnLlxuICogQHBhcmFtIHtzdHJpbmd9IFtjb2RlXSBUaGUgZXJyb3IgY29kZSAoZm9yIGV4YW1wbGUsICdFQ09OTkFCT1JURUQnKS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVxdWVzdF0gVGhlIHJlcXVlc3QuXG4gKiBAcGFyYW0ge09iamVjdH0gW3Jlc3BvbnNlXSBUaGUgcmVzcG9uc2UuXG4gKiBAcmV0dXJucyB7RXJyb3J9IFRoZSBlcnJvci5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBlbmhhbmNlRXJyb3IoZXJyb3IsIGNvbmZpZywgY29kZSwgcmVxdWVzdCwgcmVzcG9uc2UpIHtcbiAgZXJyb3IuY29uZmlnID0gY29uZmlnO1xuICBpZiAoY29kZSkge1xuICAgIGVycm9yLmNvZGUgPSBjb2RlO1xuICB9XG5cbiAgZXJyb3IucmVxdWVzdCA9IHJlcXVlc3Q7XG4gIGVycm9yLnJlc3BvbnNlID0gcmVzcG9uc2U7XG4gIGVycm9yLmlzQXhpb3NFcnJvciA9IHRydWU7XG5cbiAgZXJyb3IudG9KU09OID0gZnVuY3Rpb24gdG9KU09OKCkge1xuICAgIHJldHVybiB7XG4gICAgICAvLyBTdGFuZGFyZFxuICAgICAgbWVzc2FnZTogdGhpcy5tZXNzYWdlLFxuICAgICAgbmFtZTogdGhpcy5uYW1lLFxuICAgICAgLy8gTWljcm9zb2Z0XG4gICAgICBkZXNjcmlwdGlvbjogdGhpcy5kZXNjcmlwdGlvbixcbiAgICAgIG51bWJlcjogdGhpcy5udW1iZXIsXG4gICAgICAvLyBNb3ppbGxhXG4gICAgICBmaWxlTmFtZTogdGhpcy5maWxlTmFtZSxcbiAgICAgIGxpbmVOdW1iZXI6IHRoaXMubGluZU51bWJlcixcbiAgICAgIGNvbHVtbk51bWJlcjogdGhpcy5jb2x1bW5OdW1iZXIsXG4gICAgICBzdGFjazogdGhpcy5zdGFjayxcbiAgICAgIC8vIEF4aW9zXG4gICAgICBjb25maWc6IHRoaXMuY29uZmlnLFxuICAgICAgY29kZTogdGhpcy5jb2RlLFxuICAgICAgc3RhdHVzOiB0aGlzLnJlc3BvbnNlICYmIHRoaXMucmVzcG9uc2Uuc3RhdHVzID8gdGhpcy5yZXNwb25zZS5zdGF0dXMgOiBudWxsXG4gICAgfTtcbiAgfTtcbiAgcmV0dXJuIGVycm9yO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxuLyoqXG4gKiBDb25maWctc3BlY2lmaWMgbWVyZ2UtZnVuY3Rpb24gd2hpY2ggY3JlYXRlcyBhIG5ldyBjb25maWctb2JqZWN0XG4gKiBieSBtZXJnaW5nIHR3byBjb25maWd1cmF0aW9uIG9iamVjdHMgdG9nZXRoZXIuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZzFcbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcyXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBOZXcgb2JqZWN0IHJlc3VsdGluZyBmcm9tIG1lcmdpbmcgY29uZmlnMiB0byBjb25maWcxXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gbWVyZ2VDb25maWcoY29uZmlnMSwgY29uZmlnMikge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgY29uZmlnMiA9IGNvbmZpZzIgfHwge307XG4gIHZhciBjb25maWcgPSB7fTtcblxuICBmdW5jdGlvbiBnZXRNZXJnZWRWYWx1ZSh0YXJnZXQsIHNvdXJjZSkge1xuICAgIGlmICh1dGlscy5pc1BsYWluT2JqZWN0KHRhcmdldCkgJiYgdXRpbHMuaXNQbGFpbk9iamVjdChzb3VyY2UpKSB7XG4gICAgICByZXR1cm4gdXRpbHMubWVyZ2UodGFyZ2V0LCBzb3VyY2UpO1xuICAgIH0gZWxzZSBpZiAodXRpbHMuaXNQbGFpbk9iamVjdChzb3VyY2UpKSB7XG4gICAgICByZXR1cm4gdXRpbHMubWVyZ2Uoe30sIHNvdXJjZSk7XG4gICAgfSBlbHNlIGlmICh1dGlscy5pc0FycmF5KHNvdXJjZSkpIHtcbiAgICAgIHJldHVybiBzb3VyY2Uuc2xpY2UoKTtcbiAgICB9XG4gICAgcmV0dXJuIHNvdXJjZTtcbiAgfVxuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjb25zaXN0ZW50LXJldHVyblxuICBmdW5jdGlvbiBtZXJnZURlZXBQcm9wZXJ0aWVzKHByb3ApIHtcbiAgICBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGNvbmZpZzJbcHJvcF0pKSB7XG4gICAgICByZXR1cm4gZ2V0TWVyZ2VkVmFsdWUoY29uZmlnMVtwcm9wXSwgY29uZmlnMltwcm9wXSk7XG4gICAgfSBlbHNlIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnMVtwcm9wXSkpIHtcbiAgICAgIHJldHVybiBnZXRNZXJnZWRWYWx1ZSh1bmRlZmluZWQsIGNvbmZpZzFbcHJvcF0pO1xuICAgIH1cbiAgfVxuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjb25zaXN0ZW50LXJldHVyblxuICBmdW5jdGlvbiB2YWx1ZUZyb21Db25maWcyKHByb3ApIHtcbiAgICBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGNvbmZpZzJbcHJvcF0pKSB7XG4gICAgICByZXR1cm4gZ2V0TWVyZ2VkVmFsdWUodW5kZWZpbmVkLCBjb25maWcyW3Byb3BdKTtcbiAgICB9XG4gIH1cblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY29uc2lzdGVudC1yZXR1cm5cbiAgZnVuY3Rpb24gZGVmYXVsdFRvQ29uZmlnMihwcm9wKSB7XG4gICAgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChjb25maWcyW3Byb3BdKSkge1xuICAgICAgcmV0dXJuIGdldE1lcmdlZFZhbHVlKHVuZGVmaW5lZCwgY29uZmlnMltwcm9wXSk7XG4gICAgfSBlbHNlIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnMVtwcm9wXSkpIHtcbiAgICAgIHJldHVybiBnZXRNZXJnZWRWYWx1ZSh1bmRlZmluZWQsIGNvbmZpZzFbcHJvcF0pO1xuICAgIH1cbiAgfVxuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjb25zaXN0ZW50LXJldHVyblxuICBmdW5jdGlvbiBtZXJnZURpcmVjdEtleXMocHJvcCkge1xuICAgIGlmIChwcm9wIGluIGNvbmZpZzIpIHtcbiAgICAgIHJldHVybiBnZXRNZXJnZWRWYWx1ZShjb25maWcxW3Byb3BdLCBjb25maWcyW3Byb3BdKTtcbiAgICB9IGVsc2UgaWYgKHByb3AgaW4gY29uZmlnMSkge1xuICAgICAgcmV0dXJuIGdldE1lcmdlZFZhbHVlKHVuZGVmaW5lZCwgY29uZmlnMVtwcm9wXSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIG1lcmdlTWFwID0ge1xuICAgICd1cmwnOiB2YWx1ZUZyb21Db25maWcyLFxuICAgICdtZXRob2QnOiB2YWx1ZUZyb21Db25maWcyLFxuICAgICdkYXRhJzogdmFsdWVGcm9tQ29uZmlnMixcbiAgICAnYmFzZVVSTCc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ3RyYW5zZm9ybVJlcXVlc3QnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICd0cmFuc2Zvcm1SZXNwb25zZSc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ3BhcmFtc1NlcmlhbGl6ZXInOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICd0aW1lb3V0JzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAndGltZW91dE1lc3NhZ2UnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICd3aXRoQ3JlZGVudGlhbHMnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICdhZGFwdGVyJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAncmVzcG9uc2VUeXBlJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAneHNyZkNvb2tpZU5hbWUnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICd4c3JmSGVhZGVyTmFtZSc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ29uVXBsb2FkUHJvZ3Jlc3MnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICdvbkRvd25sb2FkUHJvZ3Jlc3MnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICdkZWNvbXByZXNzJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAnbWF4Q29udGVudExlbmd0aCc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ21heEJvZHlMZW5ndGgnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICd0cmFuc3BvcnQnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICdodHRwQWdlbnQnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICdodHRwc0FnZW50JzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAnY2FuY2VsVG9rZW4nOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICdzb2NrZXRQYXRoJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAncmVzcG9uc2VFbmNvZGluZyc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ3ZhbGlkYXRlU3RhdHVzJzogbWVyZ2VEaXJlY3RLZXlzXG4gIH07XG5cbiAgdXRpbHMuZm9yRWFjaChPYmplY3Qua2V5cyhjb25maWcxKS5jb25jYXQoT2JqZWN0LmtleXMoY29uZmlnMikpLCBmdW5jdGlvbiBjb21wdXRlQ29uZmlnVmFsdWUocHJvcCkge1xuICAgIHZhciBtZXJnZSA9IG1lcmdlTWFwW3Byb3BdIHx8IG1lcmdlRGVlcFByb3BlcnRpZXM7XG4gICAgdmFyIGNvbmZpZ1ZhbHVlID0gbWVyZ2UocHJvcCk7XG4gICAgKHV0aWxzLmlzVW5kZWZpbmVkKGNvbmZpZ1ZhbHVlKSAmJiBtZXJnZSAhPT0gbWVyZ2VEaXJlY3RLZXlzKSB8fCAoY29uZmlnW3Byb3BdID0gY29uZmlnVmFsdWUpO1xuICB9KTtcblxuICByZXR1cm4gY29uZmlnO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGNyZWF0ZUVycm9yID0gcmVxdWlyZSgnLi9jcmVhdGVFcnJvcicpO1xuXG4vKipcbiAqIFJlc29sdmUgb3IgcmVqZWN0IGEgUHJvbWlzZSBiYXNlZCBvbiByZXNwb25zZSBzdGF0dXMuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVzb2x2ZSBBIGZ1bmN0aW9uIHRoYXQgcmVzb2x2ZXMgdGhlIHByb21pc2UuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSByZWplY3QgQSBmdW5jdGlvbiB0aGF0IHJlamVjdHMgdGhlIHByb21pc2UuXG4gKiBAcGFyYW0ge29iamVjdH0gcmVzcG9uc2UgVGhlIHJlc3BvbnNlLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHNldHRsZShyZXNvbHZlLCByZWplY3QsIHJlc3BvbnNlKSB7XG4gIHZhciB2YWxpZGF0ZVN0YXR1cyA9IHJlc3BvbnNlLmNvbmZpZy52YWxpZGF0ZVN0YXR1cztcbiAgaWYgKCFyZXNwb25zZS5zdGF0dXMgfHwgIXZhbGlkYXRlU3RhdHVzIHx8IHZhbGlkYXRlU3RhdHVzKHJlc3BvbnNlLnN0YXR1cykpIHtcbiAgICByZXNvbHZlKHJlc3BvbnNlKTtcbiAgfSBlbHNlIHtcbiAgICByZWplY3QoY3JlYXRlRXJyb3IoXG4gICAgICAnUmVxdWVzdCBmYWlsZWQgd2l0aCBzdGF0dXMgY29kZSAnICsgcmVzcG9uc2Uuc3RhdHVzLFxuICAgICAgcmVzcG9uc2UuY29uZmlnLFxuICAgICAgbnVsbCxcbiAgICAgIHJlc3BvbnNlLnJlcXVlc3QsXG4gICAgICByZXNwb25zZVxuICAgICkpO1xuICB9XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG52YXIgZGVmYXVsdHMgPSByZXF1aXJlKCcuLi9kZWZhdWx0cycpO1xuXG4vKipcbiAqIFRyYW5zZm9ybSB0aGUgZGF0YSBmb3IgYSByZXF1ZXN0IG9yIGEgcmVzcG9uc2VcbiAqXG4gKiBAcGFyYW0ge09iamVjdHxTdHJpbmd9IGRhdGEgVGhlIGRhdGEgdG8gYmUgdHJhbnNmb3JtZWRcbiAqIEBwYXJhbSB7QXJyYXl9IGhlYWRlcnMgVGhlIGhlYWRlcnMgZm9yIHRoZSByZXF1ZXN0IG9yIHJlc3BvbnNlXG4gKiBAcGFyYW0ge0FycmF5fEZ1bmN0aW9ufSBmbnMgQSBzaW5nbGUgZnVuY3Rpb24gb3IgQXJyYXkgb2YgZnVuY3Rpb25zXG4gKiBAcmV0dXJucyB7Kn0gVGhlIHJlc3VsdGluZyB0cmFuc2Zvcm1lZCBkYXRhXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gdHJhbnNmb3JtRGF0YShkYXRhLCBoZWFkZXJzLCBmbnMpIHtcbiAgdmFyIGNvbnRleHQgPSB0aGlzIHx8IGRlZmF1bHRzO1xuICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgdXRpbHMuZm9yRWFjaChmbnMsIGZ1bmN0aW9uIHRyYW5zZm9ybShmbikge1xuICAgIGRhdGEgPSBmbi5jYWxsKGNvbnRleHQsIGRhdGEsIGhlYWRlcnMpO1xuICB9KTtcblxuICByZXR1cm4gZGF0YTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4uL3V0aWxzJyk7XG52YXIgbm9ybWFsaXplSGVhZGVyTmFtZSA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvbm9ybWFsaXplSGVhZGVyTmFtZScpO1xudmFyIGVuaGFuY2VFcnJvciA9IHJlcXVpcmUoJy4uL2NvcmUvZW5oYW5jZUVycm9yJyk7XG52YXIgdHJhbnNpdGlvbmFsRGVmYXVsdHMgPSByZXF1aXJlKCcuL3RyYW5zaXRpb25hbCcpO1xuXG52YXIgREVGQVVMVF9DT05URU5UX1RZUEUgPSB7XG4gICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJ1xufTtcblxuZnVuY3Rpb24gc2V0Q29udGVudFR5cGVJZlVuc2V0KGhlYWRlcnMsIHZhbHVlKSB7XG4gIGlmICghdXRpbHMuaXNVbmRlZmluZWQoaGVhZGVycykgJiYgdXRpbHMuaXNVbmRlZmluZWQoaGVhZGVyc1snQ29udGVudC1UeXBlJ10pKSB7XG4gICAgaGVhZGVyc1snQ29udGVudC1UeXBlJ10gPSB2YWx1ZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBnZXREZWZhdWx0QWRhcHRlcigpIHtcbiAgdmFyIGFkYXB0ZXI7XG4gIGlmICh0eXBlb2YgWE1MSHR0cFJlcXVlc3QgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgLy8gRm9yIGJyb3dzZXJzIHVzZSBYSFIgYWRhcHRlclxuICAgIGFkYXB0ZXIgPSByZXF1aXJlKCcuLi9hZGFwdGVycy94aHInKTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcgJiYgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHByb2Nlc3MpID09PSAnW29iamVjdCBwcm9jZXNzXScpIHtcbiAgICAvLyBGb3Igbm9kZSB1c2UgSFRUUCBhZGFwdGVyXG4gICAgYWRhcHRlciA9IHJlcXVpcmUoJy4uL2FkYXB0ZXJzL2h0dHAnKTtcbiAgfVxuICByZXR1cm4gYWRhcHRlcjtcbn1cblxuZnVuY3Rpb24gc3RyaW5naWZ5U2FmZWx5KHJhd1ZhbHVlLCBwYXJzZXIsIGVuY29kZXIpIHtcbiAgaWYgKHV0aWxzLmlzU3RyaW5nKHJhd1ZhbHVlKSkge1xuICAgIHRyeSB7XG4gICAgICAocGFyc2VyIHx8IEpTT04ucGFyc2UpKHJhd1ZhbHVlKTtcbiAgICAgIHJldHVybiB1dGlscy50cmltKHJhd1ZhbHVlKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBpZiAoZS5uYW1lICE9PSAnU3ludGF4RXJyb3InKSB7XG4gICAgICAgIHRocm93IGU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIChlbmNvZGVyIHx8IEpTT04uc3RyaW5naWZ5KShyYXdWYWx1ZSk7XG59XG5cbnZhciBkZWZhdWx0cyA9IHtcblxuICB0cmFuc2l0aW9uYWw6IHRyYW5zaXRpb25hbERlZmF1bHRzLFxuXG4gIGFkYXB0ZXI6IGdldERlZmF1bHRBZGFwdGVyKCksXG5cbiAgdHJhbnNmb3JtUmVxdWVzdDogW2Z1bmN0aW9uIHRyYW5zZm9ybVJlcXVlc3QoZGF0YSwgaGVhZGVycykge1xuICAgIG5vcm1hbGl6ZUhlYWRlck5hbWUoaGVhZGVycywgJ0FjY2VwdCcpO1xuICAgIG5vcm1hbGl6ZUhlYWRlck5hbWUoaGVhZGVycywgJ0NvbnRlbnQtVHlwZScpO1xuXG4gICAgaWYgKHV0aWxzLmlzRm9ybURhdGEoZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzQXJyYXlCdWZmZXIoZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzQnVmZmVyKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc1N0cmVhbShkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNGaWxlKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc0Jsb2IoZGF0YSlcbiAgICApIHtcbiAgICAgIHJldHVybiBkYXRhO1xuICAgIH1cbiAgICBpZiAodXRpbHMuaXNBcnJheUJ1ZmZlclZpZXcoZGF0YSkpIHtcbiAgICAgIHJldHVybiBkYXRhLmJ1ZmZlcjtcbiAgICB9XG4gICAgaWYgKHV0aWxzLmlzVVJMU2VhcmNoUGFyYW1zKGRhdGEpKSB7XG4gICAgICBzZXRDb250ZW50VHlwZUlmVW5zZXQoaGVhZGVycywgJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDtjaGFyc2V0PXV0Zi04Jyk7XG4gICAgICByZXR1cm4gZGF0YS50b1N0cmluZygpO1xuICAgIH1cbiAgICBpZiAodXRpbHMuaXNPYmplY3QoZGF0YSkgfHwgKGhlYWRlcnMgJiYgaGVhZGVyc1snQ29udGVudC1UeXBlJ10gPT09ICdhcHBsaWNhdGlvbi9qc29uJykpIHtcbiAgICAgIHNldENvbnRlbnRUeXBlSWZVbnNldChoZWFkZXJzLCAnYXBwbGljYXRpb24vanNvbicpO1xuICAgICAgcmV0dXJuIHN0cmluZ2lmeVNhZmVseShkYXRhKTtcbiAgICB9XG4gICAgcmV0dXJuIGRhdGE7XG4gIH1dLFxuXG4gIHRyYW5zZm9ybVJlc3BvbnNlOiBbZnVuY3Rpb24gdHJhbnNmb3JtUmVzcG9uc2UoZGF0YSkge1xuICAgIHZhciB0cmFuc2l0aW9uYWwgPSB0aGlzLnRyYW5zaXRpb25hbCB8fCBkZWZhdWx0cy50cmFuc2l0aW9uYWw7XG4gICAgdmFyIHNpbGVudEpTT05QYXJzaW5nID0gdHJhbnNpdGlvbmFsICYmIHRyYW5zaXRpb25hbC5zaWxlbnRKU09OUGFyc2luZztcbiAgICB2YXIgZm9yY2VkSlNPTlBhcnNpbmcgPSB0cmFuc2l0aW9uYWwgJiYgdHJhbnNpdGlvbmFsLmZvcmNlZEpTT05QYXJzaW5nO1xuICAgIHZhciBzdHJpY3RKU09OUGFyc2luZyA9ICFzaWxlbnRKU09OUGFyc2luZyAmJiB0aGlzLnJlc3BvbnNlVHlwZSA9PT0gJ2pzb24nO1xuXG4gICAgaWYgKHN0cmljdEpTT05QYXJzaW5nIHx8IChmb3JjZWRKU09OUGFyc2luZyAmJiB1dGlscy5pc1N0cmluZyhkYXRhKSAmJiBkYXRhLmxlbmd0aCkpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHJldHVybiBKU09OLnBhcnNlKGRhdGEpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBpZiAoc3RyaWN0SlNPTlBhcnNpbmcpIHtcbiAgICAgICAgICBpZiAoZS5uYW1lID09PSAnU3ludGF4RXJyb3InKSB7XG4gICAgICAgICAgICB0aHJvdyBlbmhhbmNlRXJyb3IoZSwgdGhpcywgJ0VfSlNPTl9QQVJTRScpO1xuICAgICAgICAgIH1cbiAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGRhdGE7XG4gIH1dLFxuXG4gIC8qKlxuICAgKiBBIHRpbWVvdXQgaW4gbWlsbGlzZWNvbmRzIHRvIGFib3J0IGEgcmVxdWVzdC4gSWYgc2V0IHRvIDAgKGRlZmF1bHQpIGFcbiAgICogdGltZW91dCBpcyBub3QgY3JlYXRlZC5cbiAgICovXG4gIHRpbWVvdXQ6IDAsXG5cbiAgeHNyZkNvb2tpZU5hbWU6ICdYU1JGLVRPS0VOJyxcbiAgeHNyZkhlYWRlck5hbWU6ICdYLVhTUkYtVE9LRU4nLFxuXG4gIG1heENvbnRlbnRMZW5ndGg6IC0xLFxuICBtYXhCb2R5TGVuZ3RoOiAtMSxcblxuICB2YWxpZGF0ZVN0YXR1czogZnVuY3Rpb24gdmFsaWRhdGVTdGF0dXMoc3RhdHVzKSB7XG4gICAgcmV0dXJuIHN0YXR1cyA+PSAyMDAgJiYgc3RhdHVzIDwgMzAwO1xuICB9LFxuXG4gIGhlYWRlcnM6IHtcbiAgICBjb21tb246IHtcbiAgICAgICdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbiwgdGV4dC9wbGFpbiwgKi8qJ1xuICAgIH1cbiAgfVxufTtcblxudXRpbHMuZm9yRWFjaChbJ2RlbGV0ZScsICdnZXQnLCAnaGVhZCddLCBmdW5jdGlvbiBmb3JFYWNoTWV0aG9kTm9EYXRhKG1ldGhvZCkge1xuICBkZWZhdWx0cy5oZWFkZXJzW21ldGhvZF0gPSB7fTtcbn0pO1xuXG51dGlscy5mb3JFYWNoKFsncG9zdCcsICdwdXQnLCAncGF0Y2gnXSwgZnVuY3Rpb24gZm9yRWFjaE1ldGhvZFdpdGhEYXRhKG1ldGhvZCkge1xuICBkZWZhdWx0cy5oZWFkZXJzW21ldGhvZF0gPSB1dGlscy5tZXJnZShERUZBVUxUX0NPTlRFTlRfVFlQRSk7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBkZWZhdWx0cztcbiIsIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHNpbGVudEpTT05QYXJzaW5nOiB0cnVlLFxuICBmb3JjZWRKU09OUGFyc2luZzogdHJ1ZSxcbiAgY2xhcmlmeVRpbWVvdXRFcnJvcjogZmFsc2Vcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgXCJ2ZXJzaW9uXCI6IFwiMC4yNi4xXCJcbn07IiwiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJpbmQoZm4sIHRoaXNBcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHdyYXAoKSB7XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmdzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBhcmdzW2ldID0gYXJndW1lbnRzW2ldO1xuICAgIH1cbiAgICByZXR1cm4gZm4uYXBwbHkodGhpc0FyZywgYXJncyk7XG4gIH07XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbmZ1bmN0aW9uIGVuY29kZSh2YWwpIHtcbiAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudCh2YWwpLlxuICAgIHJlcGxhY2UoLyUzQS9naSwgJzonKS5cbiAgICByZXBsYWNlKC8lMjQvZywgJyQnKS5cbiAgICByZXBsYWNlKC8lMkMvZ2ksICcsJykuXG4gICAgcmVwbGFjZSgvJTIwL2csICcrJykuXG4gICAgcmVwbGFjZSgvJTVCL2dpLCAnWycpLlxuICAgIHJlcGxhY2UoLyU1RC9naSwgJ10nKTtcbn1cblxuLyoqXG4gKiBCdWlsZCBhIFVSTCBieSBhcHBlbmRpbmcgcGFyYW1zIHRvIHRoZSBlbmRcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsIFRoZSBiYXNlIG9mIHRoZSB1cmwgKGUuZy4sIGh0dHA6Ly93d3cuZ29vZ2xlLmNvbSlcbiAqIEBwYXJhbSB7b2JqZWN0fSBbcGFyYW1zXSBUaGUgcGFyYW1zIHRvIGJlIGFwcGVuZGVkXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgZm9ybWF0dGVkIHVybFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJ1aWxkVVJMKHVybCwgcGFyYW1zLCBwYXJhbXNTZXJpYWxpemVyKSB7XG4gIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICBpZiAoIXBhcmFtcykge1xuICAgIHJldHVybiB1cmw7XG4gIH1cblxuICB2YXIgc2VyaWFsaXplZFBhcmFtcztcbiAgaWYgKHBhcmFtc1NlcmlhbGl6ZXIpIHtcbiAgICBzZXJpYWxpemVkUGFyYW1zID0gcGFyYW1zU2VyaWFsaXplcihwYXJhbXMpO1xuICB9IGVsc2UgaWYgKHV0aWxzLmlzVVJMU2VhcmNoUGFyYW1zKHBhcmFtcykpIHtcbiAgICBzZXJpYWxpemVkUGFyYW1zID0gcGFyYW1zLnRvU3RyaW5nKCk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHBhcnRzID0gW107XG5cbiAgICB1dGlscy5mb3JFYWNoKHBhcmFtcywgZnVuY3Rpb24gc2VyaWFsaXplKHZhbCwga2V5KSB7XG4gICAgICBpZiAodmFsID09PSBudWxsIHx8IHR5cGVvZiB2YWwgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKHV0aWxzLmlzQXJyYXkodmFsKSkge1xuICAgICAgICBrZXkgPSBrZXkgKyAnW10nO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFsID0gW3ZhbF07XG4gICAgICB9XG5cbiAgICAgIHV0aWxzLmZvckVhY2godmFsLCBmdW5jdGlvbiBwYXJzZVZhbHVlKHYpIHtcbiAgICAgICAgaWYgKHV0aWxzLmlzRGF0ZSh2KSkge1xuICAgICAgICAgIHYgPSB2LnRvSVNPU3RyaW5nKCk7XG4gICAgICAgIH0gZWxzZSBpZiAodXRpbHMuaXNPYmplY3QodikpIHtcbiAgICAgICAgICB2ID0gSlNPTi5zdHJpbmdpZnkodik7XG4gICAgICAgIH1cbiAgICAgICAgcGFydHMucHVzaChlbmNvZGUoa2V5KSArICc9JyArIGVuY29kZSh2KSk7XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIHNlcmlhbGl6ZWRQYXJhbXMgPSBwYXJ0cy5qb2luKCcmJyk7XG4gIH1cblxuICBpZiAoc2VyaWFsaXplZFBhcmFtcykge1xuICAgIHZhciBoYXNobWFya0luZGV4ID0gdXJsLmluZGV4T2YoJyMnKTtcbiAgICBpZiAoaGFzaG1hcmtJbmRleCAhPT0gLTEpIHtcbiAgICAgIHVybCA9IHVybC5zbGljZSgwLCBoYXNobWFya0luZGV4KTtcbiAgICB9XG5cbiAgICB1cmwgKz0gKHVybC5pbmRleE9mKCc/JykgPT09IC0xID8gJz8nIDogJyYnKSArIHNlcmlhbGl6ZWRQYXJhbXM7XG4gIH1cblxuICByZXR1cm4gdXJsO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IFVSTCBieSBjb21iaW5pbmcgdGhlIHNwZWNpZmllZCBVUkxzXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGJhc2VVUkwgVGhlIGJhc2UgVVJMXG4gKiBAcGFyYW0ge3N0cmluZ30gcmVsYXRpdmVVUkwgVGhlIHJlbGF0aXZlIFVSTFxuICogQHJldHVybnMge3N0cmluZ30gVGhlIGNvbWJpbmVkIFVSTFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGNvbWJpbmVVUkxzKGJhc2VVUkwsIHJlbGF0aXZlVVJMKSB7XG4gIHJldHVybiByZWxhdGl2ZVVSTFxuICAgID8gYmFzZVVSTC5yZXBsYWNlKC9cXC8rJC8sICcnKSArICcvJyArIHJlbGF0aXZlVVJMLnJlcGxhY2UoL15cXC8rLywgJycpXG4gICAgOiBiYXNlVVJMO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChcbiAgdXRpbHMuaXNTdGFuZGFyZEJyb3dzZXJFbnYoKSA/XG5cbiAgLy8gU3RhbmRhcmQgYnJvd3NlciBlbnZzIHN1cHBvcnQgZG9jdW1lbnQuY29va2llXG4gICAgKGZ1bmN0aW9uIHN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHdyaXRlOiBmdW5jdGlvbiB3cml0ZShuYW1lLCB2YWx1ZSwgZXhwaXJlcywgcGF0aCwgZG9tYWluLCBzZWN1cmUpIHtcbiAgICAgICAgICB2YXIgY29va2llID0gW107XG4gICAgICAgICAgY29va2llLnB1c2gobmFtZSArICc9JyArIGVuY29kZVVSSUNvbXBvbmVudCh2YWx1ZSkpO1xuXG4gICAgICAgICAgaWYgKHV0aWxzLmlzTnVtYmVyKGV4cGlyZXMpKSB7XG4gICAgICAgICAgICBjb29raWUucHVzaCgnZXhwaXJlcz0nICsgbmV3IERhdGUoZXhwaXJlcykudG9HTVRTdHJpbmcoKSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHV0aWxzLmlzU3RyaW5nKHBhdGgpKSB7XG4gICAgICAgICAgICBjb29raWUucHVzaCgncGF0aD0nICsgcGF0aCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHV0aWxzLmlzU3RyaW5nKGRvbWFpbikpIHtcbiAgICAgICAgICAgIGNvb2tpZS5wdXNoKCdkb21haW49JyArIGRvbWFpbik7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHNlY3VyZSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgY29va2llLnB1c2goJ3NlY3VyZScpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGRvY3VtZW50LmNvb2tpZSA9IGNvb2tpZS5qb2luKCc7ICcpO1xuICAgICAgICB9LFxuXG4gICAgICAgIHJlYWQ6IGZ1bmN0aW9uIHJlYWQobmFtZSkge1xuICAgICAgICAgIHZhciBtYXRjaCA9IGRvY3VtZW50LmNvb2tpZS5tYXRjaChuZXcgUmVnRXhwKCcoXnw7XFxcXHMqKSgnICsgbmFtZSArICcpPShbXjtdKiknKSk7XG4gICAgICAgICAgcmV0dXJuIChtYXRjaCA/IGRlY29kZVVSSUNvbXBvbmVudChtYXRjaFszXSkgOiBudWxsKTtcbiAgICAgICAgfSxcblxuICAgICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZShuYW1lKSB7XG4gICAgICAgICAgdGhpcy53cml0ZShuYW1lLCAnJywgRGF0ZS5ub3coKSAtIDg2NDAwMDAwKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9KSgpIDpcblxuICAvLyBOb24gc3RhbmRhcmQgYnJvd3NlciBlbnYgKHdlYiB3b3JrZXJzLCByZWFjdC1uYXRpdmUpIGxhY2sgbmVlZGVkIHN1cHBvcnQuXG4gICAgKGZ1bmN0aW9uIG5vblN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHdyaXRlOiBmdW5jdGlvbiB3cml0ZSgpIHt9LFxuICAgICAgICByZWFkOiBmdW5jdGlvbiByZWFkKCkgeyByZXR1cm4gbnVsbDsgfSxcbiAgICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgICAgfTtcbiAgICB9KSgpXG4pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIERldGVybWluZXMgd2hldGhlciB0aGUgc3BlY2lmaWVkIFVSTCBpcyBhYnNvbHV0ZVxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgVGhlIFVSTCB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgc3BlY2lmaWVkIFVSTCBpcyBhYnNvbHV0ZSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNBYnNvbHV0ZVVSTCh1cmwpIHtcbiAgLy8gQSBVUkwgaXMgY29uc2lkZXJlZCBhYnNvbHV0ZSBpZiBpdCBiZWdpbnMgd2l0aCBcIjxzY2hlbWU+Oi8vXCIgb3IgXCIvL1wiIChwcm90b2NvbC1yZWxhdGl2ZSBVUkwpLlxuICAvLyBSRkMgMzk4NiBkZWZpbmVzIHNjaGVtZSBuYW1lIGFzIGEgc2VxdWVuY2Ugb2YgY2hhcmFjdGVycyBiZWdpbm5pbmcgd2l0aCBhIGxldHRlciBhbmQgZm9sbG93ZWRcbiAgLy8gYnkgYW55IGNvbWJpbmF0aW9uIG9mIGxldHRlcnMsIGRpZ2l0cywgcGx1cywgcGVyaW9kLCBvciBoeXBoZW4uXG4gIHJldHVybiAvXihbYS16XVthLXpcXGQrXFwtLl0qOik/XFwvXFwvL2kudGVzdCh1cmwpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG4vKipcbiAqIERldGVybWluZXMgd2hldGhlciB0aGUgcGF5bG9hZCBpcyBhbiBlcnJvciB0aHJvd24gYnkgQXhpb3NcbiAqXG4gKiBAcGFyYW0geyp9IHBheWxvYWQgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHRoZSBwYXlsb2FkIGlzIGFuIGVycm9yIHRocm93biBieSBBeGlvcywgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNBeGlvc0Vycm9yKHBheWxvYWQpIHtcbiAgcmV0dXJuIHV0aWxzLmlzT2JqZWN0KHBheWxvYWQpICYmIChwYXlsb2FkLmlzQXhpb3NFcnJvciA9PT0gdHJ1ZSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gKFxuICB1dGlscy5pc1N0YW5kYXJkQnJvd3NlckVudigpID9cblxuICAvLyBTdGFuZGFyZCBicm93c2VyIGVudnMgaGF2ZSBmdWxsIHN1cHBvcnQgb2YgdGhlIEFQSXMgbmVlZGVkIHRvIHRlc3RcbiAgLy8gd2hldGhlciB0aGUgcmVxdWVzdCBVUkwgaXMgb2YgdGhlIHNhbWUgb3JpZ2luIGFzIGN1cnJlbnQgbG9jYXRpb24uXG4gICAgKGZ1bmN0aW9uIHN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHZhciBtc2llID0gLyhtc2llfHRyaWRlbnQpL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTtcbiAgICAgIHZhciB1cmxQYXJzaW5nTm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcbiAgICAgIHZhciBvcmlnaW5VUkw7XG5cbiAgICAgIC8qKlxuICAgICogUGFyc2UgYSBVUkwgdG8gZGlzY292ZXIgaXQncyBjb21wb25lbnRzXG4gICAgKlxuICAgICogQHBhcmFtIHtTdHJpbmd9IHVybCBUaGUgVVJMIHRvIGJlIHBhcnNlZFxuICAgICogQHJldHVybnMge09iamVjdH1cbiAgICAqL1xuICAgICAgZnVuY3Rpb24gcmVzb2x2ZVVSTCh1cmwpIHtcbiAgICAgICAgdmFyIGhyZWYgPSB1cmw7XG5cbiAgICAgICAgaWYgKG1zaWUpIHtcbiAgICAgICAgLy8gSUUgbmVlZHMgYXR0cmlidXRlIHNldCB0d2ljZSB0byBub3JtYWxpemUgcHJvcGVydGllc1xuICAgICAgICAgIHVybFBhcnNpbmdOb2RlLnNldEF0dHJpYnV0ZSgnaHJlZicsIGhyZWYpO1xuICAgICAgICAgIGhyZWYgPSB1cmxQYXJzaW5nTm9kZS5ocmVmO1xuICAgICAgICB9XG5cbiAgICAgICAgdXJsUGFyc2luZ05vZGUuc2V0QXR0cmlidXRlKCdocmVmJywgaHJlZik7XG5cbiAgICAgICAgLy8gdXJsUGFyc2luZ05vZGUgcHJvdmlkZXMgdGhlIFVybFV0aWxzIGludGVyZmFjZSAtIGh0dHA6Ly91cmwuc3BlYy53aGF0d2cub3JnLyN1cmx1dGlsc1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGhyZWY6IHVybFBhcnNpbmdOb2RlLmhyZWYsXG4gICAgICAgICAgcHJvdG9jb2w6IHVybFBhcnNpbmdOb2RlLnByb3RvY29sID8gdXJsUGFyc2luZ05vZGUucHJvdG9jb2wucmVwbGFjZSgvOiQvLCAnJykgOiAnJyxcbiAgICAgICAgICBob3N0OiB1cmxQYXJzaW5nTm9kZS5ob3N0LFxuICAgICAgICAgIHNlYXJjaDogdXJsUGFyc2luZ05vZGUuc2VhcmNoID8gdXJsUGFyc2luZ05vZGUuc2VhcmNoLnJlcGxhY2UoL15cXD8vLCAnJykgOiAnJyxcbiAgICAgICAgICBoYXNoOiB1cmxQYXJzaW5nTm9kZS5oYXNoID8gdXJsUGFyc2luZ05vZGUuaGFzaC5yZXBsYWNlKC9eIy8sICcnKSA6ICcnLFxuICAgICAgICAgIGhvc3RuYW1lOiB1cmxQYXJzaW5nTm9kZS5ob3N0bmFtZSxcbiAgICAgICAgICBwb3J0OiB1cmxQYXJzaW5nTm9kZS5wb3J0LFxuICAgICAgICAgIHBhdGhuYW1lOiAodXJsUGFyc2luZ05vZGUucGF0aG5hbWUuY2hhckF0KDApID09PSAnLycpID9cbiAgICAgICAgICAgIHVybFBhcnNpbmdOb2RlLnBhdGhuYW1lIDpcbiAgICAgICAgICAgICcvJyArIHVybFBhcnNpbmdOb2RlLnBhdGhuYW1lXG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIG9yaWdpblVSTCA9IHJlc29sdmVVUkwod2luZG93LmxvY2F0aW9uLmhyZWYpO1xuXG4gICAgICAvKipcbiAgICAqIERldGVybWluZSBpZiBhIFVSTCBzaGFyZXMgdGhlIHNhbWUgb3JpZ2luIGFzIHRoZSBjdXJyZW50IGxvY2F0aW9uXG4gICAgKlxuICAgICogQHBhcmFtIHtTdHJpbmd9IHJlcXVlc3RVUkwgVGhlIFVSTCB0byB0ZXN0XG4gICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiBVUkwgc2hhcmVzIHRoZSBzYW1lIG9yaWdpbiwgb3RoZXJ3aXNlIGZhbHNlXG4gICAgKi9cbiAgICAgIHJldHVybiBmdW5jdGlvbiBpc1VSTFNhbWVPcmlnaW4ocmVxdWVzdFVSTCkge1xuICAgICAgICB2YXIgcGFyc2VkID0gKHV0aWxzLmlzU3RyaW5nKHJlcXVlc3RVUkwpKSA/IHJlc29sdmVVUkwocmVxdWVzdFVSTCkgOiByZXF1ZXN0VVJMO1xuICAgICAgICByZXR1cm4gKHBhcnNlZC5wcm90b2NvbCA9PT0gb3JpZ2luVVJMLnByb3RvY29sICYmXG4gICAgICAgICAgICBwYXJzZWQuaG9zdCA9PT0gb3JpZ2luVVJMLmhvc3QpO1xuICAgICAgfTtcbiAgICB9KSgpIDpcblxuICAvLyBOb24gc3RhbmRhcmQgYnJvd3NlciBlbnZzICh3ZWIgd29ya2VycywgcmVhY3QtbmF0aXZlKSBsYWNrIG5lZWRlZCBzdXBwb3J0LlxuICAgIChmdW5jdGlvbiBub25TdGFuZGFyZEJyb3dzZXJFbnYoKSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gaXNVUkxTYW1lT3JpZ2luKCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH07XG4gICAgfSkoKVxuKTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBub3JtYWxpemVIZWFkZXJOYW1lKGhlYWRlcnMsIG5vcm1hbGl6ZWROYW1lKSB7XG4gIHV0aWxzLmZvckVhY2goaGVhZGVycywgZnVuY3Rpb24gcHJvY2Vzc0hlYWRlcih2YWx1ZSwgbmFtZSkge1xuICAgIGlmIChuYW1lICE9PSBub3JtYWxpemVkTmFtZSAmJiBuYW1lLnRvVXBwZXJDYXNlKCkgPT09IG5vcm1hbGl6ZWROYW1lLnRvVXBwZXJDYXNlKCkpIHtcbiAgICAgIGhlYWRlcnNbbm9ybWFsaXplZE5hbWVdID0gdmFsdWU7XG4gICAgICBkZWxldGUgaGVhZGVyc1tuYW1lXTtcbiAgICB9XG4gIH0pO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG4vLyBIZWFkZXJzIHdob3NlIGR1cGxpY2F0ZXMgYXJlIGlnbm9yZWQgYnkgbm9kZVxuLy8gYy5mLiBodHRwczovL25vZGVqcy5vcmcvYXBpL2h0dHAuaHRtbCNodHRwX21lc3NhZ2VfaGVhZGVyc1xudmFyIGlnbm9yZUR1cGxpY2F0ZU9mID0gW1xuICAnYWdlJywgJ2F1dGhvcml6YXRpb24nLCAnY29udGVudC1sZW5ndGgnLCAnY29udGVudC10eXBlJywgJ2V0YWcnLFxuICAnZXhwaXJlcycsICdmcm9tJywgJ2hvc3QnLCAnaWYtbW9kaWZpZWQtc2luY2UnLCAnaWYtdW5tb2RpZmllZC1zaW5jZScsXG4gICdsYXN0LW1vZGlmaWVkJywgJ2xvY2F0aW9uJywgJ21heC1mb3J3YXJkcycsICdwcm94eS1hdXRob3JpemF0aW9uJyxcbiAgJ3JlZmVyZXInLCAncmV0cnktYWZ0ZXInLCAndXNlci1hZ2VudCdcbl07XG5cbi8qKlxuICogUGFyc2UgaGVhZGVycyBpbnRvIGFuIG9iamVjdFxuICpcbiAqIGBgYFxuICogRGF0ZTogV2VkLCAyNyBBdWcgMjAxNCAwODo1ODo0OSBHTVRcbiAqIENvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvblxuICogQ29ubmVjdGlvbjoga2VlcC1hbGl2ZVxuICogVHJhbnNmZXItRW5jb2Rpbmc6IGNodW5rZWRcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBoZWFkZXJzIEhlYWRlcnMgbmVlZGluZyB0byBiZSBwYXJzZWRcbiAqIEByZXR1cm5zIHtPYmplY3R9IEhlYWRlcnMgcGFyc2VkIGludG8gYW4gb2JqZWN0XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcGFyc2VIZWFkZXJzKGhlYWRlcnMpIHtcbiAgdmFyIHBhcnNlZCA9IHt9O1xuICB2YXIga2V5O1xuICB2YXIgdmFsO1xuICB2YXIgaTtcblxuICBpZiAoIWhlYWRlcnMpIHsgcmV0dXJuIHBhcnNlZDsgfVxuXG4gIHV0aWxzLmZvckVhY2goaGVhZGVycy5zcGxpdCgnXFxuJyksIGZ1bmN0aW9uIHBhcnNlcihsaW5lKSB7XG4gICAgaSA9IGxpbmUuaW5kZXhPZignOicpO1xuICAgIGtleSA9IHV0aWxzLnRyaW0obGluZS5zdWJzdHIoMCwgaSkpLnRvTG93ZXJDYXNlKCk7XG4gICAgdmFsID0gdXRpbHMudHJpbShsaW5lLnN1YnN0cihpICsgMSkpO1xuXG4gICAgaWYgKGtleSkge1xuICAgICAgaWYgKHBhcnNlZFtrZXldICYmIGlnbm9yZUR1cGxpY2F0ZU9mLmluZGV4T2Yoa2V5KSA+PSAwKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmIChrZXkgPT09ICdzZXQtY29va2llJykge1xuICAgICAgICBwYXJzZWRba2V5XSA9IChwYXJzZWRba2V5XSA/IHBhcnNlZFtrZXldIDogW10pLmNvbmNhdChbdmFsXSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwYXJzZWRba2V5XSA9IHBhcnNlZFtrZXldID8gcGFyc2VkW2tleV0gKyAnLCAnICsgdmFsIDogdmFsO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIHBhcnNlZDtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogU3ludGFjdGljIHN1Z2FyIGZvciBpbnZva2luZyBhIGZ1bmN0aW9uIGFuZCBleHBhbmRpbmcgYW4gYXJyYXkgZm9yIGFyZ3VtZW50cy5cbiAqXG4gKiBDb21tb24gdXNlIGNhc2Ugd291bGQgYmUgdG8gdXNlIGBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHlgLlxuICpcbiAqICBgYGBqc1xuICogIGZ1bmN0aW9uIGYoeCwgeSwgeikge31cbiAqICB2YXIgYXJncyA9IFsxLCAyLCAzXTtcbiAqICBmLmFwcGx5KG51bGwsIGFyZ3MpO1xuICogIGBgYFxuICpcbiAqIFdpdGggYHNwcmVhZGAgdGhpcyBleGFtcGxlIGNhbiBiZSByZS13cml0dGVuLlxuICpcbiAqICBgYGBqc1xuICogIHNwcmVhZChmdW5jdGlvbih4LCB5LCB6KSB7fSkoWzEsIDIsIDNdKTtcbiAqICBgYGBcbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICogQHJldHVybnMge0Z1bmN0aW9ufVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHNwcmVhZChjYWxsYmFjaykge1xuICByZXR1cm4gZnVuY3Rpb24gd3JhcChhcnIpIHtcbiAgICByZXR1cm4gY2FsbGJhY2suYXBwbHkobnVsbCwgYXJyKTtcbiAgfTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBWRVJTSU9OID0gcmVxdWlyZSgnLi4vZW52L2RhdGEnKS52ZXJzaW9uO1xuXG52YXIgdmFsaWRhdG9ycyA9IHt9O1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuWydvYmplY3QnLCAnYm9vbGVhbicsICdudW1iZXInLCAnZnVuY3Rpb24nLCAnc3RyaW5nJywgJ3N5bWJvbCddLmZvckVhY2goZnVuY3Rpb24odHlwZSwgaSkge1xuICB2YWxpZGF0b3JzW3R5cGVdID0gZnVuY3Rpb24gdmFsaWRhdG9yKHRoaW5nKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB0aGluZyA9PT0gdHlwZSB8fCAnYScgKyAoaSA8IDEgPyAnbiAnIDogJyAnKSArIHR5cGU7XG4gIH07XG59KTtcblxudmFyIGRlcHJlY2F0ZWRXYXJuaW5ncyA9IHt9O1xuXG4vKipcbiAqIFRyYW5zaXRpb25hbCBvcHRpb24gdmFsaWRhdG9yXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufGJvb2xlYW4/fSB2YWxpZGF0b3IgLSBzZXQgdG8gZmFsc2UgaWYgdGhlIHRyYW5zaXRpb25hbCBvcHRpb24gaGFzIGJlZW4gcmVtb3ZlZFxuICogQHBhcmFtIHtzdHJpbmc/fSB2ZXJzaW9uIC0gZGVwcmVjYXRlZCB2ZXJzaW9uIC8gcmVtb3ZlZCBzaW5jZSB2ZXJzaW9uXG4gKiBAcGFyYW0ge3N0cmluZz99IG1lc3NhZ2UgLSBzb21lIG1lc3NhZ2Ugd2l0aCBhZGRpdGlvbmFsIGluZm9cbiAqIEByZXR1cm5zIHtmdW5jdGlvbn1cbiAqL1xudmFsaWRhdG9ycy50cmFuc2l0aW9uYWwgPSBmdW5jdGlvbiB0cmFuc2l0aW9uYWwodmFsaWRhdG9yLCB2ZXJzaW9uLCBtZXNzYWdlKSB7XG4gIGZ1bmN0aW9uIGZvcm1hdE1lc3NhZ2Uob3B0LCBkZXNjKSB7XG4gICAgcmV0dXJuICdbQXhpb3MgdicgKyBWRVJTSU9OICsgJ10gVHJhbnNpdGlvbmFsIG9wdGlvbiBcXCcnICsgb3B0ICsgJ1xcJycgKyBkZXNjICsgKG1lc3NhZ2UgPyAnLiAnICsgbWVzc2FnZSA6ICcnKTtcbiAgfVxuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG4gIHJldHVybiBmdW5jdGlvbih2YWx1ZSwgb3B0LCBvcHRzKSB7XG4gICAgaWYgKHZhbGlkYXRvciA9PT0gZmFsc2UpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihmb3JtYXRNZXNzYWdlKG9wdCwgJyBoYXMgYmVlbiByZW1vdmVkJyArICh2ZXJzaW9uID8gJyBpbiAnICsgdmVyc2lvbiA6ICcnKSkpO1xuICAgIH1cblxuICAgIGlmICh2ZXJzaW9uICYmICFkZXByZWNhdGVkV2FybmluZ3Nbb3B0XSkge1xuICAgICAgZGVwcmVjYXRlZFdhcm5pbmdzW29wdF0gPSB0cnVlO1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgIGNvbnNvbGUud2FybihcbiAgICAgICAgZm9ybWF0TWVzc2FnZShcbiAgICAgICAgICBvcHQsXG4gICAgICAgICAgJyBoYXMgYmVlbiBkZXByZWNhdGVkIHNpbmNlIHYnICsgdmVyc2lvbiArICcgYW5kIHdpbGwgYmUgcmVtb3ZlZCBpbiB0aGUgbmVhciBmdXR1cmUnXG4gICAgICAgIClcbiAgICAgICk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHZhbGlkYXRvciA/IHZhbGlkYXRvcih2YWx1ZSwgb3B0LCBvcHRzKSA6IHRydWU7XG4gIH07XG59O1xuXG4vKipcbiAqIEFzc2VydCBvYmplY3QncyBwcm9wZXJ0aWVzIHR5cGVcbiAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zXG4gKiBAcGFyYW0ge29iamVjdH0gc2NoZW1hXG4gKiBAcGFyYW0ge2Jvb2xlYW4/fSBhbGxvd1Vua25vd25cbiAqL1xuXG5mdW5jdGlvbiBhc3NlcnRPcHRpb25zKG9wdGlvbnMsIHNjaGVtYSwgYWxsb3dVbmtub3duKSB7XG4gIGlmICh0eXBlb2Ygb3B0aW9ucyAhPT0gJ29iamVjdCcpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdvcHRpb25zIG11c3QgYmUgYW4gb2JqZWN0Jyk7XG4gIH1cbiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvcHRpb25zKTtcbiAgdmFyIGkgPSBrZXlzLmxlbmd0aDtcbiAgd2hpbGUgKGktLSA+IDApIHtcbiAgICB2YXIgb3B0ID0ga2V5c1tpXTtcbiAgICB2YXIgdmFsaWRhdG9yID0gc2NoZW1hW29wdF07XG4gICAgaWYgKHZhbGlkYXRvcikge1xuICAgICAgdmFyIHZhbHVlID0gb3B0aW9uc1tvcHRdO1xuICAgICAgdmFyIHJlc3VsdCA9IHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsaWRhdG9yKHZhbHVlLCBvcHQsIG9wdGlvbnMpO1xuICAgICAgaWYgKHJlc3VsdCAhPT0gdHJ1ZSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdvcHRpb24gJyArIG9wdCArICcgbXVzdCBiZSAnICsgcmVzdWx0KTtcbiAgICAgIH1cbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICBpZiAoYWxsb3dVbmtub3duICE9PSB0cnVlKSB7XG4gICAgICB0aHJvdyBFcnJvcignVW5rbm93biBvcHRpb24gJyArIG9wdCk7XG4gICAgfVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBhc3NlcnRPcHRpb25zOiBhc3NlcnRPcHRpb25zLFxuICB2YWxpZGF0b3JzOiB2YWxpZGF0b3JzXG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgYmluZCA9IHJlcXVpcmUoJy4vaGVscGVycy9iaW5kJyk7XG5cbi8vIHV0aWxzIGlzIGEgbGlicmFyeSBvZiBnZW5lcmljIGhlbHBlciBmdW5jdGlvbnMgbm9uLXNwZWNpZmljIHRvIGF4aW9zXG5cbnZhciB0b1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYW4gQXJyYXlcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhbiBBcnJheSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzQXJyYXkodmFsKSB7XG4gIHJldHVybiBBcnJheS5pc0FycmF5KHZhbCk7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgdW5kZWZpbmVkXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdGhlIHZhbHVlIGlzIHVuZGVmaW5lZCwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzVW5kZWZpbmVkKHZhbCkge1xuICByZXR1cm4gdHlwZW9mIHZhbCA9PT0gJ3VuZGVmaW5lZCc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBCdWZmZXJcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIEJ1ZmZlciwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzQnVmZmVyKHZhbCkge1xuICByZXR1cm4gdmFsICE9PSBudWxsICYmICFpc1VuZGVmaW5lZCh2YWwpICYmIHZhbC5jb25zdHJ1Y3RvciAhPT0gbnVsbCAmJiAhaXNVbmRlZmluZWQodmFsLmNvbnN0cnVjdG9yKVxuICAgICYmIHR5cGVvZiB2YWwuY29uc3RydWN0b3IuaXNCdWZmZXIgPT09ICdmdW5jdGlvbicgJiYgdmFsLmNvbnN0cnVjdG9yLmlzQnVmZmVyKHZhbCk7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYW4gQXJyYXlCdWZmZXJcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhbiBBcnJheUJ1ZmZlciwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzQXJyYXlCdWZmZXIodmFsKSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKHZhbCkgPT09ICdbb2JqZWN0IEFycmF5QnVmZmVyXSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBGb3JtRGF0YVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGFuIEZvcm1EYXRhLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNGb3JtRGF0YSh2YWwpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgRm9ybURhdGFdJztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIHZpZXcgb24gYW4gQXJyYXlCdWZmZXJcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIHZpZXcgb24gYW4gQXJyYXlCdWZmZXIsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0FycmF5QnVmZmVyVmlldyh2YWwpIHtcbiAgdmFyIHJlc3VsdDtcbiAgaWYgKCh0eXBlb2YgQXJyYXlCdWZmZXIgIT09ICd1bmRlZmluZWQnKSAmJiAoQXJyYXlCdWZmZXIuaXNWaWV3KSkge1xuICAgIHJlc3VsdCA9IEFycmF5QnVmZmVyLmlzVmlldyh2YWwpO1xuICB9IGVsc2Uge1xuICAgIHJlc3VsdCA9ICh2YWwpICYmICh2YWwuYnVmZmVyKSAmJiAoaXNBcnJheUJ1ZmZlcih2YWwuYnVmZmVyKSk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIFN0cmluZ1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgU3RyaW5nLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNTdHJpbmcodmFsKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsID09PSAnc3RyaW5nJztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIE51bWJlclxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgTnVtYmVyLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNOdW1iZXIodmFsKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsID09PSAnbnVtYmVyJztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhbiBPYmplY3RcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhbiBPYmplY3QsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc09iamVjdCh2YWwpIHtcbiAgcmV0dXJuIHZhbCAhPT0gbnVsbCAmJiB0eXBlb2YgdmFsID09PSAnb2JqZWN0Jztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIHBsYWluIE9iamVjdFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm4ge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBwbGFpbiBPYmplY3QsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1BsYWluT2JqZWN0KHZhbCkge1xuICBpZiAodG9TdHJpbmcuY2FsbCh2YWwpICE9PSAnW29iamVjdCBPYmplY3RdJykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHZhciBwcm90b3R5cGUgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YodmFsKTtcbiAgcmV0dXJuIHByb3RvdHlwZSA9PT0gbnVsbCB8fCBwcm90b3R5cGUgPT09IE9iamVjdC5wcm90b3R5cGU7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBEYXRlXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBEYXRlLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNEYXRlKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBEYXRlXSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBGaWxlXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBGaWxlLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNGaWxlKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBGaWxlXSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBCbG9iXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBCbG9iLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNCbG9iKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBCbG9iXSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBGdW5jdGlvblxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgRnVuY3Rpb24sIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0Z1bmN0aW9uKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBGdW5jdGlvbl0nO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgU3RyZWFtXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBTdHJlYW0sIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1N0cmVhbSh2YWwpIHtcbiAgcmV0dXJuIGlzT2JqZWN0KHZhbCkgJiYgaXNGdW5jdGlvbih2YWwucGlwZSk7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBVUkxTZWFyY2hQYXJhbXMgb2JqZWN0XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBVUkxTZWFyY2hQYXJhbXMgb2JqZWN0LCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNVUkxTZWFyY2hQYXJhbXModmFsKSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKHZhbCkgPT09ICdbb2JqZWN0IFVSTFNlYXJjaFBhcmFtc10nO1xufVxuXG4vKipcbiAqIFRyaW0gZXhjZXNzIHdoaXRlc3BhY2Ugb2ZmIHRoZSBiZWdpbm5pbmcgYW5kIGVuZCBvZiBhIHN0cmluZ1xuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHIgVGhlIFN0cmluZyB0byB0cmltXG4gKiBAcmV0dXJucyB7U3RyaW5nfSBUaGUgU3RyaW5nIGZyZWVkIG9mIGV4Y2VzcyB3aGl0ZXNwYWNlXG4gKi9cbmZ1bmN0aW9uIHRyaW0oc3RyKSB7XG4gIHJldHVybiBzdHIudHJpbSA/IHN0ci50cmltKCkgOiBzdHIucmVwbGFjZSgvXlxccyt8XFxzKyQvZywgJycpO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiB3ZSdyZSBydW5uaW5nIGluIGEgc3RhbmRhcmQgYnJvd3NlciBlbnZpcm9ubWVudFxuICpcbiAqIFRoaXMgYWxsb3dzIGF4aW9zIHRvIHJ1biBpbiBhIHdlYiB3b3JrZXIsIGFuZCByZWFjdC1uYXRpdmUuXG4gKiBCb3RoIGVudmlyb25tZW50cyBzdXBwb3J0IFhNTEh0dHBSZXF1ZXN0LCBidXQgbm90IGZ1bGx5IHN0YW5kYXJkIGdsb2JhbHMuXG4gKlxuICogd2ViIHdvcmtlcnM6XG4gKiAgdHlwZW9mIHdpbmRvdyAtPiB1bmRlZmluZWRcbiAqICB0eXBlb2YgZG9jdW1lbnQgLT4gdW5kZWZpbmVkXG4gKlxuICogcmVhY3QtbmF0aXZlOlxuICogIG5hdmlnYXRvci5wcm9kdWN0IC0+ICdSZWFjdE5hdGl2ZSdcbiAqIG5hdGl2ZXNjcmlwdFxuICogIG5hdmlnYXRvci5wcm9kdWN0IC0+ICdOYXRpdmVTY3JpcHQnIG9yICdOUydcbiAqL1xuZnVuY3Rpb24gaXNTdGFuZGFyZEJyb3dzZXJFbnYoKSB7XG4gIGlmICh0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyAmJiAobmF2aWdhdG9yLnByb2R1Y3QgPT09ICdSZWFjdE5hdGl2ZScgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYXZpZ2F0b3IucHJvZHVjdCA9PT0gJ05hdGl2ZVNjcmlwdCcgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYXZpZ2F0b3IucHJvZHVjdCA9PT0gJ05TJykpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIChcbiAgICB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJlxuICAgIHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCdcbiAgKTtcbn1cblxuLyoqXG4gKiBJdGVyYXRlIG92ZXIgYW4gQXJyYXkgb3IgYW4gT2JqZWN0IGludm9raW5nIGEgZnVuY3Rpb24gZm9yIGVhY2ggaXRlbS5cbiAqXG4gKiBJZiBgb2JqYCBpcyBhbiBBcnJheSBjYWxsYmFjayB3aWxsIGJlIGNhbGxlZCBwYXNzaW5nXG4gKiB0aGUgdmFsdWUsIGluZGV4LCBhbmQgY29tcGxldGUgYXJyYXkgZm9yIGVhY2ggaXRlbS5cbiAqXG4gKiBJZiAnb2JqJyBpcyBhbiBPYmplY3QgY2FsbGJhY2sgd2lsbCBiZSBjYWxsZWQgcGFzc2luZ1xuICogdGhlIHZhbHVlLCBrZXksIGFuZCBjb21wbGV0ZSBvYmplY3QgZm9yIGVhY2ggcHJvcGVydHkuXG4gKlxuICogQHBhcmFtIHtPYmplY3R8QXJyYXl9IG9iaiBUaGUgb2JqZWN0IHRvIGl0ZXJhdGVcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuIFRoZSBjYWxsYmFjayB0byBpbnZva2UgZm9yIGVhY2ggaXRlbVxuICovXG5mdW5jdGlvbiBmb3JFYWNoKG9iaiwgZm4pIHtcbiAgLy8gRG9uJ3QgYm90aGVyIGlmIG5vIHZhbHVlIHByb3ZpZGVkXG4gIGlmIChvYmogPT09IG51bGwgfHwgdHlwZW9mIG9iaiA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBGb3JjZSBhbiBhcnJheSBpZiBub3QgYWxyZWFkeSBzb21ldGhpbmcgaXRlcmFibGVcbiAgaWYgKHR5cGVvZiBvYmogIT09ICdvYmplY3QnKSB7XG4gICAgLyplc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246MCovXG4gICAgb2JqID0gW29ial07XG4gIH1cblxuICBpZiAoaXNBcnJheShvYmopKSB7XG4gICAgLy8gSXRlcmF0ZSBvdmVyIGFycmF5IHZhbHVlc1xuICAgIGZvciAodmFyIGkgPSAwLCBsID0gb2JqLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgZm4uY2FsbChudWxsLCBvYmpbaV0sIGksIG9iaik7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIC8vIEl0ZXJhdGUgb3ZlciBvYmplY3Qga2V5c1xuICAgIGZvciAodmFyIGtleSBpbiBvYmopIHtcbiAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7XG4gICAgICAgIGZuLmNhbGwobnVsbCwgb2JqW2tleV0sIGtleSwgb2JqKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLyoqXG4gKiBBY2NlcHRzIHZhcmFyZ3MgZXhwZWN0aW5nIGVhY2ggYXJndW1lbnQgdG8gYmUgYW4gb2JqZWN0LCB0aGVuXG4gKiBpbW11dGFibHkgbWVyZ2VzIHRoZSBwcm9wZXJ0aWVzIG9mIGVhY2ggb2JqZWN0IGFuZCByZXR1cm5zIHJlc3VsdC5cbiAqXG4gKiBXaGVuIG11bHRpcGxlIG9iamVjdHMgY29udGFpbiB0aGUgc2FtZSBrZXkgdGhlIGxhdGVyIG9iamVjdCBpblxuICogdGhlIGFyZ3VtZW50cyBsaXN0IHdpbGwgdGFrZSBwcmVjZWRlbmNlLlxuICpcbiAqIEV4YW1wbGU6XG4gKlxuICogYGBganNcbiAqIHZhciByZXN1bHQgPSBtZXJnZSh7Zm9vOiAxMjN9LCB7Zm9vOiA0NTZ9KTtcbiAqIGNvbnNvbGUubG9nKHJlc3VsdC5mb28pOyAvLyBvdXRwdXRzIDQ1NlxuICogYGBgXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IG9iajEgT2JqZWN0IHRvIG1lcmdlXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXN1bHQgb2YgYWxsIG1lcmdlIHByb3BlcnRpZXNcbiAqL1xuZnVuY3Rpb24gbWVyZ2UoLyogb2JqMSwgb2JqMiwgb2JqMywgLi4uICovKSB7XG4gIHZhciByZXN1bHQgPSB7fTtcbiAgZnVuY3Rpb24gYXNzaWduVmFsdWUodmFsLCBrZXkpIHtcbiAgICBpZiAoaXNQbGFpbk9iamVjdChyZXN1bHRba2V5XSkgJiYgaXNQbGFpbk9iamVjdCh2YWwpKSB7XG4gICAgICByZXN1bHRba2V5XSA9IG1lcmdlKHJlc3VsdFtrZXldLCB2YWwpO1xuICAgIH0gZWxzZSBpZiAoaXNQbGFpbk9iamVjdCh2YWwpKSB7XG4gICAgICByZXN1bHRba2V5XSA9IG1lcmdlKHt9LCB2YWwpO1xuICAgIH0gZWxzZSBpZiAoaXNBcnJheSh2YWwpKSB7XG4gICAgICByZXN1bHRba2V5XSA9IHZhbC5zbGljZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXN1bHRba2V5XSA9IHZhbDtcbiAgICB9XG4gIH1cblxuICBmb3IgKHZhciBpID0gMCwgbCA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICBmb3JFYWNoKGFyZ3VtZW50c1tpXSwgYXNzaWduVmFsdWUpO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbi8qKlxuICogRXh0ZW5kcyBvYmplY3QgYSBieSBtdXRhYmx5IGFkZGluZyB0byBpdCB0aGUgcHJvcGVydGllcyBvZiBvYmplY3QgYi5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gYSBUaGUgb2JqZWN0IHRvIGJlIGV4dGVuZGVkXG4gKiBAcGFyYW0ge09iamVjdH0gYiBUaGUgb2JqZWN0IHRvIGNvcHkgcHJvcGVydGllcyBmcm9tXG4gKiBAcGFyYW0ge09iamVjdH0gdGhpc0FyZyBUaGUgb2JqZWN0IHRvIGJpbmQgZnVuY3Rpb24gdG9cbiAqIEByZXR1cm4ge09iamVjdH0gVGhlIHJlc3VsdGluZyB2YWx1ZSBvZiBvYmplY3QgYVxuICovXG5mdW5jdGlvbiBleHRlbmQoYSwgYiwgdGhpc0FyZykge1xuICBmb3JFYWNoKGIsIGZ1bmN0aW9uIGFzc2lnblZhbHVlKHZhbCwga2V5KSB7XG4gICAgaWYgKHRoaXNBcmcgJiYgdHlwZW9mIHZhbCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgYVtrZXldID0gYmluZCh2YWwsIHRoaXNBcmcpO1xuICAgIH0gZWxzZSB7XG4gICAgICBhW2tleV0gPSB2YWw7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIGE7XG59XG5cbi8qKlxuICogUmVtb3ZlIGJ5dGUgb3JkZXIgbWFya2VyLiBUaGlzIGNhdGNoZXMgRUYgQkIgQkYgKHRoZSBVVEYtOCBCT00pXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGNvbnRlbnQgd2l0aCBCT01cbiAqIEByZXR1cm4ge3N0cmluZ30gY29udGVudCB2YWx1ZSB3aXRob3V0IEJPTVxuICovXG5mdW5jdGlvbiBzdHJpcEJPTShjb250ZW50KSB7XG4gIGlmIChjb250ZW50LmNoYXJDb2RlQXQoMCkgPT09IDB4RkVGRikge1xuICAgIGNvbnRlbnQgPSBjb250ZW50LnNsaWNlKDEpO1xuICB9XG4gIHJldHVybiBjb250ZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgaXNBcnJheTogaXNBcnJheSxcbiAgaXNBcnJheUJ1ZmZlcjogaXNBcnJheUJ1ZmZlcixcbiAgaXNCdWZmZXI6IGlzQnVmZmVyLFxuICBpc0Zvcm1EYXRhOiBpc0Zvcm1EYXRhLFxuICBpc0FycmF5QnVmZmVyVmlldzogaXNBcnJheUJ1ZmZlclZpZXcsXG4gIGlzU3RyaW5nOiBpc1N0cmluZyxcbiAgaXNOdW1iZXI6IGlzTnVtYmVyLFxuICBpc09iamVjdDogaXNPYmplY3QsXG4gIGlzUGxhaW5PYmplY3Q6IGlzUGxhaW5PYmplY3QsXG4gIGlzVW5kZWZpbmVkOiBpc1VuZGVmaW5lZCxcbiAgaXNEYXRlOiBpc0RhdGUsXG4gIGlzRmlsZTogaXNGaWxlLFxuICBpc0Jsb2I6IGlzQmxvYixcbiAgaXNGdW5jdGlvbjogaXNGdW5jdGlvbixcbiAgaXNTdHJlYW06IGlzU3RyZWFtLFxuICBpc1VSTFNlYXJjaFBhcmFtczogaXNVUkxTZWFyY2hQYXJhbXMsXG4gIGlzU3RhbmRhcmRCcm93c2VyRW52OiBpc1N0YW5kYXJkQnJvd3NlckVudixcbiAgZm9yRWFjaDogZm9yRWFjaCxcbiAgbWVyZ2U6IG1lcmdlLFxuICBleHRlbmQ6IGV4dGVuZCxcbiAgdHJpbTogdHJpbSxcbiAgc3RyaXBCT006IHN0cmlwQk9NXG59O1xuIiwiZnVuY3Rpb24gY2xhc3NuYW1lICgpIHtcbiAgICB2YXIgcmVzdWx0ID0ge30sXG4gICAgICAgIG9iamVjdHMgPSB7fSxcbiAgICAgICAgcmVzdWx0U3RyaW5nID0gXCJcIjtcblxuICAgIGZ1bmN0aW9uIGFkZCAoc3RyaW5ncykge1xuICAgICAgICBjbGFzc25hbWUuZWFjaChzdHJpbmdzLnNwbGl0KFwiIFwiKSwgZnVuY3Rpb24gKHN0cmluZykge1xuICAgICAgICAgICAgcmVzdWx0W3N0cmluZ10gPSAhIXN0cmluZztcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgY2xhc3NuYW1lLmVhY2goW10uc2xpY2UuY2FsbChhcmd1bWVudHMpLCBmdW5jdGlvbiAoeCkge1xuICAgICAgICBzd2l0Y2ggKGNsYXNzbmFtZS5nZXRUeXBlKHgpKSB7XG4gICAgICAgIGNhc2UgXCJzdHJpbmdcIjpcbiAgICAgICAgY2FzZSBcIm51bWJlclwiOlxuICAgICAgICAgICAgYWRkKHgpO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSBcImFycmF5XCI6XG4gICAgICAgICAgICBhZGQoY2xhc3NuYW1lLmFwcGx5KG51bGwsIHgpKTtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgXCJlbGVtZW50XCI6XG4gICAgICAgICAgICBhZGQoY2xhc3NuYW1lKHguY2xhc3NOYW1lIHx8IFwiXCIpKTtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgXCJub2RlbGlzdFwiOlxuICAgICAgICAgICAgYWRkKGNsYXNzbmFtZS5hcHBseShudWxsLCBbXS5zbGljZS5jYWxsKHgpKSk7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlIFwianF1ZXJ5XCI6XG4gICAgICAgICAgICBhZGQoY2xhc3NuYW1lLmFwcGx5KG51bGwsIHguZ2V0KCkpKTtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgXCJvYmplY3RcIjpcbiAgICAgICAgICAgIG9iamVjdHMgPSBjbGFzc25hbWUuZXh0ZW5kKG9iamVjdHMsIHgpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIHJlc3VsdCA9IGNsYXNzbmFtZS5leHRlbmQocmVzdWx0LCBvYmplY3RzKTtcblxuICAgIGNsYXNzbmFtZS5lYWNoKHJlc3VsdCwgZnVuY3Rpb24gKHZhbCwga2V5KSB7XG4gICAgICAgIGlmICh2YWwpIHtcbiAgICAgICAgICAgIHJlc3VsdFN0cmluZyArPSBcIiBcIiArIGtleTtcbiAgICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHJlc3VsdFN0cmluZy5zdWJzdHIoMSk7XG59XG5cbmNsYXNzbmFtZS5zZXRUbyA9IGZ1bmN0aW9uIChlbGVtZW50cykge1xuICAgIHZhciB0eXBlID0gY2xhc3NuYW1lLmdldFR5cGUoZWxlbWVudHMpO1xuXG4gICAgaWYgKHR5cGUgPT09IFwiZWxlbWVudFwiKSB7XG4gICAgICAgIGVsZW1lbnRzID0gW2VsZW1lbnRzXTtcbiAgICB9XG5cbiAgICBpZiAodHlwZSA9PT0gXCJqcXVlcnlcIikge1xuICAgICAgICBlbGVtZW50cyA9IGVsZW1lbnRzLmdldCgpO1xuICAgIH1cblxuICAgIGlmICh0eXBlID09PSBcIm5vZGVsaXN0XCIpIHtcbiAgICAgICAgZWxlbWVudHMgPSBbXS5zbGljZS5jYWxsKGVsZW1lbnRzKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgY2xhc3NOYW1lcyA9IGNsYXNzbmFtZS5hcHBseShudWxsLCBhcmd1bWVudHMpO1xuXG4gICAgICAgIGNsYXNzbmFtZS5lYWNoKGVsZW1lbnRzLCBmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgICAgICAgICAgZWxlbWVudC5jbGFzc05hbWUgPSBjbGFzc05hbWVzO1xuICAgICAgICB9KTtcbiAgICB9O1xufTtcblxuY2xhc3NuYW1lLmVhY2ggPSBmdW5jdGlvbiAoYXJyLCBmbikge1xuICAgIHZhciB0eXBlID0gY2xhc3NuYW1lLmdldFR5cGUoYXJyKTtcblxuICAgIGlmICh0eXBlID09PSBcImFycmF5XCIpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGZuKGFycltpXSwgaSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodHlwZSA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICBmb3IgKHZhciBrZXkgaW4gYXJyKSB7XG4gICAgICAgICAgICBmbihhcnJba2V5XSwga2V5KTtcbiAgICAgICAgfVxuICAgIH1cbn07XG5cbmNsYXNzbmFtZS5nZXRUeXBlID0gZnVuY3Rpb24gKHgpIHtcbiAgICB2YXIgdHlwZSA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh4KS5zbGljZSg4LCAtMSkudG9Mb3dlckNhc2UoKTtcblxuICAgIGlmICh0eXBlID09PSBcIm9iamVjdFwiICYmIHguanF1ZXJ5KSB7XG4gICAgICAgIHJldHVybiBcImpxdWVyeVwiO1xuICAgIH1cblxuICAgIGlmICh0eXBlLmluZGV4T2YoXCJlbGVtZW50XCIpID4gMSkge1xuICAgICAgICByZXR1cm4gXCJlbGVtZW50XCI7XG4gICAgfVxuXG4gICAgcmV0dXJuIHR5cGU7XG59O1xuXG5jbGFzc25hbWUuZXh0ZW5kID0gZnVuY3Rpb24gKG9iajEsIG9iajIpIHtcbiAgICB2YXIgcmVzdWx0ID0ge30sXG4gICAgICAgIG9ianMgPSBbb2JqMSwgb2JqMl07XG5cbiAgICBjbGFzc25hbWUuZWFjaChvYmpzLCBmdW5jdGlvbiAob2JqKSB7XG4gICAgICAgIGNsYXNzbmFtZS5lYWNoKG9iaiwgZnVuY3Rpb24gKHZhbCwga2V5KSB7XG4gICAgICAgICAgICBpZiAob2JqLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgICAgICAgICByZXN1bHRba2V5XSA9IHZhbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gcmVzdWx0O1xufTtcblxuaWYgKHR5cGVvZiBtb2R1bGUgIT09IFwidW5kZWZpbmVkXCIgJiYgbW9kdWxlLmV4cG9ydHMpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGNsYXNzbmFtZTtcbn1cbiIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcblxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9XG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0KCkge31cbmVtcHR5RnVuY3Rpb25XaXRoUmVzZXQucmVzZXRXYXJuaW5nQ2FjaGUgPSBlbXB0eUZ1bmN0aW9uO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgIC8vIEl0IGlzIHN0aWxsIHNhZmUgd2hlbiBjYWxsZWQgZnJvbSBSZWFjdC5cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcihcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgdGhyb3cgZXJyO1xuICB9O1xuICBzaGltLmlzUmVxdWlyZWQgPSBzaGltO1xuICBmdW5jdGlvbiBnZXRTaGltKCkge1xuICAgIHJldHVybiBzaGltO1xuICB9O1xuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanNgLlxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IHNoaW0sXG4gICAgYmlnaW50OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGVsZW1lbnRUeXBlOiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW0sXG4gICAgZXhhY3Q6IGdldFNoaW0sXG5cbiAgICBjaGVja1Byb3BUeXBlczogZW1wdHlGdW5jdGlvbldpdGhSZXNldCxcbiAgICByZXNldFdhcm5pbmdDYWNoZTogZW1wdHlGdW5jdGlvblxuICB9O1xuXG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBSZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcblxuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBkZXZlbG9wbWVudCBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFR5cGVDaGVja2VycycpKFJlYWN0SXMuaXNFbGVtZW50LCB0aHJvd09uRGlyZWN0QWNjZXNzKTtcbn0gZWxzZSB7XG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcycpKCk7XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTcuMC4yXG4gKiByZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuLypcbiBNb2Rlcm5penIgMy4wLjBwcmUgKEN1c3RvbSBCdWlsZCkgfCBNSVRcbiovXG4ndXNlIHN0cmljdCc7dmFyIGFhPXJlcXVpcmUoXCJyZWFjdFwiKSxtPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLHI9cmVxdWlyZShcInNjaGVkdWxlclwiKTtmdW5jdGlvbiB5KGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifWlmKCFhYSl0aHJvdyBFcnJvcih5KDIyNykpO3ZhciBiYT1uZXcgU2V0LGNhPXt9O2Z1bmN0aW9uIGRhKGEsYil7ZWEoYSxiKTtlYShhK1wiQ2FwdHVyZVwiLGIpfVxuZnVuY3Rpb24gZWEoYSxiKXtjYVthXT1iO2ZvcihhPTA7YTxiLmxlbmd0aDthKyspYmEuYWRkKGJbYV0pfVxudmFyIGZhPSEoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KSxoYT0vXls6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRF1bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXC0uMC05XFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MF0qJC8saWE9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxcbmphPXt9LGthPXt9O2Z1bmN0aW9uIGxhKGEpe2lmKGlhLmNhbGwoa2EsYSkpcmV0dXJuITA7aWYoaWEuY2FsbChqYSxhKSlyZXR1cm4hMTtpZihoYS50ZXN0KGEpKXJldHVybiBrYVthXT0hMDtqYVthXT0hMDtyZXR1cm4hMX1mdW5jdGlvbiBtYShhLGIsYyxkKXtpZihudWxsIT09YyYmMD09PWMudHlwZSlyZXR1cm4hMTtzd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJmdW5jdGlvblwiOmNhc2UgXCJzeW1ib2xcIjpyZXR1cm4hMDtjYXNlIFwiYm9vbGVhblwiOmlmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpcmV0dXJuIWMuYWNjZXB0c0Jvb2xlYW5zO2E9YS50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsNSk7cmV0dXJuXCJkYXRhLVwiIT09YSYmXCJhcmlhLVwiIT09YTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIG5hKGEsYixjLGQpe2lmKG51bGw9PT1ifHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGJ8fG1hKGEsYixjLGQpKXJldHVybiEwO2lmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpc3dpdGNoKGMudHlwZSl7Y2FzZSAzOnJldHVybiFiO2Nhc2UgNDpyZXR1cm4hMT09PWI7Y2FzZSA1OnJldHVybiBpc05hTihiKTtjYXNlIDY6cmV0dXJuIGlzTmFOKGIpfHwxPmJ9cmV0dXJuITF9ZnVuY3Rpb24gQihhLGIsYyxkLGUsZixnKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1iO3RoaXMuc2FuaXRpemVVUkw9Zjt0aGlzLnJlbW92ZUVtcHR5U3RyaW5nPWd9dmFyIEQ9e307XG5cImNoaWxkcmVuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIGRlZmF1bHRWYWx1ZSBkZWZhdWx0Q2hlY2tlZCBpbm5lckhUTUwgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBzdHlsZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwwLCExLGEsbnVsbCwhMSwhMSl9KTtbW1wiYWNjZXB0Q2hhcnNldFwiLFwiYWNjZXB0LWNoYXJzZXRcIl0sW1wiY2xhc3NOYW1lXCIsXCJjbGFzc1wiXSxbXCJodG1sRm9yXCIsXCJmb3JcIl0sW1wiaHR0cEVxdWl2XCIsXCJodHRwLWVxdWl2XCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF07RFtiXT1uZXcgQihiLDEsITEsYVsxXSxudWxsLCExLCExKX0pO1tcImNvbnRlbnRFZGl0YWJsZVwiLFwiZHJhZ2dhYmxlXCIsXCJzcGVsbENoZWNrXCIsXCJ2YWx1ZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwyLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xuW1wiYXV0b1JldmVyc2VcIixcImV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWRcIixcImZvY3VzYWJsZVwiLFwicHJlc2VydmVBbHBoYVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwyLCExLGEsbnVsbCwhMSwhMSl9KTtcImFsbG93RnVsbFNjcmVlbiBhc3luYyBhdXRvRm9jdXMgYXV0b1BsYXkgY29udHJvbHMgZGVmYXVsdCBkZWZlciBkaXNhYmxlZCBkaXNhYmxlUGljdHVyZUluUGljdHVyZSBkaXNhYmxlUmVtb3RlUGxheWJhY2sgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbltcImNoZWNrZWRcIixcIm11bHRpcGxlXCIsXCJtdXRlZFwiLFwic2VsZWN0ZWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMywhMCxhLG51bGwsITEsITEpfSk7W1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNCwhMSxhLG51bGwsITEsITEpfSk7W1wiY29sc1wiLFwicm93c1wiLFwic2l6ZVwiLFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSw2LCExLGEsbnVsbCwhMSwhMSl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO3ZhciBvYT0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIHBhKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKG9hLFxucGEpO0RbYl09bmV3IEIoYiwxLCExLGEsbnVsbCwhMSwhMSl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpyb2xlIHhsaW5rOnNob3cgeGxpbms6dGl0bGUgeGxpbms6dHlwZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShvYSxwYSk7RFtiXT1uZXcgQihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMSwhMSl9KTtbXCJ4bWw6YmFzZVwiLFwieG1sOmxhbmdcIixcInhtbDpzcGFjZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShvYSxwYSk7RFtiXT1uZXcgQihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiLCExLCExKX0pO1tcInRhYkluZGV4XCIsXCJjcm9zc09yaWdpblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xuRC54bGlua0hyZWY9bmV3IEIoXCJ4bGlua0hyZWZcIiwxLCExLFwieGxpbms6aHJlZlwiLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCEwLCExKTtbXCJzcmNcIixcImhyZWZcIixcImFjdGlvblwiLFwiZm9ybUFjdGlvblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCEwLCEwKX0pO1xuZnVuY3Rpb24gcWEoYSxiLGMsZCl7dmFyIGU9RC5oYXNPd25Qcm9wZXJ0eShiKT9EW2JdOm51bGw7dmFyIGY9bnVsbCE9PWU/MD09PWUudHlwZTpkPyExOiEoMjxiLmxlbmd0aCl8fFwib1wiIT09YlswXSYmXCJPXCIhPT1iWzBdfHxcIm5cIiE9PWJbMV0mJlwiTlwiIT09YlsxXT8hMTohMDtmfHwobmEoYixjLGUsZCkmJihjPW51bGwpLGR8fG51bGw9PT1lP2xhKGIpJiYobnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKTplLm11c3RVc2VQcm9wZXJ0eT9hW2UucHJvcGVydHlOYW1lXT1udWxsPT09Yz8zPT09ZS50eXBlPyExOlwiXCI6YzooYj1lLmF0dHJpYnV0ZU5hbWUsZD1lLmF0dHJpYnV0ZU5hbWVzcGFjZSxudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTooZT1lLnR5cGUsYz0zPT09ZXx8ND09PWUmJiEwPT09Yz9cIlwiOlwiXCIrYyxkP2Euc2V0QXR0cmlidXRlTlMoZCxiLGMpOmEuc2V0QXR0cmlidXRlKGIsYykpKSl9XG52YXIgcmE9YWEuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQsc2E9NjAxMDMsdGE9NjAxMDYsdWE9NjAxMDcsd2E9NjAxMDgseGE9NjAxMTQseWE9NjAxMDksemE9NjAxMTAsQWE9NjAxMTIsQmE9NjAxMTMsQ2E9NjAxMjAsRGE9NjAxMTUsRWE9NjAxMTYsRmE9NjAxMjEsR2E9NjAxMjgsSGE9NjAxMjksSWE9NjAxMzAsSmE9NjAxMzE7XG5pZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yKXt2YXIgRT1TeW1ib2wuZm9yO3NhPUUoXCJyZWFjdC5lbGVtZW50XCIpO3RhPUUoXCJyZWFjdC5wb3J0YWxcIik7dWE9RShcInJlYWN0LmZyYWdtZW50XCIpO3dhPUUoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTt4YT1FKFwicmVhY3QucHJvZmlsZXJcIik7eWE9RShcInJlYWN0LnByb3ZpZGVyXCIpO3phPUUoXCJyZWFjdC5jb250ZXh0XCIpO0FhPUUoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTtCYT1FKFwicmVhY3Quc3VzcGVuc2VcIik7Q2E9RShcInJlYWN0LnN1c3BlbnNlX2xpc3RcIik7RGE9RShcInJlYWN0Lm1lbW9cIik7RWE9RShcInJlYWN0LmxhenlcIik7RmE9RShcInJlYWN0LmJsb2NrXCIpO0UoXCJyZWFjdC5zY29wZVwiKTtHYT1FKFwicmVhY3Qub3BhcXVlLmlkXCIpO0hhPUUoXCJyZWFjdC5kZWJ1Z190cmFjZV9tb2RlXCIpO0lhPUUoXCJyZWFjdC5vZmZzY3JlZW5cIik7SmE9RShcInJlYWN0LmxlZ2FjeV9oaWRkZW5cIil9XG52YXIgS2E9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIExhKGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT1LYSYmYVtLYV18fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH12YXIgTWE7ZnVuY3Rpb24gTmEoYSl7aWYodm9pZCAwPT09TWEpdHJ5e3Rocm93IEVycm9yKCk7fWNhdGNoKGMpe3ZhciBiPWMuc3RhY2sudHJpbSgpLm1hdGNoKC9cXG4oICooYXQgKT8pLyk7TWE9YiYmYlsxXXx8XCJcIn1yZXR1cm5cIlxcblwiK01hK2F9dmFyIE9hPSExO1xuZnVuY3Rpb24gUGEoYSxiKXtpZighYXx8T2EpcmV0dXJuXCJcIjtPYT0hMDt2YXIgYz1FcnJvci5wcmVwYXJlU3RhY2tUcmFjZTtFcnJvci5wcmVwYXJlU3RhY2tUcmFjZT12b2lkIDA7dHJ5e2lmKGIpaWYoYj1mdW5jdGlvbigpe3Rocm93IEVycm9yKCk7fSxPYmplY3QuZGVmaW5lUHJvcGVydHkoYi5wcm90b3R5cGUsXCJwcm9wc1wiLHtzZXQ6ZnVuY3Rpb24oKXt0aHJvdyBFcnJvcigpO319KSxcIm9iamVjdFwiPT09dHlwZW9mIFJlZmxlY3QmJlJlZmxlY3QuY29uc3RydWN0KXt0cnl7UmVmbGVjdC5jb25zdHJ1Y3QoYixbXSl9Y2F0Y2goayl7dmFyIGQ9a31SZWZsZWN0LmNvbnN0cnVjdChhLFtdLGIpfWVsc2V7dHJ5e2IuY2FsbCgpfWNhdGNoKGspe2Q9a31hLmNhbGwoYi5wcm90b3R5cGUpfWVsc2V7dHJ5e3Rocm93IEVycm9yKCk7fWNhdGNoKGspe2Q9a31hKCl9fWNhdGNoKGspe2lmKGsmJmQmJlwic3RyaW5nXCI9PT10eXBlb2Ygay5zdGFjayl7Zm9yKHZhciBlPWsuc3RhY2suc3BsaXQoXCJcXG5cIiksXG5mPWQuc3RhY2suc3BsaXQoXCJcXG5cIiksZz1lLmxlbmd0aC0xLGg9Zi5sZW5ndGgtMTsxPD1nJiYwPD1oJiZlW2ddIT09ZltoXTspaC0tO2Zvcig7MTw9ZyYmMDw9aDtnLS0saC0tKWlmKGVbZ10hPT1mW2hdKXtpZigxIT09Z3x8MSE9PWgpe2RvIGlmKGctLSxoLS0sMD5ofHxlW2ddIT09ZltoXSlyZXR1cm5cIlxcblwiK2VbZ10ucmVwbGFjZShcIiBhdCBuZXcgXCIsXCIgYXQgXCIpO3doaWxlKDE8PWcmJjA8PWgpfWJyZWFrfX19ZmluYWxseXtPYT0hMSxFcnJvci5wcmVwYXJlU3RhY2tUcmFjZT1jfXJldHVybihhPWE/YS5kaXNwbGF5TmFtZXx8YS5uYW1lOlwiXCIpP05hKGEpOlwiXCJ9XG5mdW5jdGlvbiBRYShhKXtzd2l0Y2goYS50YWcpe2Nhc2UgNTpyZXR1cm4gTmEoYS50eXBlKTtjYXNlIDE2OnJldHVybiBOYShcIkxhenlcIik7Y2FzZSAxMzpyZXR1cm4gTmEoXCJTdXNwZW5zZVwiKTtjYXNlIDE5OnJldHVybiBOYShcIlN1c3BlbnNlTGlzdFwiKTtjYXNlIDA6Y2FzZSAyOmNhc2UgMTU6cmV0dXJuIGE9UGEoYS50eXBlLCExKSxhO2Nhc2UgMTE6cmV0dXJuIGE9UGEoYS50eXBlLnJlbmRlciwhMSksYTtjYXNlIDIyOnJldHVybiBhPVBhKGEudHlwZS5fcmVuZGVyLCExKSxhO2Nhc2UgMTpyZXR1cm4gYT1QYShhLnR5cGUsITApLGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1cbmZ1bmN0aW9uIFJhKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGEuZGlzcGxheU5hbWV8fGEubmFtZXx8bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpcmV0dXJuIGE7c3dpdGNoKGEpe2Nhc2UgdWE6cmV0dXJuXCJGcmFnbWVudFwiO2Nhc2UgdGE6cmV0dXJuXCJQb3J0YWxcIjtjYXNlIHhhOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIHdhOnJldHVyblwiU3RyaWN0TW9kZVwiO2Nhc2UgQmE6cmV0dXJuXCJTdXNwZW5zZVwiO2Nhc2UgQ2E6cmV0dXJuXCJTdXNwZW5zZUxpc3RcIn1pZihcIm9iamVjdFwiPT09dHlwZW9mIGEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgemE6cmV0dXJuKGEuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Db25zdW1lclwiO2Nhc2UgeWE6cmV0dXJuKGEuX2NvbnRleHQuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Qcm92aWRlclwiO2Nhc2UgQWE6dmFyIGI9YS5yZW5kZXI7Yj1iLmRpc3BsYXlOYW1lfHxiLm5hbWV8fFwiXCI7XG5yZXR1cm4gYS5kaXNwbGF5TmFtZXx8KFwiXCIhPT1iP1wiRm9yd2FyZFJlZihcIitiK1wiKVwiOlwiRm9yd2FyZFJlZlwiKTtjYXNlIERhOnJldHVybiBSYShhLnR5cGUpO2Nhc2UgRmE6cmV0dXJuIFJhKGEuX3JlbmRlcik7Y2FzZSBFYTpiPWEuX3BheWxvYWQ7YT1hLl9pbml0O3RyeXtyZXR1cm4gUmEoYShiKSl9Y2F0Y2goYyl7fX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBTYShhKXtzd2l0Y2godHlwZW9mIGEpe2Nhc2UgXCJib29sZWFuXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwic3RyaW5nXCI6Y2FzZSBcInVuZGVmaW5lZFwiOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuXCJcIn19ZnVuY3Rpb24gVGEoYSl7dmFyIGI9YS50eXBlO3JldHVybihhPWEubm9kZU5hbWUpJiZcImlucHV0XCI9PT1hLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1ifHxcInJhZGlvXCI9PT1iKX1cbmZ1bmN0aW9uIFVhKGEpe3ZhciBiPVRhKGEpP1wiY2hlY2tlZFwiOlwidmFsdWVcIixjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYiksZD1cIlwiK2FbYl07aWYoIWEuaGFzT3duUHJvcGVydHkoYikmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpe3ZhciBlPWMuZ2V0LGY9Yy5zZXQ7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlLmNhbGwodGhpcyl9LHNldDpmdW5jdGlvbihhKXtkPVwiXCIrYTtmLmNhbGwodGhpcyxhKX19KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZX0pO3JldHVybntnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPVxubnVsbDtkZWxldGUgYVtiXX19fX1mdW5jdGlvbiBWYShhKXthLl92YWx1ZVRyYWNrZXJ8fChhLl92YWx1ZVRyYWNrZXI9VWEoYSkpfWZ1bmN0aW9uIFdhKGEpe2lmKCFhKXJldHVybiExO3ZhciBiPWEuX3ZhbHVlVHJhY2tlcjtpZighYilyZXR1cm4hMDt2YXIgYz1iLmdldFZhbHVlKCk7dmFyIGQ9XCJcIjthJiYoZD1UYShhKT9hLmNoZWNrZWQ/XCJ0cnVlXCI6XCJmYWxzZVwiOmEudmFsdWUpO2E9ZDtyZXR1cm4gYSE9PWM/KGIuc2V0VmFsdWUoYSksITApOiExfWZ1bmN0aW9uIFhhKGEpe2E9YXx8KFwidW5kZWZpbmVkXCIhPT10eXBlb2YgZG9jdW1lbnQ/ZG9jdW1lbnQ6dm9pZCAwKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGEpcmV0dXJuIG51bGw7dHJ5e3JldHVybiBhLmFjdGl2ZUVsZW1lbnR8fGEuYm9keX1jYXRjaChiKXtyZXR1cm4gYS5ib2R5fX1cbmZ1bmN0aW9uIFlhKGEsYil7dmFyIGM9Yi5jaGVja2VkO3JldHVybiBtKHt9LGIse2RlZmF1bHRDaGVja2VkOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLHZhbHVlOnZvaWQgMCxjaGVja2VkOm51bGwhPWM/YzphLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWR9KX1mdW5jdGlvbiBaYShhLGIpe3ZhciBjPW51bGw9PWIuZGVmYXVsdFZhbHVlP1wiXCI6Yi5kZWZhdWx0VmFsdWUsZD1udWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQ7Yz1TYShudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpkLGluaXRpYWxWYWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fWZ1bmN0aW9uICRhKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmcWEoYSxcImNoZWNrZWRcIixiLCExKX1cbmZ1bmN0aW9uIGFiKGEsYil7JGEoYSxiKTt2YXIgYz1TYShiLnZhbHVlKSxkPWIudHlwZTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1kKXtpZigwPT09YyYmXCJcIj09PWEudmFsdWV8fGEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgaWYoXCJzdWJtaXRcIj09PWR8fFwicmVzZXRcIj09PWQpe2EucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7cmV0dXJufWIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKT9iYihhLGIudHlwZSxjKTpiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpJiZiYihhLGIudHlwZSxTYShiLmRlZmF1bHRWYWx1ZSkpO251bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cbmZ1bmN0aW9uIGNiKGEsYixjKXtpZihiLmhhc093blByb3BlcnR5KFwidmFsdWVcIil8fGIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikpe3ZhciBkPWIudHlwZTtpZighKFwic3VibWl0XCIhPT1kJiZcInJlc2V0XCIhPT1kfHx2b2lkIDAhPT1iLnZhbHVlJiZudWxsIT09Yi52YWx1ZSkpcmV0dXJuO2I9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO2N8fGI9PT1hLnZhbHVlfHwoYS52YWx1ZT1iKTthLmRlZmF1bHRWYWx1ZT1ifWM9YS5uYW1lO1wiXCIhPT1jJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9ISFhLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWQ7XCJcIiE9PWMmJihhLm5hbWU9Yyl9XG5mdW5jdGlvbiBiYihhLGIsYyl7aWYoXCJudW1iZXJcIiE9PWJ8fFhhKGEub3duZXJEb2N1bWVudCkhPT1hKW51bGw9PWM/YS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlOmEuZGVmYXVsdFZhbHVlIT09XCJcIitjJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitjKX1mdW5jdGlvbiBkYihhKXt2YXIgYj1cIlwiO2FhLkNoaWxkcmVuLmZvckVhY2goYSxmdW5jdGlvbihhKXtudWxsIT1hJiYoYis9YSl9KTtyZXR1cm4gYn1mdW5jdGlvbiBlYihhLGIpe2E9bSh7Y2hpbGRyZW46dm9pZCAwfSxiKTtpZihiPWRiKGIuY2hpbGRyZW4pKWEuY2hpbGRyZW49YjtyZXR1cm4gYX1cbmZ1bmN0aW9uIGZiKGEsYixjLGQpe2E9YS5vcHRpb25zO2lmKGIpe2I9e307Zm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYltcIiRcIitjW2VdXT0hMDtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKWU9Yi5oYXNPd25Qcm9wZXJ0eShcIiRcIithW2NdLnZhbHVlKSxhW2NdLnNlbGVjdGVkIT09ZSYmKGFbY10uc2VsZWN0ZWQ9ZSksZSYmZCYmKGFbY10uZGVmYXVsdFNlbGVjdGVkPSEwKX1lbHNle2M9XCJcIitTYShjKTtiPW51bGw7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKyl7aWYoYVtlXS52YWx1ZT09PWMpe2FbZV0uc2VsZWN0ZWQ9ITA7ZCYmKGFbZV0uZGVmYXVsdFNlbGVjdGVkPSEwKTtyZXR1cm59bnVsbCE9PWJ8fGFbZV0uZGlzYWJsZWR8fChiPWFbZV0pfW51bGwhPT1iJiYoYi5zZWxlY3RlZD0hMCl9fVxuZnVuY3Rpb24gZ2IoYSxiKXtpZihudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKXRocm93IEVycm9yKHkoOTEpKTtyZXR1cm4gbSh7fSxiLHt2YWx1ZTp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCxjaGlsZHJlbjpcIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWV9KX1mdW5jdGlvbiBoYihhLGIpe3ZhciBjPWIudmFsdWU7aWYobnVsbD09Yyl7Yz1iLmNoaWxkcmVuO2I9Yi5kZWZhdWx0VmFsdWU7aWYobnVsbCE9Yyl7aWYobnVsbCE9Yil0aHJvdyBFcnJvcih5KDkyKSk7aWYoQXJyYXkuaXNBcnJheShjKSl7aWYoISgxPj1jLmxlbmd0aCkpdGhyb3cgRXJyb3IoeSg5MykpO2M9Y1swXX1iPWN9bnVsbD09YiYmKGI9XCJcIik7Yz1ifWEuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOlNhKGMpfX1cbmZ1bmN0aW9uIGliKGEsYil7dmFyIGM9U2EoYi52YWx1ZSksZD1TYShiLmRlZmF1bHRWYWx1ZSk7bnVsbCE9YyYmKGM9XCJcIitjLGMhPT1hLnZhbHVlJiYoYS52YWx1ZT1jKSxudWxsPT1iLmRlZmF1bHRWYWx1ZSYmYS5kZWZhdWx0VmFsdWUhPT1jJiYoYS5kZWZhdWx0VmFsdWU9YykpO251bGwhPWQmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2QpfWZ1bmN0aW9uIGpiKGEpe3ZhciBiPWEudGV4dENvbnRlbnQ7Yj09PWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUmJlwiXCIhPT1iJiZudWxsIT09YiYmKGEudmFsdWU9Yil9dmFyIGtiPXtodG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiLG1hdGhtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIixzdmc6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wifTtcbmZ1bmN0aW9uIGxiKGEpe3N3aXRjaChhKXtjYXNlIFwic3ZnXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO2Nhc2UgXCJtYXRoXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCI7ZGVmYXVsdDpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIn19ZnVuY3Rpb24gbWIoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP2xiKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxudmFyIG5iLG9iPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgTVNBcHAmJk1TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uP2Z1bmN0aW9uKGIsYyxkLGUpe01TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uKGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX06YX0oZnVuY3Rpb24oYSxiKXtpZihhLm5hbWVzcGFjZVVSSSE9PWtiLnN2Z3x8XCJpbm5lckhUTUxcImluIGEpYS5pbm5lckhUTUw9YjtlbHNle25iPW5ifHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO25iLmlubmVySFRNTD1cIjxzdmc+XCIrYi52YWx1ZU9mKCkudG9TdHJpbmcoKStcIjwvc3ZnPlwiO2ZvcihiPW5iLmZpcnN0Q2hpbGQ7YS5maXJzdENoaWxkOylhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCk7Zm9yKDtiLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKX19KTtcbmZ1bmN0aW9uIHBiKGEsYil7aWYoYil7dmFyIGM9YS5maXJzdENoaWxkO2lmKGMmJmM9PT1hLmxhc3RDaGlsZCYmMz09PWMubm9kZVR5cGUpe2Mubm9kZVZhbHVlPWI7cmV0dXJufX1hLnRleHRDb250ZW50PWJ9XG52YXIgcWI9e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGJvcmRlckltYWdlT3V0c2V0OiEwLGJvcmRlckltYWdlU2xpY2U6ITAsYm9yZGVySW1hZ2VXaWR0aDohMCxib3hGbGV4OiEwLGJveEZsZXhHcm91cDohMCxib3hPcmRpbmFsR3JvdXA6ITAsY29sdW1uQ291bnQ6ITAsY29sdW1uczohMCxmbGV4OiEwLGZsZXhHcm93OiEwLGZsZXhQb3NpdGl2ZTohMCxmbGV4U2hyaW5rOiEwLGZsZXhOZWdhdGl2ZTohMCxmbGV4T3JkZXI6ITAsZ3JpZEFyZWE6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTcGFuOiEwLGdyaWRSb3dTdGFydDohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblNwYW46ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCx6b29tOiEwLGZpbGxPcGFjaXR5OiEwLFxuZmxvb2RPcGFjaXR5OiEwLHN0b3BPcGFjaXR5OiEwLHN0cm9rZURhc2hhcnJheTohMCxzdHJva2VEYXNob2Zmc2V0OiEwLHN0cm9rZU1pdGVybGltaXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH0scmI9W1wiV2Via2l0XCIsXCJtc1wiLFwiTW96XCIsXCJPXCJdO09iamVjdC5rZXlzKHFiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JiLmZvckVhY2goZnVuY3Rpb24oYil7Yj1iK2EuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHJpbmcoMSk7cWJbYl09cWJbYV19KX0pO2Z1bmN0aW9uIHNiKGEsYixjKXtyZXR1cm4gbnVsbD09Ynx8XCJib29sZWFuXCI9PT10eXBlb2YgYnx8XCJcIj09PWI/XCJcIjpjfHxcIm51bWJlclwiIT09dHlwZW9mIGJ8fDA9PT1ifHxxYi5oYXNPd25Qcm9wZXJ0eShhKSYmcWJbYV0/KFwiXCIrYikudHJpbSgpOmIrXCJweFwifVxuZnVuY3Rpb24gdGIoYSxiKXthPWEuc3R5bGU7Zm9yKHZhciBjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9MD09PWMuaW5kZXhPZihcIi0tXCIpLGU9c2IoYyxiW2NdLGQpO1wiZmxvYXRcIj09PWMmJihjPVwiY3NzRmxvYXRcIik7ZD9hLnNldFByb3BlcnR5KGMsZSk6YVtjXT1lfX12YXIgdWI9bSh7bWVudWl0ZW06ITB9LHthcmVhOiEwLGJhc2U6ITAsYnI6ITAsY29sOiEwLGVtYmVkOiEwLGhyOiEwLGltZzohMCxpbnB1dDohMCxrZXlnZW46ITAsbGluazohMCxtZXRhOiEwLHBhcmFtOiEwLHNvdXJjZTohMCx0cmFjazohMCx3YnI6ITB9KTtcbmZ1bmN0aW9uIHZiKGEsYil7aWYoYil7aWYodWJbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcih5KDEzNyxhKSk7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl7aWYobnVsbCE9Yi5jaGlsZHJlbil0aHJvdyBFcnJvcih5KDYwKSk7aWYoIShcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcih5KDYxKSk7fWlmKG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZSl0aHJvdyBFcnJvcih5KDYyKSk7fX1cbmZ1bmN0aW9uIHdiKGEsYil7aWYoLTE9PT1hLmluZGV4T2YoXCItXCIpKXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYi5pcztzd2l0Y2goYSl7Y2FzZSBcImFubm90YXRpb24teG1sXCI6Y2FzZSBcImNvbG9yLXByb2ZpbGVcIjpjYXNlIFwiZm9udC1mYWNlXCI6Y2FzZSBcImZvbnQtZmFjZS1zcmNcIjpjYXNlIFwiZm9udC1mYWNlLXVyaVwiOmNhc2UgXCJmb250LWZhY2UtZm9ybWF0XCI6Y2FzZSBcImZvbnQtZmFjZS1uYW1lXCI6Y2FzZSBcIm1pc3NpbmctZ2x5cGhcIjpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiEwfX1mdW5jdGlvbiB4YihhKXthPWEudGFyZ2V0fHxhLnNyY0VsZW1lbnR8fHdpbmRvdzthLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50JiYoYT1hLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KTtyZXR1cm4gMz09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmF9dmFyIHliPW51bGwsemI9bnVsbCxBYj1udWxsO1xuZnVuY3Rpb24gQmIoYSl7aWYoYT1DYihhKSl7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIHliKXRocm93IEVycm9yKHkoMjgwKSk7dmFyIGI9YS5zdGF0ZU5vZGU7YiYmKGI9RGIoYikseWIoYS5zdGF0ZU5vZGUsYS50eXBlLGIpKX19ZnVuY3Rpb24gRWIoYSl7emI/QWI/QWIucHVzaChhKTpBYj1bYV06emI9YX1mdW5jdGlvbiBGYigpe2lmKHpiKXt2YXIgYT16YixiPUFiO0FiPXpiPW51bGw7QmIoYSk7aWYoYilmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKUJiKGJbYV0pfX1mdW5jdGlvbiBHYihhLGIpe3JldHVybiBhKGIpfWZ1bmN0aW9uIEhiKGEsYixjLGQsZSl7cmV0dXJuIGEoYixjLGQsZSl9ZnVuY3Rpb24gSWIoKXt9dmFyIEpiPUdiLEtiPSExLExiPSExO2Z1bmN0aW9uIE1iKCl7aWYobnVsbCE9PXpifHxudWxsIT09QWIpSWIoKSxGYigpfVxuZnVuY3Rpb24gTmIoYSxiLGMpe2lmKExiKXJldHVybiBhKGIsYyk7TGI9ITA7dHJ5e3JldHVybiBKYihhLGIsYyl9ZmluYWxseXtMYj0hMSxNYigpfX1cbmZ1bmN0aW9uIE9iKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7dmFyIGQ9RGIoYyk7aWYobnVsbD09PWQpcmV0dXJuIG51bGw7Yz1kW2JdO2E6c3dpdGNoKGIpe2Nhc2UgXCJvbkNsaWNrXCI6Y2FzZSBcIm9uQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tcIjpjYXNlIFwib25Eb3VibGVDbGlja0NhcHR1cmVcIjpjYXNlIFwib25Nb3VzZURvd25cIjpjYXNlIFwib25Nb3VzZURvd25DYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlVXBcIjpjYXNlIFwib25Nb3VzZVVwQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRW50ZXJcIjooZD0hZC5kaXNhYmxlZCl8fChhPWEudHlwZSxkPSEoXCJidXR0b25cIj09PWF8fFwiaW5wdXRcIj09PWF8fFwic2VsZWN0XCI9PT1hfHxcInRleHRhcmVhXCI9PT1hKSk7YT0hZDticmVhayBhO2RlZmF1bHQ6YT0hMX1pZihhKXJldHVybiBudWxsO2lmKGMmJlwiZnVuY3Rpb25cIiE9PVxudHlwZW9mIGMpdGhyb3cgRXJyb3IoeSgyMzEsYix0eXBlb2YgYykpO3JldHVybiBjfXZhciBQYj0hMTtpZihmYSl0cnl7dmFyIFFiPXt9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShRYixcInBhc3NpdmVcIix7Z2V0OmZ1bmN0aW9uKCl7UGI9ITB9fSk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJ0ZXN0XCIsUWIsUWIpO3dpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwidGVzdFwiLFFiLFFiKX1jYXRjaChhKXtQYj0hMX1mdW5jdGlvbiBSYihhLGIsYyxkLGUsZixnLGgsayl7dmFyIGw9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDMpO3RyeXtiLmFwcGx5KGMsbCl9Y2F0Y2gobil7dGhpcy5vbkVycm9yKG4pfX12YXIgU2I9ITEsVGI9bnVsbCxVYj0hMSxWYj1udWxsLFdiPXtvbkVycm9yOmZ1bmN0aW9uKGEpe1NiPSEwO1RiPWF9fTtmdW5jdGlvbiBYYihhLGIsYyxkLGUsZixnLGgsayl7U2I9ITE7VGI9bnVsbDtSYi5hcHBseShXYixhcmd1bWVudHMpfVxuZnVuY3Rpb24gWWIoYSxiLGMsZCxlLGYsZyxoLGspe1hiLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihTYil7aWYoU2Ipe3ZhciBsPVRiO1NiPSExO1RiPW51bGx9ZWxzZSB0aHJvdyBFcnJvcih5KDE5OCkpO1VifHwoVWI9ITAsVmI9bCl9fWZ1bmN0aW9uIFpiKGEpe3ZhciBiPWEsYz1hO2lmKGEuYWx0ZXJuYXRlKWZvcig7Yi5yZXR1cm47KWI9Yi5yZXR1cm47ZWxzZXthPWI7ZG8gYj1hLDAhPT0oYi5mbGFncyYxMDI2KSYmKGM9Yi5yZXR1cm4pLGE9Yi5yZXR1cm47d2hpbGUoYSl9cmV0dXJuIDM9PT1iLnRhZz9jOm51bGx9ZnVuY3Rpb24gJGIoYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9YS5tZW1vaXplZFN0YXRlO251bGw9PT1iJiYoYT1hLmFsdGVybmF0ZSxudWxsIT09YSYmKGI9YS5tZW1vaXplZFN0YXRlKSk7aWYobnVsbCE9PWIpcmV0dXJuIGIuZGVoeWRyYXRlZH1yZXR1cm4gbnVsbH1mdW5jdGlvbiBhYyhhKXtpZihaYihhKSE9PWEpdGhyb3cgRXJyb3IoeSgxODgpKTt9XG5mdW5jdGlvbiBiYyhhKXt2YXIgYj1hLmFsdGVybmF0ZTtpZighYil7Yj1aYihhKTtpZihudWxsPT09Yil0aHJvdyBFcnJvcih5KDE4OCkpO3JldHVybiBiIT09YT9udWxsOmF9Zm9yKHZhciBjPWEsZD1iOzspe3ZhciBlPWMucmV0dXJuO2lmKG51bGw9PT1lKWJyZWFrO3ZhciBmPWUuYWx0ZXJuYXRlO2lmKG51bGw9PT1mKXtkPWUucmV0dXJuO2lmKG51bGwhPT1kKXtjPWQ7Y29udGludWV9YnJlYWt9aWYoZS5jaGlsZD09PWYuY2hpbGQpe2ZvcihmPWUuY2hpbGQ7Zjspe2lmKGY9PT1jKXJldHVybiBhYyhlKSxhO2lmKGY9PT1kKXJldHVybiBhYyhlKSxiO2Y9Zi5zaWJsaW5nfXRocm93IEVycm9yKHkoMTg4KSk7fWlmKGMucmV0dXJuIT09ZC5yZXR1cm4pYz1lLGQ9ZjtlbHNle2Zvcih2YXIgZz0hMSxoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZTtkPWY7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1lO2M9ZjticmVha31oPWguc2libGluZ31pZighZyl7Zm9yKGg9Zi5jaGlsZDtoOyl7aWYoaD09PVxuYyl7Zz0hMDtjPWY7ZD1lO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZjtjPWU7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpdGhyb3cgRXJyb3IoeSgxODkpKTt9fWlmKGMuYWx0ZXJuYXRlIT09ZCl0aHJvdyBFcnJvcih5KDE5MCkpO31pZigzIT09Yy50YWcpdGhyb3cgRXJyb3IoeSgxODgpKTtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIGNjKGEpe2E9YmMoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoNT09PWIudGFnfHw2PT09Yi50YWcpcmV0dXJuIGI7aWYoYi5jaGlsZCliLmNoaWxkLnJldHVybj1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBkYyhhLGIpe2Zvcih2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09Yjspe2lmKGI9PT1hfHxiPT09YylyZXR1cm4hMDtiPWIucmV0dXJufXJldHVybiExfXZhciBlYyxmYyxnYyxoYyxpYz0hMSxqYz1bXSxrYz1udWxsLGxjPW51bGwsbWM9bnVsbCxuYz1uZXcgTWFwLG9jPW5ldyBNYXAscGM9W10scWM9XCJtb3VzZWRvd24gbW91c2V1cCB0b3VjaGNhbmNlbCB0b3VjaGVuZCB0b3VjaHN0YXJ0IGF1eGNsaWNrIGRibGNsaWNrIHBvaW50ZXJjYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlcnVwIGRyYWdlbmQgZHJhZ3N0YXJ0IGRyb3AgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIGlucHV0IHRleHRJbnB1dCBjb3B5IGN1dCBwYXN0ZSBjbGljayBjaGFuZ2UgY29udGV4dG1lbnUgcmVzZXQgc3VibWl0XCIuc3BsaXQoXCIgXCIpO1xuZnVuY3Rpb24gcmMoYSxiLGMsZCxlKXtyZXR1cm57YmxvY2tlZE9uOmEsZG9tRXZlbnROYW1lOmIsZXZlbnRTeXN0ZW1GbGFnczpjfDE2LG5hdGl2ZUV2ZW50OmUsdGFyZ2V0Q29udGFpbmVyczpbZF19fWZ1bmN0aW9uIHNjKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c2luXCI6Y2FzZSBcImZvY3Vzb3V0XCI6a2M9bnVsbDticmVhaztjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmxjPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJtb3VzZW91dFwiOm1jPW51bGw7YnJlYWs7Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpuYy5kZWxldGUoYi5wb2ludGVySWQpO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpvYy5kZWxldGUoYi5wb2ludGVySWQpfX1cbmZ1bmN0aW9uIHRjKGEsYixjLGQsZSxmKXtpZihudWxsPT09YXx8YS5uYXRpdmVFdmVudCE9PWYpcmV0dXJuIGE9cmMoYixjLGQsZSxmKSxudWxsIT09YiYmKGI9Q2IoYiksbnVsbCE9PWImJmZjKGIpKSxhO2EuZXZlbnRTeXN0ZW1GbGFnc3w9ZDtiPWEudGFyZ2V0Q29udGFpbmVycztudWxsIT09ZSYmLTE9PT1iLmluZGV4T2YoZSkmJmIucHVzaChlKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIHVjKGEsYixjLGQsZSl7c3dpdGNoKGIpe2Nhc2UgXCJmb2N1c2luXCI6cmV0dXJuIGtjPXRjKGtjLGEsYixjLGQsZSksITA7Y2FzZSBcImRyYWdlbnRlclwiOnJldHVybiBsYz10YyhsYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJtb3VzZW92ZXJcIjpyZXR1cm4gbWM9dGMobWMsYSxiLGMsZCxlKSwhMDtjYXNlIFwicG9pbnRlcm92ZXJcIjp2YXIgZj1lLnBvaW50ZXJJZDtuYy5zZXQoZix0YyhuYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSk7cmV0dXJuITA7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6cmV0dXJuIGY9ZS5wb2ludGVySWQsb2Muc2V0KGYsdGMob2MuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpLCEwfXJldHVybiExfVxuZnVuY3Rpb24gdmMoYSl7dmFyIGI9d2MoYS50YXJnZXQpO2lmKG51bGwhPT1iKXt2YXIgYz1aYihiKTtpZihudWxsIT09YylpZihiPWMudGFnLDEzPT09Yil7aWYoYj0kYihjKSxudWxsIT09Yil7YS5ibG9ja2VkT249YjtoYyhhLmxhbmVQcmlvcml0eSxmdW5jdGlvbigpe3IudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KGEucHJpb3JpdHksZnVuY3Rpb24oKXtnYyhjKX0pfSk7cmV0dXJufX1lbHNlIGlmKDM9PT1iJiZjLnN0YXRlTm9kZS5oeWRyYXRlKXthLmJsb2NrZWRPbj0zPT09Yy50YWc/Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO3JldHVybn19YS5ibG9ja2VkT249bnVsbH1cbmZ1bmN0aW9uIHhjKGEpe2lmKG51bGwhPT1hLmJsb2NrZWRPbilyZXR1cm4hMTtmb3IodmFyIGI9YS50YXJnZXRDb250YWluZXJzOzA8Yi5sZW5ndGg7KXt2YXIgYz15YyhhLmRvbUV2ZW50TmFtZSxhLmV2ZW50U3lzdGVtRmxhZ3MsYlswXSxhLm5hdGl2ZUV2ZW50KTtpZihudWxsIT09YylyZXR1cm4gYj1DYihjKSxudWxsIT09YiYmZmMoYiksYS5ibG9ja2VkT249YywhMTtiLnNoaWZ0KCl9cmV0dXJuITB9ZnVuY3Rpb24gemMoYSxiLGMpe3hjKGEpJiZjLmRlbGV0ZShiKX1cbmZ1bmN0aW9uIEFjKCl7Zm9yKGljPSExOzA8amMubGVuZ3RoOyl7dmFyIGE9amNbMF07aWYobnVsbCE9PWEuYmxvY2tlZE9uKXthPUNiKGEuYmxvY2tlZE9uKTtudWxsIT09YSYmZWMoYSk7YnJlYWt9Zm9yKHZhciBiPWEudGFyZ2V0Q29udGFpbmVyczswPGIubGVuZ3RoOyl7dmFyIGM9eWMoYS5kb21FdmVudE5hbWUsYS5ldmVudFN5c3RlbUZsYWdzLGJbMF0sYS5uYXRpdmVFdmVudCk7aWYobnVsbCE9PWMpe2EuYmxvY2tlZE9uPWM7YnJlYWt9Yi5zaGlmdCgpfW51bGw9PT1hLmJsb2NrZWRPbiYmamMuc2hpZnQoKX1udWxsIT09a2MmJnhjKGtjKSYmKGtjPW51bGwpO251bGwhPT1sYyYmeGMobGMpJiYobGM9bnVsbCk7bnVsbCE9PW1jJiZ4YyhtYykmJihtYz1udWxsKTtuYy5mb3JFYWNoKHpjKTtvYy5mb3JFYWNoKHpjKX1cbmZ1bmN0aW9uIEJjKGEsYil7YS5ibG9ja2VkT249PT1iJiYoYS5ibG9ja2VkT249bnVsbCxpY3x8KGljPSEwLHIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayhyLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LEFjKSkpfVxuZnVuY3Rpb24gQ2MoYSl7ZnVuY3Rpb24gYihiKXtyZXR1cm4gQmMoYixhKX1pZigwPGpjLmxlbmd0aCl7QmMoamNbMF0sYSk7Zm9yKHZhciBjPTE7YzxqYy5sZW5ndGg7YysrKXt2YXIgZD1qY1tjXTtkLmJsb2NrZWRPbj09PWEmJihkLmJsb2NrZWRPbj1udWxsKX19bnVsbCE9PWtjJiZCYyhrYyxhKTtudWxsIT09bGMmJkJjKGxjLGEpO251bGwhPT1tYyYmQmMobWMsYSk7bmMuZm9yRWFjaChiKTtvYy5mb3JFYWNoKGIpO2ZvcihjPTA7YzxwYy5sZW5ndGg7YysrKWQ9cGNbY10sZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCk7Zm9yKDswPHBjLmxlbmd0aCYmKGM9cGNbMF0sbnVsbD09PWMuYmxvY2tlZE9uKTspdmMoYyksbnVsbD09PWMuYmxvY2tlZE9uJiZwYy5zaGlmdCgpfVxuZnVuY3Rpb24gRGMoYSxiKXt2YXIgYz17fTtjW2EudG9Mb3dlckNhc2UoKV09Yi50b0xvd2VyQ2FzZSgpO2NbXCJXZWJraXRcIithXT1cIndlYmtpdFwiK2I7Y1tcIk1velwiK2FdPVwibW96XCIrYjtyZXR1cm4gY312YXIgRWM9e2FuaW1hdGlvbmVuZDpEYyhcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uRW5kXCIpLGFuaW1hdGlvbml0ZXJhdGlvbjpEYyhcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uSXRlcmF0aW9uXCIpLGFuaW1hdGlvbnN0YXJ0OkRjKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25TdGFydFwiKSx0cmFuc2l0aW9uZW5kOkRjKFwiVHJhbnNpdGlvblwiLFwiVHJhbnNpdGlvbkVuZFwiKX0sRmM9e30sR2M9e307XG5mYSYmKEdjPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGUsXCJBbmltYXRpb25FdmVudFwiaW4gd2luZG93fHwoZGVsZXRlIEVjLmFuaW1hdGlvbmVuZC5hbmltYXRpb24sZGVsZXRlIEVjLmFuaW1hdGlvbml0ZXJhdGlvbi5hbmltYXRpb24sZGVsZXRlIEVjLmFuaW1hdGlvbnN0YXJ0LmFuaW1hdGlvbiksXCJUcmFuc2l0aW9uRXZlbnRcImluIHdpbmRvd3x8ZGVsZXRlIEVjLnRyYW5zaXRpb25lbmQudHJhbnNpdGlvbik7ZnVuY3Rpb24gSGMoYSl7aWYoRmNbYV0pcmV0dXJuIEZjW2FdO2lmKCFFY1thXSlyZXR1cm4gYTt2YXIgYj1FY1thXSxjO2ZvcihjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSYmYyBpbiBHYylyZXR1cm4gRmNbYV09YltjXTtyZXR1cm4gYX1cbnZhciBJYz1IYyhcImFuaW1hdGlvbmVuZFwiKSxKYz1IYyhcImFuaW1hdGlvbml0ZXJhdGlvblwiKSxLYz1IYyhcImFuaW1hdGlvbnN0YXJ0XCIpLExjPUhjKFwidHJhbnNpdGlvbmVuZFwiKSxNYz1uZXcgTWFwLE5jPW5ldyBNYXAsT2M9W1wiYWJvcnRcIixcImFib3J0XCIsSWMsXCJhbmltYXRpb25FbmRcIixKYyxcImFuaW1hdGlvbkl0ZXJhdGlvblwiLEtjLFwiYW5pbWF0aW9uU3RhcnRcIixcImNhbnBsYXlcIixcImNhblBsYXlcIixcImNhbnBsYXl0aHJvdWdoXCIsXCJjYW5QbGF5VGhyb3VnaFwiLFwiZHVyYXRpb25jaGFuZ2VcIixcImR1cmF0aW9uQ2hhbmdlXCIsXCJlbXB0aWVkXCIsXCJlbXB0aWVkXCIsXCJlbmNyeXB0ZWRcIixcImVuY3J5cHRlZFwiLFwiZW5kZWRcIixcImVuZGVkXCIsXCJlcnJvclwiLFwiZXJyb3JcIixcImdvdHBvaW50ZXJjYXB0dXJlXCIsXCJnb3RQb2ludGVyQ2FwdHVyZVwiLFwibG9hZFwiLFwibG9hZFwiLFwibG9hZGVkZGF0YVwiLFwibG9hZGVkRGF0YVwiLFwibG9hZGVkbWV0YWRhdGFcIixcImxvYWRlZE1ldGFkYXRhXCIsXCJsb2Fkc3RhcnRcIixcImxvYWRTdGFydFwiLFxuXCJsb3N0cG9pbnRlcmNhcHR1cmVcIixcImxvc3RQb2ludGVyQ2FwdHVyZVwiLFwicGxheWluZ1wiLFwicGxheWluZ1wiLFwicHJvZ3Jlc3NcIixcInByb2dyZXNzXCIsXCJzZWVraW5nXCIsXCJzZWVraW5nXCIsXCJzdGFsbGVkXCIsXCJzdGFsbGVkXCIsXCJzdXNwZW5kXCIsXCJzdXNwZW5kXCIsXCJ0aW1ldXBkYXRlXCIsXCJ0aW1lVXBkYXRlXCIsTGMsXCJ0cmFuc2l0aW9uRW5kXCIsXCJ3YWl0aW5nXCIsXCJ3YWl0aW5nXCJdO2Z1bmN0aW9uIFBjKGEsYil7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKz0yKXt2YXIgZD1hW2NdLGU9YVtjKzFdO2U9XCJvblwiKyhlWzBdLnRvVXBwZXJDYXNlKCkrZS5zbGljZSgxKSk7TmMuc2V0KGQsYik7TWMuc2V0KGQsZSk7ZGEoZSxbZF0pfX12YXIgUWM9ci51bnN0YWJsZV9ub3c7UWMoKTt2YXIgRj04O1xuZnVuY3Rpb24gUmMoYSl7aWYoMCE9PSgxJmEpKXJldHVybiBGPTE1LDE7aWYoMCE9PSgyJmEpKXJldHVybiBGPTE0LDI7aWYoMCE9PSg0JmEpKXJldHVybiBGPTEzLDQ7dmFyIGI9MjQmYTtpZigwIT09YilyZXR1cm4gRj0xMixiO2lmKDAhPT0oYSYzMikpcmV0dXJuIEY9MTEsMzI7Yj0xOTImYTtpZigwIT09YilyZXR1cm4gRj0xMCxiO2lmKDAhPT0oYSYyNTYpKXJldHVybiBGPTksMjU2O2I9MzU4NCZhO2lmKDAhPT1iKXJldHVybiBGPTgsYjtpZigwIT09KGEmNDA5NikpcmV0dXJuIEY9Nyw0MDk2O2I9NDE4NjExMiZhO2lmKDAhPT1iKXJldHVybiBGPTYsYjtiPTYyOTE0NTYwJmE7aWYoMCE9PWIpcmV0dXJuIEY9NSxiO2lmKGEmNjcxMDg4NjQpcmV0dXJuIEY9NCw2NzEwODg2NDtpZigwIT09KGEmMTM0MjE3NzI4KSlyZXR1cm4gRj0zLDEzNDIxNzcyODtiPTgwNTMwNjM2OCZhO2lmKDAhPT1iKXJldHVybiBGPTIsYjtpZigwIT09KDEwNzM3NDE4MjQmYSkpcmV0dXJuIEY9MSwxMDczNzQxODI0O1xuRj04O3JldHVybiBhfWZ1bmN0aW9uIFNjKGEpe3N3aXRjaChhKXtjYXNlIDk5OnJldHVybiAxNTtjYXNlIDk4OnJldHVybiAxMDtjYXNlIDk3OmNhc2UgOTY6cmV0dXJuIDg7Y2FzZSA5NTpyZXR1cm4gMjtkZWZhdWx0OnJldHVybiAwfX1mdW5jdGlvbiBUYyhhKXtzd2l0Y2goYSl7Y2FzZSAxNTpjYXNlIDE0OnJldHVybiA5OTtjYXNlIDEzOmNhc2UgMTI6Y2FzZSAxMTpjYXNlIDEwOnJldHVybiA5ODtjYXNlIDk6Y2FzZSA4OmNhc2UgNzpjYXNlIDY6Y2FzZSA0OmNhc2UgNTpyZXR1cm4gOTc7Y2FzZSAzOmNhc2UgMjpjYXNlIDE6cmV0dXJuIDk1O2Nhc2UgMDpyZXR1cm4gOTA7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDM1OCxhKSk7fX1cbmZ1bmN0aW9uIFVjKGEsYil7dmFyIGM9YS5wZW5kaW5nTGFuZXM7aWYoMD09PWMpcmV0dXJuIEY9MDt2YXIgZD0wLGU9MCxmPWEuZXhwaXJlZExhbmVzLGc9YS5zdXNwZW5kZWRMYW5lcyxoPWEucGluZ2VkTGFuZXM7aWYoMCE9PWYpZD1mLGU9Rj0xNTtlbHNlIGlmKGY9YyYxMzQyMTc3MjcsMCE9PWYpe3ZhciBrPWYmfmc7MCE9PWs/KGQ9UmMoayksZT1GKTooaCY9ZiwwIT09aCYmKGQ9UmMoaCksZT1GKSl9ZWxzZSBmPWMmfmcsMCE9PWY/KGQ9UmMoZiksZT1GKTowIT09aCYmKGQ9UmMoaCksZT1GKTtpZigwPT09ZClyZXR1cm4gMDtkPTMxLVZjKGQpO2Q9YyYoKDA+ZD8wOjE8PGQpPDwxKS0xO2lmKDAhPT1iJiZiIT09ZCYmMD09PShiJmcpKXtSYyhiKTtpZihlPD1GKXJldHVybiBiO0Y9ZX1iPWEuZW50YW5nbGVkTGFuZXM7aWYoMCE9PWIpZm9yKGE9YS5lbnRhbmdsZW1lbnRzLGImPWQ7MDxiOyljPTMxLVZjKGIpLGU9MTw8YyxkfD1hW2NdLGImPX5lO3JldHVybiBkfVxuZnVuY3Rpb24gV2MoYSl7YT1hLnBlbmRpbmdMYW5lcyYtMTA3Mzc0MTgyNTtyZXR1cm4gMCE9PWE/YTphJjEwNzM3NDE4MjQ/MTA3Mzc0MTgyNDowfWZ1bmN0aW9uIFhjKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTU6cmV0dXJuIDE7Y2FzZSAxNDpyZXR1cm4gMjtjYXNlIDEyOnJldHVybiBhPVljKDI0Jn5iKSwwPT09YT9YYygxMCxiKTphO2Nhc2UgMTA6cmV0dXJuIGE9WWMoMTkyJn5iKSwwPT09YT9YYyg4LGIpOmE7Y2FzZSA4OnJldHVybiBhPVljKDM1ODQmfmIpLDA9PT1hJiYoYT1ZYyg0MTg2MTEyJn5iKSwwPT09YSYmKGE9NTEyKSksYTtjYXNlIDI6cmV0dXJuIGI9WWMoODA1MzA2MzY4Jn5iKSwwPT09YiYmKGI9MjY4NDM1NDU2KSxifXRocm93IEVycm9yKHkoMzU4LGEpKTt9ZnVuY3Rpb24gWWMoYSl7cmV0dXJuIGEmLWF9ZnVuY3Rpb24gWmMoYSl7Zm9yKHZhciBiPVtdLGM9MDszMT5jO2MrKyliLnB1c2goYSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiAkYyhhLGIsYyl7YS5wZW5kaW5nTGFuZXN8PWI7dmFyIGQ9Yi0xO2Euc3VzcGVuZGVkTGFuZXMmPWQ7YS5waW5nZWRMYW5lcyY9ZDthPWEuZXZlbnRUaW1lcztiPTMxLVZjKGIpO2FbYl09Y312YXIgVmM9TWF0aC5jbHozMj9NYXRoLmNsejMyOmFkLGJkPU1hdGgubG9nLGNkPU1hdGguTE4yO2Z1bmN0aW9uIGFkKGEpe3JldHVybiAwPT09YT8zMjozMS0oYmQoYSkvY2R8MCl8MH12YXIgZGQ9ci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxlZD1yLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSxmZD0hMDtmdW5jdGlvbiBnZChhLGIsYyxkKXtLYnx8SWIoKTt2YXIgZT1oZCxmPUtiO0tiPSEwO3RyeXtIYihlLGEsYixjLGQpfWZpbmFsbHl7KEtiPWYpfHxNYigpfX1mdW5jdGlvbiBpZChhLGIsYyxkKXtlZChkZCxoZC5iaW5kKG51bGwsYSxiLGMsZCkpfVxuZnVuY3Rpb24gaGQoYSxiLGMsZCl7aWYoZmQpe3ZhciBlO2lmKChlPTA9PT0oYiY0KSkmJjA8amMubGVuZ3RoJiYtMTxxYy5pbmRleE9mKGEpKWE9cmMobnVsbCxhLGIsYyxkKSxqYy5wdXNoKGEpO2Vsc2V7dmFyIGY9eWMoYSxiLGMsZCk7aWYobnVsbD09PWYpZSYmc2MoYSxkKTtlbHNle2lmKGUpe2lmKC0xPHFjLmluZGV4T2YoYSkpe2E9cmMoZixhLGIsYyxkKTtqYy5wdXNoKGEpO3JldHVybn1pZih1YyhmLGEsYixjLGQpKXJldHVybjtzYyhhLGQpfWpkKGEsYixkLG51bGwsYyl9fX19XG5mdW5jdGlvbiB5YyhhLGIsYyxkKXt2YXIgZT14YihkKTtlPXdjKGUpO2lmKG51bGwhPT1lKXt2YXIgZj1aYihlKTtpZihudWxsPT09ZillPW51bGw7ZWxzZXt2YXIgZz1mLnRhZztpZigxMz09PWcpe2U9JGIoZik7aWYobnVsbCE9PWUpcmV0dXJuIGU7ZT1udWxsfWVsc2UgaWYoMz09PWcpe2lmKGYuc3RhdGVOb2RlLmh5ZHJhdGUpcmV0dXJuIDM9PT1mLnRhZz9mLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7ZT1udWxsfWVsc2UgZiE9PWUmJihlPW51bGwpfX1qZChhLGIsZCxlLGMpO3JldHVybiBudWxsfXZhciBrZD1udWxsLGxkPW51bGwsbWQ9bnVsbDtcbmZ1bmN0aW9uIG5kKCl7aWYobWQpcmV0dXJuIG1kO3ZhciBhLGI9bGQsYz1iLmxlbmd0aCxkLGU9XCJ2YWx1ZVwiaW4ga2Q/a2QudmFsdWU6a2QudGV4dENvbnRlbnQsZj1lLmxlbmd0aDtmb3IoYT0wO2E8YyYmYlthXT09PWVbYV07YSsrKTt2YXIgZz1jLWE7Zm9yKGQ9MTtkPD1nJiZiW2MtZF09PT1lW2YtZF07ZCsrKTtyZXR1cm4gbWQ9ZS5zbGljZShhLDE8ZD8xLWQ6dm9pZCAwKX1mdW5jdGlvbiBvZChhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1mdW5jdGlvbiBwZCgpe3JldHVybiEwfWZ1bmN0aW9uIHFkKCl7cmV0dXJuITF9XG5mdW5jdGlvbiByZChhKXtmdW5jdGlvbiBiKGIsZCxlLGYsZyl7dGhpcy5fcmVhY3ROYW1lPWI7dGhpcy5fdGFyZ2V0SW5zdD1lO3RoaXMudHlwZT1kO3RoaXMubmF0aXZlRXZlbnQ9Zjt0aGlzLnRhcmdldD1nO3RoaXMuY3VycmVudFRhcmdldD1udWxsO2Zvcih2YXIgYyBpbiBhKWEuaGFzT3duUHJvcGVydHkoYykmJihiPWFbY10sdGhpc1tjXT1iP2IoZik6ZltjXSk7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9KG51bGwhPWYuZGVmYXVsdFByZXZlbnRlZD9mLmRlZmF1bHRQcmV2ZW50ZWQ6ITE9PT1mLnJldHVyblZhbHVlKT9wZDpxZDt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXFkO3JldHVybiB0aGlzfW0oYi5wcm90b3R5cGUse3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0UHJldmVudGVkPSEwO3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOlwidW5rbm93blwiIT09dHlwZW9mIGEucmV0dXJuVmFsdWUmJlxuKGEucmV0dXJuVmFsdWU9ITEpLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPXBkKX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5zdG9wUHJvcGFnYXRpb24/YS5zdG9wUHJvcGFnYXRpb24oKTpcInVua25vd25cIiE9PXR5cGVvZiBhLmNhbmNlbEJ1YmJsZSYmKGEuY2FuY2VsQnViYmxlPSEwKSx0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXBkKX0scGVyc2lzdDpmdW5jdGlvbigpe30saXNQZXJzaXN0ZW50OnBkfSk7cmV0dXJuIGJ9XG52YXIgc2Q9e2V2ZW50UGhhc2U6MCxidWJibGVzOjAsY2FuY2VsYWJsZTowLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6MCxpc1RydXN0ZWQ6MH0sdGQ9cmQoc2QpLHVkPW0oe30sc2Qse3ZpZXc6MCxkZXRhaWw6MH0pLHZkPXJkKHVkKSx3ZCx4ZCx5ZCxBZD1tKHt9LHVkLHtzY3JlZW5YOjAsc2NyZWVuWTowLGNsaWVudFg6MCxjbGllbnRZOjAscGFnZVg6MCxwYWdlWTowLGN0cmxLZXk6MCxzaGlmdEtleTowLGFsdEtleTowLG1ldGFLZXk6MCxnZXRNb2RpZmllclN0YXRlOnpkLGJ1dHRvbjowLGJ1dHRvbnM6MCxyZWxhdGVkVGFyZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiB2b2lkIDA9PT1hLnJlbGF0ZWRUYXJnZXQ/YS5mcm9tRWxlbWVudD09PWEuc3JjRWxlbWVudD9hLnRvRWxlbWVudDphLmZyb21FbGVtZW50OmEucmVsYXRlZFRhcmdldH0sbW92ZW1lbnRYOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRYXCJpblxuYSlyZXR1cm4gYS5tb3ZlbWVudFg7YSE9PXlkJiYoeWQmJlwibW91c2Vtb3ZlXCI9PT1hLnR5cGU/KHdkPWEuc2NyZWVuWC15ZC5zY3JlZW5YLHhkPWEuc2NyZWVuWS15ZC5zY3JlZW5ZKTp4ZD13ZD0wLHlkPWEpO3JldHVybiB3ZH0sbW92ZW1lbnRZOmZ1bmN0aW9uKGEpe3JldHVyblwibW92ZW1lbnRZXCJpbiBhP2EubW92ZW1lbnRZOnhkfX0pLEJkPXJkKEFkKSxDZD1tKHt9LEFkLHtkYXRhVHJhbnNmZXI6MH0pLERkPXJkKENkKSxFZD1tKHt9LHVkLHtyZWxhdGVkVGFyZ2V0OjB9KSxGZD1yZChFZCksR2Q9bSh7fSxzZCx7YW5pbWF0aW9uTmFtZTowLGVsYXBzZWRUaW1lOjAscHNldWRvRWxlbWVudDowfSksSGQ9cmQoR2QpLElkPW0oe30sc2Qse2NsaXBib2FyZERhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuXCJjbGlwYm9hcmREYXRhXCJpbiBhP2EuY2xpcGJvYXJkRGF0YTp3aW5kb3cuY2xpcGJvYXJkRGF0YX19KSxKZD1yZChJZCksS2Q9bSh7fSxzZCx7ZGF0YTowfSksTGQ9cmQoS2QpLE1kPXtFc2M6XCJFc2NhcGVcIixcblNwYWNlYmFyOlwiIFwiLExlZnQ6XCJBcnJvd0xlZnRcIixVcDpcIkFycm93VXBcIixSaWdodDpcIkFycm93UmlnaHRcIixEb3duOlwiQXJyb3dEb3duXCIsRGVsOlwiRGVsZXRlXCIsV2luOlwiT1NcIixNZW51OlwiQ29udGV4dE1lbnVcIixBcHBzOlwiQ29udGV4dE1lbnVcIixTY3JvbGw6XCJTY3JvbGxMb2NrXCIsTW96UHJpbnRhYmxlS2V5OlwiVW5pZGVudGlmaWVkXCJ9LE5kPXs4OlwiQmFja3NwYWNlXCIsOTpcIlRhYlwiLDEyOlwiQ2xlYXJcIiwxMzpcIkVudGVyXCIsMTY6XCJTaGlmdFwiLDE3OlwiQ29udHJvbFwiLDE4OlwiQWx0XCIsMTk6XCJQYXVzZVwiLDIwOlwiQ2Fwc0xvY2tcIiwyNzpcIkVzY2FwZVwiLDMyOlwiIFwiLDMzOlwiUGFnZVVwXCIsMzQ6XCJQYWdlRG93blwiLDM1OlwiRW5kXCIsMzY6XCJIb21lXCIsMzc6XCJBcnJvd0xlZnRcIiwzODpcIkFycm93VXBcIiwzOTpcIkFycm93UmlnaHRcIiw0MDpcIkFycm93RG93blwiLDQ1OlwiSW5zZXJ0XCIsNDY6XCJEZWxldGVcIiwxMTI6XCJGMVwiLDExMzpcIkYyXCIsMTE0OlwiRjNcIiwxMTU6XCJGNFwiLDExNjpcIkY1XCIsMTE3OlwiRjZcIiwxMTg6XCJGN1wiLFxuMTE5OlwiRjhcIiwxMjA6XCJGOVwiLDEyMTpcIkYxMFwiLDEyMjpcIkYxMVwiLDEyMzpcIkYxMlwiLDE0NDpcIk51bUxvY2tcIiwxNDU6XCJTY3JvbGxMb2NrXCIsMjI0OlwiTWV0YVwifSxPZD17QWx0OlwiYWx0S2V5XCIsQ29udHJvbDpcImN0cmxLZXlcIixNZXRhOlwibWV0YUtleVwiLFNoaWZ0Olwic2hpZnRLZXlcIn07ZnVuY3Rpb24gUGQoYSl7dmFyIGI9dGhpcy5uYXRpdmVFdmVudDtyZXR1cm4gYi5nZXRNb2RpZmllclN0YXRlP2IuZ2V0TW9kaWZpZXJTdGF0ZShhKTooYT1PZFthXSk/ISFiW2FdOiExfWZ1bmN0aW9uIHpkKCl7cmV0dXJuIFBkfVxudmFyIFFkPW0oe30sdWQse2tleTpmdW5jdGlvbihhKXtpZihhLmtleSl7dmFyIGI9TWRbYS5rZXldfHxhLmtleTtpZihcIlVuaWRlbnRpZmllZFwiIT09YilyZXR1cm4gYn1yZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/KGE9b2QoYSksMTM9PT1hP1wiRW50ZXJcIjpTdHJpbmcuZnJvbUNoYXJDb2RlKGEpKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP05kW2Eua2V5Q29kZV18fFwiVW5pZGVudGlmaWVkXCI6XCJcIn0sY29kZTowLGxvY2F0aW9uOjAsY3RybEtleTowLHNoaWZ0S2V5OjAsYWx0S2V5OjAsbWV0YUtleTowLHJlcGVhdDowLGxvY2FsZTowLGdldE1vZGlmaWVyU3RhdGU6emQsY2hhckNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP29kKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09XG5hLnR5cGU/b2QoYSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH19KSxSZD1yZChRZCksU2Q9bSh7fSxBZCx7cG9pbnRlcklkOjAsd2lkdGg6MCxoZWlnaHQ6MCxwcmVzc3VyZTowLHRhbmdlbnRpYWxQcmVzc3VyZTowLHRpbHRYOjAsdGlsdFk6MCx0d2lzdDowLHBvaW50ZXJUeXBlOjAsaXNQcmltYXJ5OjB9KSxUZD1yZChTZCksVWQ9bSh7fSx1ZCx7dG91Y2hlczowLHRhcmdldFRvdWNoZXM6MCxjaGFuZ2VkVG91Y2hlczowLGFsdEtleTowLG1ldGFLZXk6MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxnZXRNb2RpZmllclN0YXRlOnpkfSksVmQ9cmQoVWQpLFdkPW0oe30sc2Qse3Byb3BlcnR5TmFtZTowLGVsYXBzZWRUaW1lOjAscHNldWRvRWxlbWVudDowfSksWGQ9cmQoV2QpLFlkPW0oe30sQWQse2RlbHRhWDpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWFwiaW4gYT9hLmRlbHRhWDpcIndoZWVsRGVsdGFYXCJpbiBhPy1hLndoZWVsRGVsdGFYOjB9LFxuZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOjAsZGVsdGFNb2RlOjB9KSxaZD1yZChZZCksJGQ9WzksMTMsMjcsMzJdLGFlPWZhJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyxiZT1udWxsO2ZhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJihiZT1kb2N1bWVudC5kb2N1bWVudE1vZGUpO3ZhciBjZT1mYSYmXCJUZXh0RXZlbnRcImluIHdpbmRvdyYmIWJlLGRlPWZhJiYoIWFlfHxiZSYmODxiZSYmMTE+PWJlKSxlZT1TdHJpbmcuZnJvbUNoYXJDb2RlKDMyKSxmZT0hMTtcbmZ1bmN0aW9uIGdlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJrZXl1cFwiOnJldHVybi0xIT09JGQuaW5kZXhPZihiLmtleUNvZGUpO2Nhc2UgXCJrZXlkb3duXCI6cmV0dXJuIDIyOSE9PWIua2V5Q29kZTtjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcImZvY3Vzb3V0XCI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gaGUoYSl7YT1hLmRldGFpbDtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJlwiZGF0YVwiaW4gYT9hLmRhdGE6bnVsbH12YXIgaWU9ITE7ZnVuY3Rpb24gamUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIGhlKGIpO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDMyIT09Yi53aGljaClyZXR1cm4gbnVsbDtmZT0hMDtyZXR1cm4gZWU7Y2FzZSBcInRleHRJbnB1dFwiOnJldHVybiBhPWIuZGF0YSxhPT09ZWUmJmZlP251bGw6YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIGtlKGEsYil7aWYoaWUpcmV0dXJuXCJjb21wb3NpdGlvbmVuZFwiPT09YXx8IWFlJiZnZShhLGIpPyhhPW5kKCksbWQ9bGQ9a2Q9bnVsbCxpZT0hMSxhKTpudWxsO3N3aXRjaChhKXtjYXNlIFwicGFzdGVcIjpyZXR1cm4gbnVsbDtjYXNlIFwia2V5cHJlc3NcIjppZighKGIuY3RybEtleXx8Yi5hbHRLZXl8fGIubWV0YUtleSl8fGIuY3RybEtleSYmYi5hbHRLZXkpe2lmKGIuY2hhciYmMTxiLmNoYXIubGVuZ3RoKXJldHVybiBiLmNoYXI7aWYoYi53aGljaClyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShiLndoaWNoKX1yZXR1cm4gbnVsbDtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gZGUmJlwia29cIiE9PWIubG9jYWxlP251bGw6Yi5kYXRhO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxudmFyIGxlPXtjb2xvcjohMCxkYXRlOiEwLGRhdGV0aW1lOiEwLFwiZGF0ZXRpbWUtbG9jYWxcIjohMCxlbWFpbDohMCxtb250aDohMCxudW1iZXI6ITAscGFzc3dvcmQ6ITAscmFuZ2U6ITAsc2VhcmNoOiEwLHRlbDohMCx0ZXh0OiEwLHRpbWU6ITAsdXJsOiEwLHdlZWs6ITB9O2Z1bmN0aW9uIG1lKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1iPyEhbGVbYS50eXBlXTpcInRleHRhcmVhXCI9PT1iPyEwOiExfWZ1bmN0aW9uIG5lKGEsYixjLGQpe0ViKGQpO2I9b2UoYixcIm9uQ2hhbmdlXCIpOzA8Yi5sZW5ndGgmJihjPW5ldyB0ZChcIm9uQ2hhbmdlXCIsXCJjaGFuZ2VcIixudWxsLGMsZCksYS5wdXNoKHtldmVudDpjLGxpc3RlbmVyczpifSkpfXZhciBwZT1udWxsLHFlPW51bGw7ZnVuY3Rpb24gcmUoYSl7c2UoYSwwKX1mdW5jdGlvbiB0ZShhKXt2YXIgYj11ZShhKTtpZihXYShiKSlyZXR1cm4gYX1cbmZ1bmN0aW9uIHZlKGEsYil7aWYoXCJjaGFuZ2VcIj09PWEpcmV0dXJuIGJ9dmFyIHdlPSExO2lmKGZhKXt2YXIgeGU7aWYoZmEpe3ZhciB5ZT1cIm9uaW5wdXRcImluIGRvY3VtZW50O2lmKCF5ZSl7dmFyIHplPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7emUuc2V0QXR0cmlidXRlKFwib25pbnB1dFwiLFwicmV0dXJuO1wiKTt5ZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgemUub25pbnB1dH14ZT15ZX1lbHNlIHhlPSExO3dlPXhlJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpfWZ1bmN0aW9uIEFlKCl7cGUmJihwZS5kZXRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixCZSkscWU9cGU9bnVsbCl9ZnVuY3Rpb24gQmUoYSl7aWYoXCJ2YWx1ZVwiPT09YS5wcm9wZXJ0eU5hbWUmJnRlKHFlKSl7dmFyIGI9W107bmUoYixxZSxhLHhiKGEpKTthPXJlO2lmKEtiKWEoYik7ZWxzZXtLYj0hMDt0cnl7R2IoYSxiKX1maW5hbGx5e0tiPSExLE1iKCl9fX19XG5mdW5jdGlvbiBDZShhLGIsYyl7XCJmb2N1c2luXCI9PT1hPyhBZSgpLHBlPWIscWU9YyxwZS5hdHRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixCZSkpOlwiZm9jdXNvdXRcIj09PWEmJkFlKCl9ZnVuY3Rpb24gRGUoYSl7aWYoXCJzZWxlY3Rpb25jaGFuZ2VcIj09PWF8fFwia2V5dXBcIj09PWF8fFwia2V5ZG93blwiPT09YSlyZXR1cm4gdGUocWUpfWZ1bmN0aW9uIEVlKGEsYil7aWYoXCJjbGlja1wiPT09YSlyZXR1cm4gdGUoYil9ZnVuY3Rpb24gRmUoYSxiKXtpZihcImlucHV0XCI9PT1hfHxcImNoYW5nZVwiPT09YSlyZXR1cm4gdGUoYil9ZnVuY3Rpb24gR2UoYSxiKXtyZXR1cm4gYT09PWImJigwIT09YXx8MS9hPT09MS9iKXx8YSE9PWEmJmIhPT1ifXZhciBIZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgT2JqZWN0LmlzP09iamVjdC5pczpHZSxJZT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuZnVuY3Rpb24gSmUoYSxiKXtpZihIZShhLGIpKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYXx8bnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYnx8bnVsbD09PWIpcmV0dXJuITE7dmFyIGM9T2JqZWN0LmtleXMoYSksZD1PYmplY3Qua2V5cyhiKTtpZihjLmxlbmd0aCE9PWQubGVuZ3RoKXJldHVybiExO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspaWYoIUllLmNhbGwoYixjW2RdKXx8IUhlKGFbY1tkXV0sYltjW2RdXSkpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24gS2UoYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfVxuZnVuY3Rpb24gTGUoYSxiKXt2YXIgYz1LZShhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz1LZShjKX19ZnVuY3Rpb24gTWUoYSxiKXtyZXR1cm4gYSYmYj9hPT09Yj8hMDphJiYzPT09YS5ub2RlVHlwZT8hMTpiJiYzPT09Yi5ub2RlVHlwZT9NZShhLGIucGFyZW50Tm9kZSk6XCJjb250YWluc1wiaW4gYT9hLmNvbnRhaW5zKGIpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNik6ITE6ITF9XG5mdW5jdGlvbiBOZSgpe2Zvcih2YXIgYT13aW5kb3csYj1YYSgpO2IgaW5zdGFuY2VvZiBhLkhUTUxJRnJhbWVFbGVtZW50Oyl7dHJ5e3ZhciBjPVwic3RyaW5nXCI9PT10eXBlb2YgYi5jb250ZW50V2luZG93LmxvY2F0aW9uLmhyZWZ9Y2F0Y2goZCl7Yz0hMX1pZihjKWE9Yi5jb250ZW50V2luZG93O2Vsc2UgYnJlYWs7Yj1YYShhLmRvY3VtZW50KX1yZXR1cm4gYn1mdW5jdGlvbiBPZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiYoXCJ0ZXh0XCI9PT1hLnR5cGV8fFwic2VhcmNoXCI9PT1hLnR5cGV8fFwidGVsXCI9PT1hLnR5cGV8fFwidXJsXCI9PT1hLnR5cGV8fFwicGFzc3dvcmRcIj09PWEudHlwZSl8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfVxudmFyIFBlPWZhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJjExPj1kb2N1bWVudC5kb2N1bWVudE1vZGUsUWU9bnVsbCxSZT1udWxsLFNlPW51bGwsVGU9ITE7XG5mdW5jdGlvbiBVZShhLGIsYyl7dmFyIGQ9Yy53aW5kb3c9PT1jP2MuZG9jdW1lbnQ6OT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQ7VGV8fG51bGw9PVFlfHxRZSE9PVhhKGQpfHwoZD1RZSxcInNlbGVjdGlvblN0YXJ0XCJpbiBkJiZPZShkKT9kPXtzdGFydDpkLnNlbGVjdGlvblN0YXJ0LGVuZDpkLnNlbGVjdGlvbkVuZH06KGQ9KGQub3duZXJEb2N1bWVudCYmZC5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3fHx3aW5kb3cpLmdldFNlbGVjdGlvbigpLGQ9e2FuY2hvck5vZGU6ZC5hbmNob3JOb2RlLGFuY2hvck9mZnNldDpkLmFuY2hvck9mZnNldCxmb2N1c05vZGU6ZC5mb2N1c05vZGUsZm9jdXNPZmZzZXQ6ZC5mb2N1c09mZnNldH0pLFNlJiZKZShTZSxkKXx8KFNlPWQsZD1vZShSZSxcIm9uU2VsZWN0XCIpLDA8ZC5sZW5ndGgmJihiPW5ldyB0ZChcIm9uU2VsZWN0XCIsXCJzZWxlY3RcIixudWxsLGIsYyksYS5wdXNoKHtldmVudDpiLGxpc3RlbmVyczpkfSksYi50YXJnZXQ9UWUpKSl9XG5QYyhcImNhbmNlbCBjYW5jZWwgY2xpY2sgY2xpY2sgY2xvc2UgY2xvc2UgY29udGV4dG1lbnUgY29udGV4dE1lbnUgY29weSBjb3B5IGN1dCBjdXQgYXV4Y2xpY2sgYXV4Q2xpY2sgZGJsY2xpY2sgZG91YmxlQ2xpY2sgZHJhZ2VuZCBkcmFnRW5kIGRyYWdzdGFydCBkcmFnU3RhcnQgZHJvcCBkcm9wIGZvY3VzaW4gZm9jdXMgZm9jdXNvdXQgYmx1ciBpbnB1dCBpbnB1dCBpbnZhbGlkIGludmFsaWQga2V5ZG93biBrZXlEb3duIGtleXByZXNzIGtleVByZXNzIGtleXVwIGtleVVwIG1vdXNlZG93biBtb3VzZURvd24gbW91c2V1cCBtb3VzZVVwIHBhc3RlIHBhc3RlIHBhdXNlIHBhdXNlIHBsYXkgcGxheSBwb2ludGVyY2FuY2VsIHBvaW50ZXJDYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlckRvd24gcG9pbnRlcnVwIHBvaW50ZXJVcCByYXRlY2hhbmdlIHJhdGVDaGFuZ2UgcmVzZXQgcmVzZXQgc2Vla2VkIHNlZWtlZCBzdWJtaXQgc3VibWl0IHRvdWNoY2FuY2VsIHRvdWNoQ2FuY2VsIHRvdWNoZW5kIHRvdWNoRW5kIHRvdWNoc3RhcnQgdG91Y2hTdGFydCB2b2x1bWVjaGFuZ2Ugdm9sdW1lQ2hhbmdlXCIuc3BsaXQoXCIgXCIpLFxuMCk7UGMoXCJkcmFnIGRyYWcgZHJhZ2VudGVyIGRyYWdFbnRlciBkcmFnZXhpdCBkcmFnRXhpdCBkcmFnbGVhdmUgZHJhZ0xlYXZlIGRyYWdvdmVyIGRyYWdPdmVyIG1vdXNlbW92ZSBtb3VzZU1vdmUgbW91c2VvdXQgbW91c2VPdXQgbW91c2VvdmVyIG1vdXNlT3ZlciBwb2ludGVybW92ZSBwb2ludGVyTW92ZSBwb2ludGVyb3V0IHBvaW50ZXJPdXQgcG9pbnRlcm92ZXIgcG9pbnRlck92ZXIgc2Nyb2xsIHNjcm9sbCB0b2dnbGUgdG9nZ2xlIHRvdWNobW92ZSB0b3VjaE1vdmUgd2hlZWwgd2hlZWxcIi5zcGxpdChcIiBcIiksMSk7UGMoT2MsMik7Zm9yKHZhciBWZT1cImNoYW5nZSBzZWxlY3Rpb25jaGFuZ2UgdGV4dElucHV0IGNvbXBvc2l0aW9uc3RhcnQgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb251cGRhdGVcIi5zcGxpdChcIiBcIiksV2U9MDtXZTxWZS5sZW5ndGg7V2UrKylOYy5zZXQoVmVbV2VdLDApO2VhKFwib25Nb3VzZUVudGVyXCIsW1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXSk7XG5lYShcIm9uTW91c2VMZWF2ZVwiLFtcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl0pO2VhKFwib25Qb2ludGVyRW50ZXJcIixbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXSk7ZWEoXCJvblBvaW50ZXJMZWF2ZVwiLFtcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdKTtkYShcIm9uQ2hhbmdlXCIsXCJjaGFuZ2UgY2xpY2sgZm9jdXNpbiBmb2N1c291dCBpbnB1dCBrZXlkb3duIGtleXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKSk7ZGEoXCJvblNlbGVjdFwiLFwiZm9jdXNvdXQgY29udGV4dG1lbnUgZHJhZ2VuZCBmb2N1c2luIGtleWRvd24ga2V5dXAgbW91c2Vkb3duIG1vdXNldXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpKTtkYShcIm9uQmVmb3JlSW5wdXRcIixbXCJjb21wb3NpdGlvbmVuZFwiLFwia2V5cHJlc3NcIixcInRleHRJbnB1dFwiLFwicGFzdGVcIl0pO2RhKFwib25Db21wb3NpdGlvbkVuZFwiLFwiY29tcG9zaXRpb25lbmQgZm9jdXNvdXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIikpO1xuZGEoXCJvbkNvbXBvc2l0aW9uU3RhcnRcIixcImNvbXBvc2l0aW9uc3RhcnQgZm9jdXNvdXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIikpO2RhKFwib25Db21wb3NpdGlvblVwZGF0ZVwiLFwiY29tcG9zaXRpb251cGRhdGUgZm9jdXNvdXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIikpO3ZhciBYZT1cImFib3J0IGNhbnBsYXkgY2FucGxheXRocm91Z2ggZHVyYXRpb25jaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgbG9hZGVkZGF0YSBsb2FkZWRtZXRhZGF0YSBsb2Fkc3RhcnQgcGF1c2UgcGxheSBwbGF5aW5nIHByb2dyZXNzIHJhdGVjaGFuZ2Ugc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdXNwZW5kIHRpbWV1cGRhdGUgdm9sdW1lY2hhbmdlIHdhaXRpbmdcIi5zcGxpdChcIiBcIiksWWU9bmV3IFNldChcImNhbmNlbCBjbG9zZSBpbnZhbGlkIGxvYWQgc2Nyb2xsIHRvZ2dsZVwiLnNwbGl0KFwiIFwiKS5jb25jYXQoWGUpKTtcbmZ1bmN0aW9uIFplKGEsYixjKXt2YXIgZD1hLnR5cGV8fFwidW5rbm93bi1ldmVudFwiO2EuY3VycmVudFRhcmdldD1jO1liKGQsYix2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9XG5mdW5jdGlvbiBzZShhLGIpe2I9MCE9PShiJjQpO2Zvcih2YXIgYz0wO2M8YS5sZW5ndGg7YysrKXt2YXIgZD1hW2NdLGU9ZC5ldmVudDtkPWQubGlzdGVuZXJzO2E6e3ZhciBmPXZvaWQgMDtpZihiKWZvcih2YXIgZz1kLmxlbmd0aC0xOzA8PWc7Zy0tKXt2YXIgaD1kW2ddLGs9aC5pbnN0YW5jZSxsPWguY3VycmVudFRhcmdldDtoPWgubGlzdGVuZXI7aWYoayE9PWYmJmUuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSlicmVhayBhO1plKGUsaCxsKTtmPWt9ZWxzZSBmb3IoZz0wO2c8ZC5sZW5ndGg7ZysrKXtoPWRbZ107az1oLmluc3RhbmNlO2w9aC5jdXJyZW50VGFyZ2V0O2g9aC5saXN0ZW5lcjtpZihrIT09ZiYmZS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpKWJyZWFrIGE7WmUoZSxoLGwpO2Y9a319fWlmKFViKXRocm93IGE9VmIsVWI9ITEsVmI9bnVsbCxhO31cbmZ1bmN0aW9uIEcoYSxiKXt2YXIgYz0kZShiKSxkPWErXCJfX2J1YmJsZVwiO2MuaGFzKGQpfHwoYWYoYixhLDIsITEpLGMuYWRkKGQpKX12YXIgYmY9XCJfcmVhY3RMaXN0ZW5pbmdcIitNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKTtmdW5jdGlvbiBjZihhKXthW2JmXXx8KGFbYmZdPSEwLGJhLmZvckVhY2goZnVuY3Rpb24oYil7WWUuaGFzKGIpfHxkZihiLCExLGEsbnVsbCk7ZGYoYiwhMCxhLG51bGwpfSkpfVxuZnVuY3Rpb24gZGYoYSxiLGMsZCl7dmFyIGU9NDxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbNF0/YXJndW1lbnRzWzRdOjAsZj1jO1wic2VsZWN0aW9uY2hhbmdlXCI9PT1hJiY5IT09Yy5ub2RlVHlwZSYmKGY9Yy5vd25lckRvY3VtZW50KTtpZihudWxsIT09ZCYmIWImJlllLmhhcyhhKSl7aWYoXCJzY3JvbGxcIiE9PWEpcmV0dXJuO2V8PTI7Zj1kfXZhciBnPSRlKGYpLGg9YStcIl9fXCIrKGI/XCJjYXB0dXJlXCI6XCJidWJibGVcIik7Zy5oYXMoaCl8fChiJiYoZXw9NCksYWYoZixhLGUsYiksZy5hZGQoaCkpfVxuZnVuY3Rpb24gYWYoYSxiLGMsZCl7dmFyIGU9TmMuZ2V0KGIpO3N3aXRjaCh2b2lkIDA9PT1lPzI6ZSl7Y2FzZSAwOmU9Z2Q7YnJlYWs7Y2FzZSAxOmU9aWQ7YnJlYWs7ZGVmYXVsdDplPWhkfWM9ZS5iaW5kKG51bGwsYixjLGEpO2U9dm9pZCAwOyFQYnx8XCJ0b3VjaHN0YXJ0XCIhPT1iJiZcInRvdWNobW92ZVwiIT09YiYmXCJ3aGVlbFwiIT09Ynx8KGU9ITApO2Q/dm9pZCAwIT09ZT9hLmFkZEV2ZW50TGlzdGVuZXIoYixjLHtjYXB0dXJlOiEwLHBhc3NpdmU6ZX0pOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGMsITApOnZvaWQgMCE9PWU/YS5hZGRFdmVudExpc3RlbmVyKGIsYyx7cGFzc2l2ZTplfSk6YS5hZGRFdmVudExpc3RlbmVyKGIsYywhMSl9XG5mdW5jdGlvbiBqZChhLGIsYyxkLGUpe3ZhciBmPWQ7aWYoMD09PShiJjEpJiYwPT09KGImMikmJm51bGwhPT1kKWE6Zm9yKDs7KXtpZihudWxsPT09ZClyZXR1cm47dmFyIGc9ZC50YWc7aWYoMz09PWd8fDQ9PT1nKXt2YXIgaD1kLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2lmKGg9PT1lfHw4PT09aC5ub2RlVHlwZSYmaC5wYXJlbnROb2RlPT09ZSlicmVhaztpZig0PT09Zylmb3IoZz1kLnJldHVybjtudWxsIT09Zzspe3ZhciBrPWcudGFnO2lmKDM9PT1rfHw0PT09aylpZihrPWcuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8saz09PWV8fDg9PT1rLm5vZGVUeXBlJiZrLnBhcmVudE5vZGU9PT1lKXJldHVybjtnPWcucmV0dXJufWZvcig7bnVsbCE9PWg7KXtnPXdjKGgpO2lmKG51bGw9PT1nKXJldHVybjtrPWcudGFnO2lmKDU9PT1rfHw2PT09ayl7ZD1mPWc7Y29udGludWUgYX1oPWgucGFyZW50Tm9kZX19ZD1kLnJldHVybn1OYihmdW5jdGlvbigpe3ZhciBkPWYsZT14YihjKSxnPVtdO1xuYTp7dmFyIGg9TWMuZ2V0KGEpO2lmKHZvaWQgMCE9PWgpe3ZhciBrPXRkLHg9YTtzd2l0Y2goYSl7Y2FzZSBcImtleXByZXNzXCI6aWYoMD09PW9kKGMpKWJyZWFrIGE7Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjprPVJkO2JyZWFrO2Nhc2UgXCJmb2N1c2luXCI6eD1cImZvY3VzXCI7az1GZDticmVhaztjYXNlIFwiZm9jdXNvdXRcIjp4PVwiYmx1clwiO2s9RmQ7YnJlYWs7Y2FzZSBcImJlZm9yZWJsdXJcIjpjYXNlIFwiYWZ0ZXJibHVyXCI6az1GZDticmVhaztjYXNlIFwiY2xpY2tcIjppZigyPT09Yy5idXR0b24pYnJlYWsgYTtjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOms9QmQ7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6az1cbkRkO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOms9VmQ7YnJlYWs7Y2FzZSBJYzpjYXNlIEpjOmNhc2UgS2M6az1IZDticmVhaztjYXNlIExjOms9WGQ7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOms9dmQ7YnJlYWs7Y2FzZSBcIndoZWVsXCI6az1aZDticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjprPUpkO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOms9VGR9dmFyIHc9MCE9PShiJjQpLHo9IXcmJlwic2Nyb2xsXCI9PT1hLHU9dz9udWxsIT09aD9oK1wiQ2FwdHVyZVwiOm51bGw6aDt3PVtdO2Zvcih2YXIgdD1kLHE7bnVsbCE9PVxudDspe3E9dDt2YXIgdj1xLnN0YXRlTm9kZTs1PT09cS50YWcmJm51bGwhPT12JiYocT12LG51bGwhPT11JiYodj1PYih0LHUpLG51bGwhPXYmJncucHVzaChlZih0LHYscSkpKSk7aWYoeilicmVhazt0PXQucmV0dXJufTA8dy5sZW5ndGgmJihoPW5ldyBrKGgseCxudWxsLGMsZSksZy5wdXNoKHtldmVudDpoLGxpc3RlbmVyczp3fSkpfX1pZigwPT09KGImNykpe2E6e2g9XCJtb3VzZW92ZXJcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWE7az1cIm1vdXNlb3V0XCI9PT1hfHxcInBvaW50ZXJvdXRcIj09PWE7aWYoaCYmMD09PShiJjE2KSYmKHg9Yy5yZWxhdGVkVGFyZ2V0fHxjLmZyb21FbGVtZW50KSYmKHdjKHgpfHx4W2ZmXSkpYnJlYWsgYTtpZihrfHxoKXtoPWUud2luZG93PT09ZT9lOihoPWUub3duZXJEb2N1bWVudCk/aC5kZWZhdWx0Vmlld3x8aC5wYXJlbnRXaW5kb3c6d2luZG93O2lmKGspe2lmKHg9Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCxrPWQseD14P3djKHgpOm51bGwsbnVsbCE9PVxueCYmKHo9WmIoeCkseCE9PXp8fDUhPT14LnRhZyYmNiE9PXgudGFnKSl4PW51bGx9ZWxzZSBrPW51bGwseD1kO2lmKGshPT14KXt3PUJkO3Y9XCJvbk1vdXNlTGVhdmVcIjt1PVwib25Nb3VzZUVudGVyXCI7dD1cIm1vdXNlXCI7aWYoXCJwb2ludGVyb3V0XCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hKXc9VGQsdj1cIm9uUG9pbnRlckxlYXZlXCIsdT1cIm9uUG9pbnRlckVudGVyXCIsdD1cInBvaW50ZXJcIjt6PW51bGw9PWs/aDp1ZShrKTtxPW51bGw9PXg/aDp1ZSh4KTtoPW5ldyB3KHYsdCtcImxlYXZlXCIsayxjLGUpO2gudGFyZ2V0PXo7aC5yZWxhdGVkVGFyZ2V0PXE7dj1udWxsO3djKGUpPT09ZCYmKHc9bmV3IHcodSx0K1wiZW50ZXJcIix4LGMsZSksdy50YXJnZXQ9cSx3LnJlbGF0ZWRUYXJnZXQ9eix2PXcpO3o9djtpZihrJiZ4KWI6e3c9azt1PXg7dD0wO2ZvcihxPXc7cTtxPWdmKHEpKXQrKztxPTA7Zm9yKHY9dTt2O3Y9Z2YodikpcSsrO2Zvcig7MDx0LXE7KXc9Z2YodyksdC0tO2Zvcig7MDxxLXQ7KXU9XG5nZih1KSxxLS07Zm9yKDt0LS07KXtpZih3PT09dXx8bnVsbCE9PXUmJnc9PT11LmFsdGVybmF0ZSlicmVhayBiO3c9Z2Yodyk7dT1nZih1KX13PW51bGx9ZWxzZSB3PW51bGw7bnVsbCE9PWsmJmhmKGcsaCxrLHcsITEpO251bGwhPT14JiZudWxsIT09eiYmaGYoZyx6LHgsdywhMCl9fX1hOntoPWQ/dWUoZCk6d2luZG93O2s9aC5ub2RlTmFtZSYmaC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO2lmKFwic2VsZWN0XCI9PT1rfHxcImlucHV0XCI9PT1rJiZcImZpbGVcIj09PWgudHlwZSl2YXIgSj12ZTtlbHNlIGlmKG1lKGgpKWlmKHdlKUo9RmU7ZWxzZXtKPURlO3ZhciBLPUNlfWVsc2Uoaz1oLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09ay50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09aC50eXBlfHxcInJhZGlvXCI9PT1oLnR5cGUpJiYoSj1FZSk7aWYoSiYmKEo9SihhLGQpKSl7bmUoZyxKLGMsZSk7YnJlYWsgYX1LJiZLKGEsaCxkKTtcImZvY3Vzb3V0XCI9PT1hJiYoSz1oLl93cmFwcGVyU3RhdGUpJiZcbksuY29udHJvbGxlZCYmXCJudW1iZXJcIj09PWgudHlwZSYmYmIoaCxcIm51bWJlclwiLGgudmFsdWUpfUs9ZD91ZShkKTp3aW5kb3c7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c2luXCI6aWYobWUoSyl8fFwidHJ1ZVwiPT09Sy5jb250ZW50RWRpdGFibGUpUWU9SyxSZT1kLFNlPW51bGw7YnJlYWs7Y2FzZSBcImZvY3Vzb3V0XCI6U2U9UmU9UWU9bnVsbDticmVhaztjYXNlIFwibW91c2Vkb3duXCI6VGU9ITA7YnJlYWs7Y2FzZSBcImNvbnRleHRtZW51XCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwiZHJhZ2VuZFwiOlRlPSExO1VlKGcsYyxlKTticmVhaztjYXNlIFwic2VsZWN0aW9uY2hhbmdlXCI6aWYoUGUpYnJlYWs7Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjpVZShnLGMsZSl9dmFyIFE7aWYoYWUpYjp7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbnN0YXJ0XCI6dmFyIEw9XCJvbkNvbXBvc2l0aW9uU3RhcnRcIjticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOkw9XCJvbkNvbXBvc2l0aW9uRW5kXCI7YnJlYWsgYjtcbmNhc2UgXCJjb21wb3NpdGlvbnVwZGF0ZVwiOkw9XCJvbkNvbXBvc2l0aW9uVXBkYXRlXCI7YnJlYWsgYn1MPXZvaWQgMH1lbHNlIGllP2dlKGEsYykmJihMPVwib25Db21wb3NpdGlvbkVuZFwiKTpcImtleWRvd25cIj09PWEmJjIyOT09PWMua2V5Q29kZSYmKEw9XCJvbkNvbXBvc2l0aW9uU3RhcnRcIik7TCYmKGRlJiZcImtvXCIhPT1jLmxvY2FsZSYmKGllfHxcIm9uQ29tcG9zaXRpb25TdGFydFwiIT09TD9cIm9uQ29tcG9zaXRpb25FbmRcIj09PUwmJmllJiYoUT1uZCgpKTooa2Q9ZSxsZD1cInZhbHVlXCJpbiBrZD9rZC52YWx1ZTprZC50ZXh0Q29udGVudCxpZT0hMCkpLEs9b2UoZCxMKSwwPEsubGVuZ3RoJiYoTD1uZXcgTGQoTCxhLG51bGwsYyxlKSxnLnB1c2goe2V2ZW50OkwsbGlzdGVuZXJzOkt9KSxRP0wuZGF0YT1ROihRPWhlKGMpLG51bGwhPT1RJiYoTC5kYXRhPVEpKSkpO2lmKFE9Y2U/amUoYSxjKTprZShhLGMpKWQ9b2UoZCxcIm9uQmVmb3JlSW5wdXRcIiksMDxkLmxlbmd0aCYmKGU9bmV3IExkKFwib25CZWZvcmVJbnB1dFwiLFxuXCJiZWZvcmVpbnB1dFwiLG51bGwsYyxlKSxnLnB1c2goe2V2ZW50OmUsbGlzdGVuZXJzOmR9KSxlLmRhdGE9USl9c2UoZyxiKX0pfWZ1bmN0aW9uIGVmKGEsYixjKXtyZXR1cm57aW5zdGFuY2U6YSxsaXN0ZW5lcjpiLGN1cnJlbnRUYXJnZXQ6Y319ZnVuY3Rpb24gb2UoYSxiKXtmb3IodmFyIGM9YitcIkNhcHR1cmVcIixkPVtdO251bGwhPT1hOyl7dmFyIGU9YSxmPWUuc3RhdGVOb2RlOzU9PT1lLnRhZyYmbnVsbCE9PWYmJihlPWYsZj1PYihhLGMpLG51bGwhPWYmJmQudW5zaGlmdChlZihhLGYsZSkpLGY9T2IoYSxiKSxudWxsIT1mJiZkLnB1c2goZWYoYSxmLGUpKSk7YT1hLnJldHVybn1yZXR1cm4gZH1mdW5jdGlvbiBnZihhKXtpZihudWxsPT09YSlyZXR1cm4gbnVsbDtkbyBhPWEucmV0dXJuO3doaWxlKGEmJjUhPT1hLnRhZyk7cmV0dXJuIGE/YTpudWxsfVxuZnVuY3Rpb24gaGYoYSxiLGMsZCxlKXtmb3IodmFyIGY9Yi5fcmVhY3ROYW1lLGc9W107bnVsbCE9PWMmJmMhPT1kOyl7dmFyIGg9YyxrPWguYWx0ZXJuYXRlLGw9aC5zdGF0ZU5vZGU7aWYobnVsbCE9PWsmJms9PT1kKWJyZWFrOzU9PT1oLnRhZyYmbnVsbCE9PWwmJihoPWwsZT8oaz1PYihjLGYpLG51bGwhPWsmJmcudW5zaGlmdChlZihjLGssaCkpKTplfHwoaz1PYihjLGYpLG51bGwhPWsmJmcucHVzaChlZihjLGssaCkpKSk7Yz1jLnJldHVybn0wIT09Zy5sZW5ndGgmJmEucHVzaCh7ZXZlbnQ6YixsaXN0ZW5lcnM6Z30pfWZ1bmN0aW9uIGpmKCl7fXZhciBrZj1udWxsLGxmPW51bGw7ZnVuY3Rpb24gbWYoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImJ1dHRvblwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwidGV4dGFyZWFcIjpyZXR1cm4hIWIuYXV0b0ZvY3VzfXJldHVybiExfVxuZnVuY3Rpb24gbmYoYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcIm9wdGlvblwiPT09YXx8XCJub3NjcmlwdFwiPT09YXx8XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm51bWJlclwiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9PWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwuX19odG1sfXZhciBvZj1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OnZvaWQgMCxwZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDp2b2lkIDA7ZnVuY3Rpb24gcWYoYSl7MT09PWEubm9kZVR5cGU/YS50ZXh0Q29udGVudD1cIlwiOjk9PT1hLm5vZGVUeXBlJiYoYT1hLmJvZHksbnVsbCE9YSYmKGEudGV4dENvbnRlbnQ9XCJcIikpfVxuZnVuY3Rpb24gcmYoYSl7Zm9yKDtudWxsIT1hO2E9YS5uZXh0U2libGluZyl7dmFyIGI9YS5ub2RlVHlwZTtpZigxPT09Ynx8Mz09PWIpYnJlYWt9cmV0dXJuIGF9ZnVuY3Rpb24gc2YoYSl7YT1hLnByZXZpb3VzU2libGluZztmb3IodmFyIGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihcIiRcIj09PWN8fFwiJCFcIj09PWN8fFwiJD9cIj09PWMpe2lmKDA9PT1iKXJldHVybiBhO2ItLX1lbHNlXCIvJFwiPT09YyYmYisrfWE9YS5wcmV2aW91c1NpYmxpbmd9cmV0dXJuIG51bGx9dmFyIHRmPTA7ZnVuY3Rpb24gdWYoYSl7cmV0dXJueyQkdHlwZW9mOkdhLHRvU3RyaW5nOmEsdmFsdWVPZjphfX12YXIgdmY9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiksd2Y9XCJfX3JlYWN0RmliZXIkXCIrdmYseGY9XCJfX3JlYWN0UHJvcHMkXCIrdmYsZmY9XCJfX3JlYWN0Q29udGFpbmVyJFwiK3ZmLHlmPVwiX19yZWFjdEV2ZW50cyRcIit2ZjtcbmZ1bmN0aW9uIHdjKGEpe3ZhciBiPWFbd2ZdO2lmKGIpcmV0dXJuIGI7Zm9yKHZhciBjPWEucGFyZW50Tm9kZTtjOyl7aWYoYj1jW2ZmXXx8Y1t3Zl0pe2M9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWIuY2hpbGR8fG51bGwhPT1jJiZudWxsIT09Yy5jaGlsZClmb3IoYT1zZihhKTtudWxsIT09YTspe2lmKGM9YVt3Zl0pcmV0dXJuIGM7YT1zZihhKX1yZXR1cm4gYn1hPWM7Yz1hLnBhcmVudE5vZGV9cmV0dXJuIG51bGx9ZnVuY3Rpb24gQ2IoYSl7YT1hW3dmXXx8YVtmZl07cmV0dXJuIWF8fDUhPT1hLnRhZyYmNiE9PWEudGFnJiYxMyE9PWEudGFnJiYzIT09YS50YWc/bnVsbDphfWZ1bmN0aW9uIHVlKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhLnN0YXRlTm9kZTt0aHJvdyBFcnJvcih5KDMzKSk7fWZ1bmN0aW9uIERiKGEpe3JldHVybiBhW3hmXXx8bnVsbH1cbmZ1bmN0aW9uICRlKGEpe3ZhciBiPWFbeWZdO3ZvaWQgMD09PWImJihiPWFbeWZdPW5ldyBTZXQpO3JldHVybiBifXZhciB6Zj1bXSxBZj0tMTtmdW5jdGlvbiBCZihhKXtyZXR1cm57Y3VycmVudDphfX1mdW5jdGlvbiBIKGEpezA+QWZ8fChhLmN1cnJlbnQ9emZbQWZdLHpmW0FmXT1udWxsLEFmLS0pfWZ1bmN0aW9uIEkoYSxiKXtBZisrO3pmW0FmXT1hLmN1cnJlbnQ7YS5jdXJyZW50PWJ9dmFyIENmPXt9LE09QmYoQ2YpLE49QmYoITEpLERmPUNmO1xuZnVuY3Rpb24gRWYoYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBDZjt2YXIgZD1hLnN0YXRlTm9kZTtpZihkJiZkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9PT1iKXJldHVybiBkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0O3ZhciBlPXt9LGY7Zm9yKGYgaW4gYyllW2ZdPWJbZl07ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWIsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1lKTtyZXR1cm4gZX1mdW5jdGlvbiBGZihhKXthPWEuY2hpbGRDb250ZXh0VHlwZXM7cmV0dXJuIG51bGwhPT1hJiZ2b2lkIDAhPT1hfWZ1bmN0aW9uIEdmKCl7SChOKTtIKE0pfWZ1bmN0aW9uIEhmKGEsYixjKXtpZihNLmN1cnJlbnQhPT1DZil0aHJvdyBFcnJvcih5KDE2OCkpO0koTSxiKTtJKE4sYyl9XG5mdW5jdGlvbiBJZihhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7YT1iLmNoaWxkQ29udGV4dFR5cGVzO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmdldENoaWxkQ29udGV4dClyZXR1cm4gYztkPWQuZ2V0Q2hpbGRDb250ZXh0KCk7Zm9yKHZhciBlIGluIGQpaWYoIShlIGluIGEpKXRocm93IEVycm9yKHkoMTA4LFJhKGIpfHxcIlVua25vd25cIixlKSk7cmV0dXJuIG0oe30sYyxkKX1mdW5jdGlvbiBKZihhKXthPShhPWEuc3RhdGVOb2RlKSYmYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dHx8Q2Y7RGY9TS5jdXJyZW50O0koTSxhKTtJKE4sTi5jdXJyZW50KTtyZXR1cm4hMH1mdW5jdGlvbiBLZihhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoIWQpdGhyb3cgRXJyb3IoeSgxNjkpKTtjPyhhPUlmKGEsYixEZiksZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1hLEgoTiksSChNKSxJKE0sYSkpOkgoTik7SShOLGMpfVxudmFyIExmPW51bGwsTWY9bnVsbCxOZj1yLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSxPZj1yLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2ssUGY9ci51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayxRZj1yLnVuc3RhYmxlX3Nob3VsZFlpZWxkLFJmPXIudW5zdGFibGVfcmVxdWVzdFBhaW50LFNmPXIudW5zdGFibGVfbm93LFRmPXIudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwsVWY9ci51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSxWZj1yLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LFdmPXIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksWGY9ci51bnN0YWJsZV9Mb3dQcmlvcml0eSxZZj1yLnVuc3RhYmxlX0lkbGVQcmlvcml0eSxaZj17fSwkZj12b2lkIDAhPT1SZj9SZjpmdW5jdGlvbigpe30sYWc9bnVsbCxiZz1udWxsLGNnPSExLGRnPVNmKCksTz0xRTQ+ZGc/U2Y6ZnVuY3Rpb24oKXtyZXR1cm4gU2YoKS1kZ307XG5mdW5jdGlvbiBlZygpe3N3aXRjaChUZigpKXtjYXNlIFVmOnJldHVybiA5OTtjYXNlIFZmOnJldHVybiA5ODtjYXNlIFdmOnJldHVybiA5NztjYXNlIFhmOnJldHVybiA5NjtjYXNlIFlmOnJldHVybiA5NTtkZWZhdWx0OnRocm93IEVycm9yKHkoMzMyKSk7fX1mdW5jdGlvbiBmZyhhKXtzd2l0Y2goYSl7Y2FzZSA5OTpyZXR1cm4gVWY7Y2FzZSA5ODpyZXR1cm4gVmY7Y2FzZSA5NzpyZXR1cm4gV2Y7Y2FzZSA5NjpyZXR1cm4gWGY7Y2FzZSA5NTpyZXR1cm4gWWY7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDMzMikpO319ZnVuY3Rpb24gZ2coYSxiKXthPWZnKGEpO3JldHVybiBOZihhLGIpfWZ1bmN0aW9uIGhnKGEsYixjKXthPWZnKGEpO3JldHVybiBPZihhLGIsYyl9ZnVuY3Rpb24gaWcoKXtpZihudWxsIT09Ymcpe3ZhciBhPWJnO2JnPW51bGw7UGYoYSl9amcoKX1cbmZ1bmN0aW9uIGpnKCl7aWYoIWNnJiZudWxsIT09YWcpe2NnPSEwO3ZhciBhPTA7dHJ5e3ZhciBiPWFnO2dnKDk5LGZ1bmN0aW9uKCl7Zm9yKDthPGIubGVuZ3RoO2ErKyl7dmFyIGM9YlthXTtkbyBjPWMoITApO3doaWxlKG51bGwhPT1jKX19KTthZz1udWxsfWNhdGNoKGMpe3Rocm93IG51bGwhPT1hZyYmKGFnPWFnLnNsaWNlKGErMSkpLE9mKFVmLGlnKSxjO31maW5hbGx5e2NnPSExfX19dmFyIGtnPXJhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnO2Z1bmN0aW9uIGxnKGEsYil7aWYoYSYmYS5kZWZhdWx0UHJvcHMpe2I9bSh7fSxiKTthPWEuZGVmYXVsdFByb3BzO2Zvcih2YXIgYyBpbiBhKXZvaWQgMD09PWJbY10mJihiW2NdPWFbY10pO3JldHVybiBifXJldHVybiBifXZhciBtZz1CZihudWxsKSxuZz1udWxsLG9nPW51bGwscGc9bnVsbDtmdW5jdGlvbiBxZygpe3BnPW9nPW5nPW51bGx9XG5mdW5jdGlvbiByZyhhKXt2YXIgYj1tZy5jdXJyZW50O0gobWcpO2EudHlwZS5fY29udGV4dC5fY3VycmVudFZhbHVlPWJ9ZnVuY3Rpb24gc2coYSxiKXtmb3IoO251bGwhPT1hOyl7dmFyIGM9YS5hbHRlcm5hdGU7aWYoKGEuY2hpbGRMYW5lcyZiKT09PWIpaWYobnVsbD09PWN8fChjLmNoaWxkTGFuZXMmYik9PT1iKWJyZWFrO2Vsc2UgYy5jaGlsZExhbmVzfD1iO2Vsc2UgYS5jaGlsZExhbmVzfD1iLG51bGwhPT1jJiYoYy5jaGlsZExhbmVzfD1iKTthPWEucmV0dXJufX1mdW5jdGlvbiB0ZyhhLGIpe25nPWE7cGc9b2c9bnVsbDthPWEuZGVwZW5kZW5jaWVzO251bGwhPT1hJiZudWxsIT09YS5maXJzdENvbnRleHQmJigwIT09KGEubGFuZXMmYikmJih1Zz0hMCksYS5maXJzdENvbnRleHQ9bnVsbCl9XG5mdW5jdGlvbiB2ZyhhLGIpe2lmKHBnIT09YSYmITEhPT1iJiYwIT09Yil7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBifHwxMDczNzQxODIzPT09YilwZz1hLGI9MTA3Mzc0MTgyMztiPXtjb250ZXh0OmEsb2JzZXJ2ZWRCaXRzOmIsbmV4dDpudWxsfTtpZihudWxsPT09b2cpe2lmKG51bGw9PT1uZyl0aHJvdyBFcnJvcih5KDMwOCkpO29nPWI7bmcuZGVwZW5kZW5jaWVzPXtsYW5lczowLGZpcnN0Q29udGV4dDpiLHJlc3BvbmRlcnM6bnVsbH19ZWxzZSBvZz1vZy5uZXh0PWJ9cmV0dXJuIGEuX2N1cnJlbnRWYWx1ZX12YXIgd2c9ITE7ZnVuY3Rpb24geGcoYSl7YS51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEubWVtb2l6ZWRTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6bnVsbCxsYXN0QmFzZVVwZGF0ZTpudWxsLHNoYXJlZDp7cGVuZGluZzpudWxsfSxlZmZlY3RzOm51bGx9fVxuZnVuY3Rpb24geWcoYSxiKXthPWEudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT09PWEmJihiLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6YS5iYXNlU3RhdGUsZmlyc3RCYXNlVXBkYXRlOmEuZmlyc3RCYXNlVXBkYXRlLGxhc3RCYXNlVXBkYXRlOmEubGFzdEJhc2VVcGRhdGUsc2hhcmVkOmEuc2hhcmVkLGVmZmVjdHM6YS5lZmZlY3RzfSl9ZnVuY3Rpb24gemcoYSxiKXtyZXR1cm57ZXZlbnRUaW1lOmEsbGFuZTpiLHRhZzowLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbH19ZnVuY3Rpb24gQWcoYSxiKXthPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWEpe2E9YS5zaGFyZWQ7dmFyIGM9YS5wZW5kaW5nO251bGw9PT1jP2IubmV4dD1iOihiLm5leHQ9Yy5uZXh0LGMubmV4dD1iKTthLnBlbmRpbmc9Yn19XG5mdW5jdGlvbiBCZyhhLGIpe3ZhciBjPWEudXBkYXRlUXVldWUsZD1hLmFsdGVybmF0ZTtpZihudWxsIT09ZCYmKGQ9ZC51cGRhdGVRdWV1ZSxjPT09ZCkpe3ZhciBlPW51bGwsZj1udWxsO2M9Yy5maXJzdEJhc2VVcGRhdGU7aWYobnVsbCE9PWMpe2Rve3ZhciBnPXtldmVudFRpbWU6Yy5ldmVudFRpbWUsbGFuZTpjLmxhbmUsdGFnOmMudGFnLHBheWxvYWQ6Yy5wYXlsb2FkLGNhbGxiYWNrOmMuY2FsbGJhY2ssbmV4dDpudWxsfTtudWxsPT09Zj9lPWY9ZzpmPWYubmV4dD1nO2M9Yy5uZXh0fXdoaWxlKG51bGwhPT1jKTtudWxsPT09Zj9lPWY9YjpmPWYubmV4dD1ifWVsc2UgZT1mPWI7Yz17YmFzZVN0YXRlOmQuYmFzZVN0YXRlLGZpcnN0QmFzZVVwZGF0ZTplLGxhc3RCYXNlVXBkYXRlOmYsc2hhcmVkOmQuc2hhcmVkLGVmZmVjdHM6ZC5lZmZlY3RzfTthLnVwZGF0ZVF1ZXVlPWM7cmV0dXJufWE9Yy5sYXN0QmFzZVVwZGF0ZTtudWxsPT09YT9jLmZpcnN0QmFzZVVwZGF0ZT1iOmEubmV4dD1cbmI7Yy5sYXN0QmFzZVVwZGF0ZT1ifVxuZnVuY3Rpb24gQ2coYSxiLGMsZCl7dmFyIGU9YS51cGRhdGVRdWV1ZTt3Zz0hMTt2YXIgZj1lLmZpcnN0QmFzZVVwZGF0ZSxnPWUubGFzdEJhc2VVcGRhdGUsaD1lLnNoYXJlZC5wZW5kaW5nO2lmKG51bGwhPT1oKXtlLnNoYXJlZC5wZW5kaW5nPW51bGw7dmFyIGs9aCxsPWsubmV4dDtrLm5leHQ9bnVsbDtudWxsPT09Zz9mPWw6Zy5uZXh0PWw7Zz1rO3ZhciBuPWEuYWx0ZXJuYXRlO2lmKG51bGwhPT1uKXtuPW4udXBkYXRlUXVldWU7dmFyIEE9bi5sYXN0QmFzZVVwZGF0ZTtBIT09ZyYmKG51bGw9PT1BP24uZmlyc3RCYXNlVXBkYXRlPWw6QS5uZXh0PWwsbi5sYXN0QmFzZVVwZGF0ZT1rKX19aWYobnVsbCE9PWYpe0E9ZS5iYXNlU3RhdGU7Zz0wO249bD1rPW51bGw7ZG97aD1mLmxhbmU7dmFyIHA9Zi5ldmVudFRpbWU7aWYoKGQmaCk9PT1oKXtudWxsIT09biYmKG49bi5uZXh0PXtldmVudFRpbWU6cCxsYW5lOjAsdGFnOmYudGFnLHBheWxvYWQ6Zi5wYXlsb2FkLGNhbGxiYWNrOmYuY2FsbGJhY2ssXG5uZXh0Om51bGx9KTthOnt2YXIgQz1hLHg9ZjtoPWI7cD1jO3N3aXRjaCh4LnRhZyl7Y2FzZSAxOkM9eC5wYXlsb2FkO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBDKXtBPUMuY2FsbChwLEEsaCk7YnJlYWsgYX1BPUM7YnJlYWsgYTtjYXNlIDM6Qy5mbGFncz1DLmZsYWdzJi00MDk3fDY0O2Nhc2UgMDpDPXgucGF5bG9hZDtoPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBDP0MuY2FsbChwLEEsaCk6QztpZihudWxsPT09aHx8dm9pZCAwPT09aClicmVhayBhO0E9bSh7fSxBLGgpO2JyZWFrIGE7Y2FzZSAyOndnPSEwfX1udWxsIT09Zi5jYWxsYmFjayYmKGEuZmxhZ3N8PTMyLGg9ZS5lZmZlY3RzLG51bGw9PT1oP2UuZWZmZWN0cz1bZl06aC5wdXNoKGYpKX1lbHNlIHA9e2V2ZW50VGltZTpwLGxhbmU6aCx0YWc6Zi50YWcscGF5bG9hZDpmLnBheWxvYWQsY2FsbGJhY2s6Zi5jYWxsYmFjayxuZXh0Om51bGx9LG51bGw9PT1uPyhsPW49cCxrPUEpOm49bi5uZXh0PXAsZ3w9aDtmPWYubmV4dDtpZihudWxsPT09XG5mKWlmKGg9ZS5zaGFyZWQucGVuZGluZyxudWxsPT09aClicmVhaztlbHNlIGY9aC5uZXh0LGgubmV4dD1udWxsLGUubGFzdEJhc2VVcGRhdGU9aCxlLnNoYXJlZC5wZW5kaW5nPW51bGx9d2hpbGUoMSk7bnVsbD09PW4mJihrPUEpO2UuYmFzZVN0YXRlPWs7ZS5maXJzdEJhc2VVcGRhdGU9bDtlLmxhc3RCYXNlVXBkYXRlPW47RGd8PWc7YS5sYW5lcz1nO2EubWVtb2l6ZWRTdGF0ZT1BfX1mdW5jdGlvbiBFZyhhLGIsYyl7YT1iLmVmZmVjdHM7Yi5lZmZlY3RzPW51bGw7aWYobnVsbCE9PWEpZm9yKGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGQ9YVtiXSxlPWQuY2FsbGJhY2s7aWYobnVsbCE9PWUpe2QuY2FsbGJhY2s9bnVsbDtkPWM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGUpdGhyb3cgRXJyb3IoeSgxOTEsZSkpO2UuY2FsbChkKX19fXZhciBGZz0obmV3IGFhLkNvbXBvbmVudCkucmVmcztcbmZ1bmN0aW9uIEdnKGEsYixjLGQpe2I9YS5tZW1vaXplZFN0YXRlO2M9YyhkLGIpO2M9bnVsbD09PWN8fHZvaWQgMD09PWM/YjptKHt9LGIsYyk7YS5tZW1vaXplZFN0YXRlPWM7MD09PWEubGFuZXMmJihhLnVwZGF0ZVF1ZXVlLmJhc2VTdGF0ZT1jKX1cbnZhciBLZz17aXNNb3VudGVkOmZ1bmN0aW9uKGEpe3JldHVybihhPWEuX3JlYWN0SW50ZXJuYWxzKT9aYihhKT09PWE6ITF9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsczt2YXIgZD1IZygpLGU9SWcoYSksZj16ZyhkLGUpO2YucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZi5jYWxsYmFjaz1jKTtBZyhhLGYpO0pnKGEsZSxkKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsczt2YXIgZD1IZygpLGU9SWcoYSksZj16ZyhkLGUpO2YudGFnPTE7Zi5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihmLmNhbGxiYWNrPWMpO0FnKGEsZik7SmcoYSxlLGQpfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oYSxiKXthPWEuX3JlYWN0SW50ZXJuYWxzO3ZhciBjPUhnKCksZD1JZyhhKSxlPXpnKGMsZCk7ZS50YWc9Mjt2b2lkIDAhPT1iJiZudWxsIT09YiYmKGUuY2FsbGJhY2s9XG5iKTtBZyhhLGUpO0pnKGEsZCxjKX19O2Z1bmN0aW9uIExnKGEsYixjLGQsZSxmLGcpe2E9YS5zdGF0ZU5vZGU7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuc2hvdWxkQ29tcG9uZW50VXBkYXRlP2Euc2hvdWxkQ29tcG9uZW50VXBkYXRlKGQsZixnKTpiLnByb3RvdHlwZSYmYi5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQ/IUplKGMsZCl8fCFKZShlLGYpOiEwfVxuZnVuY3Rpb24gTWcoYSxiLGMpe3ZhciBkPSExLGU9Q2Y7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2Y9dmcoZik6KGU9RmYoYik/RGY6TS5jdXJyZW50LGQ9Yi5jb250ZXh0VHlwZXMsZj0oZD1udWxsIT09ZCYmdm9pZCAwIT09ZCk/RWYoYSxlKTpDZik7Yj1uZXcgYihjLGYpO2EubWVtb2l6ZWRTdGF0ZT1udWxsIT09Yi5zdGF0ZSYmdm9pZCAwIT09Yi5zdGF0ZT9iLnN0YXRlOm51bGw7Yi51cGRhdGVyPUtnO2Euc3RhdGVOb2RlPWI7Yi5fcmVhY3RJbnRlcm5hbHM9YTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWYpO3JldHVybiBifVxuZnVuY3Rpb24gTmcoYSxiLGMsZCl7YT1iLnN0YXRlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7Yi5zdGF0ZSE9PWEmJktnLmVucXVldWVSZXBsYWNlU3RhdGUoYixiLnN0YXRlLG51bGwpfVxuZnVuY3Rpb24gT2coYSxiLGMsZCl7dmFyIGU9YS5zdGF0ZU5vZGU7ZS5wcm9wcz1jO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2UucmVmcz1GZzt4ZyhhKTt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/ZS5jb250ZXh0PXZnKGYpOihmPUZmKGIpP0RmOk0uY3VycmVudCxlLmNvbnRleHQ9RWYoYSxmKSk7Q2coYSxjLGUsZCk7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7Zj1iLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmKEdnKGEsYixmLGMpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHN8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnR8fFxuKGI9ZS5zdGF0ZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnQmJmUuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCksYiE9PWUuc3RhdGUmJktnLmVucXVldWVSZXBsYWNlU3RhdGUoZSxlLnN0YXRlLG51bGwpLENnKGEsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnREaWRNb3VudCYmKGEuZmxhZ3N8PTQpfXZhciBQZz1BcnJheS5pc0FycmF5O1xuZnVuY3Rpb24gUWcoYSxiLGMpe2E9Yy5yZWY7aWYobnVsbCE9PWEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZcIm9iamVjdFwiIT09dHlwZW9mIGEpe2lmKGMuX293bmVyKXtjPWMuX293bmVyO2lmKGMpe2lmKDEhPT1jLnRhZyl0aHJvdyBFcnJvcih5KDMwOSkpO3ZhciBkPWMuc3RhdGVOb2RlfWlmKCFkKXRocm93IEVycm9yKHkoMTQ3LGEpKTt2YXIgZT1cIlwiK2E7aWYobnVsbCE9PWImJm51bGwhPT1iLnJlZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGIucmVmJiZiLnJlZi5fc3RyaW5nUmVmPT09ZSlyZXR1cm4gYi5yZWY7Yj1mdW5jdGlvbihhKXt2YXIgYj1kLnJlZnM7Yj09PUZnJiYoYj1kLnJlZnM9e30pO251bGw9PT1hP2RlbGV0ZSBiW2VdOmJbZV09YX07Yi5fc3RyaW5nUmVmPWU7cmV0dXJuIGJ9aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBhKXRocm93IEVycm9yKHkoMjg0KSk7aWYoIWMuX293bmVyKXRocm93IEVycm9yKHkoMjkwLGEpKTt9cmV0dXJuIGF9XG5mdW5jdGlvbiBSZyhhLGIpe2lmKFwidGV4dGFyZWFcIiE9PWEudHlwZSl0aHJvdyBFcnJvcih5KDMxLFwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYik/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhiKS5qb2luKFwiLCBcIikrXCJ9XCI6YikpO31cbmZ1bmN0aW9uIFNnKGEpe2Z1bmN0aW9uIGIoYixjKXtpZihhKXt2YXIgZD1iLmxhc3RFZmZlY3Q7bnVsbCE9PWQ/KGQubmV4dEVmZmVjdD1jLGIubGFzdEVmZmVjdD1jKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1jO2MubmV4dEVmZmVjdD1udWxsO2MuZmxhZ3M9OH19ZnVuY3Rpb24gYyhjLGQpe2lmKCFhKXJldHVybiBudWxsO2Zvcig7bnVsbCE9PWQ7KWIoYyxkKSxkPWQuc2libGluZztyZXR1cm4gbnVsbH1mdW5jdGlvbiBkKGEsYil7Zm9yKGE9bmV3IE1hcDtudWxsIT09YjspbnVsbCE9PWIua2V5P2Euc2V0KGIua2V5LGIpOmEuc2V0KGIuaW5kZXgsYiksYj1iLnNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gZShhLGIpe2E9VGcoYSxiKTthLmluZGV4PTA7YS5zaWJsaW5nPW51bGw7cmV0dXJuIGF9ZnVuY3Rpb24gZihiLGMsZCl7Yi5pbmRleD1kO2lmKCFhKXJldHVybiBjO2Q9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWQpcmV0dXJuIGQ9ZC5pbmRleCxkPGM/KGIuZmxhZ3M9MixcbmMpOmQ7Yi5mbGFncz0yO3JldHVybiBjfWZ1bmN0aW9uIGcoYil7YSYmbnVsbD09PWIuYWx0ZXJuYXRlJiYoYi5mbGFncz0yKTtyZXR1cm4gYn1mdW5jdGlvbiBoKGEsYixjLGQpe2lmKG51bGw9PT1ifHw2IT09Yi50YWcpcmV0dXJuIGI9VWcoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gayhhLGIsYyxkKXtpZihudWxsIT09YiYmYi5lbGVtZW50VHlwZT09PWMudHlwZSlyZXR1cm4gZD1lKGIsYy5wcm9wcyksZC5yZWY9UWcoYSxiLGMpLGQucmV0dXJuPWEsZDtkPVZnKGMudHlwZSxjLmtleSxjLnByb3BzLG51bGwsYS5tb2RlLGQpO2QucmVmPVFnKGEsYixjKTtkLnJldHVybj1hO3JldHVybiBkfWZ1bmN0aW9uIGwoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDQhPT1iLnRhZ3x8Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PWMuY29udGFpbmVySW5mb3x8Yi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT1jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPVxuV2coYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMuY2hpbGRyZW58fFtdKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIG4oYSxiLGMsZCxmKXtpZihudWxsPT09Ynx8NyE9PWIudGFnKXJldHVybiBiPVhnKGMsYS5tb2RlLGQsZiksYi5yZXR1cm49YSxiO2I9ZShiLGMpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gQShhLGIsYyl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBifHxcIm51bWJlclwiPT09dHlwZW9mIGIpcmV0dXJuIGI9VWcoXCJcIitiLGEubW9kZSxjKSxiLnJldHVybj1hLGI7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09Yil7c3dpdGNoKGIuJCR0eXBlb2Ype2Nhc2Ugc2E6cmV0dXJuIGM9VmcoYi50eXBlLGIua2V5LGIucHJvcHMsbnVsbCxhLm1vZGUsYyksYy5yZWY9UWcoYSxudWxsLGIpLGMucmV0dXJuPWEsYztjYXNlIHRhOnJldHVybiBiPVdnKGIsYS5tb2RlLGMpLGIucmV0dXJuPWEsYn1pZihQZyhiKXx8TGEoYikpcmV0dXJuIGI9WGcoYixcbmEubW9kZSxjLG51bGwpLGIucmV0dXJuPWEsYjtSZyhhLGIpfXJldHVybiBudWxsfWZ1bmN0aW9uIHAoYSxiLGMsZCl7dmFyIGU9bnVsbCE9PWI/Yi5rZXk6bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGN8fFwibnVtYmVyXCI9PT10eXBlb2YgYylyZXR1cm4gbnVsbCE9PWU/bnVsbDpoKGEsYixcIlwiK2MsZCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7c3dpdGNoKGMuJCR0eXBlb2Ype2Nhc2Ugc2E6cmV0dXJuIGMua2V5PT09ZT9jLnR5cGU9PT11YT9uKGEsYixjLnByb3BzLmNoaWxkcmVuLGQsZSk6ayhhLGIsYyxkKTpudWxsO2Nhc2UgdGE6cmV0dXJuIGMua2V5PT09ZT9sKGEsYixjLGQpOm51bGx9aWYoUGcoYyl8fExhKGMpKXJldHVybiBudWxsIT09ZT9udWxsOm4oYSxiLGMsZCxudWxsKTtSZyhhLGMpfXJldHVybiBudWxsfWZ1bmN0aW9uIEMoYSxiLGMsZCxlKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGR8fFwibnVtYmVyXCI9PT10eXBlb2YgZClyZXR1cm4gYT1hLmdldChjKXx8XG5udWxsLGgoYixhLFwiXCIrZCxlKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kKXtzd2l0Y2goZC4kJHR5cGVvZil7Y2FzZSBzYTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsZC50eXBlPT09dWE/bihiLGEsZC5wcm9wcy5jaGlsZHJlbixlLGQua2V5KTprKGIsYSxkLGUpO2Nhc2UgdGE6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGwoYixhLGQsZSl9aWYoUGcoZCl8fExhKGQpKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLG4oYixhLGQsZSxudWxsKTtSZyhiLGQpfXJldHVybiBudWxsfWZ1bmN0aW9uIHgoZSxnLGgsayl7Zm9yKHZhciBsPW51bGwsdD1udWxsLHU9Zyx6PWc9MCxxPW51bGw7bnVsbCE9PXUmJno8aC5sZW5ndGg7eisrKXt1LmluZGV4Pno/KHE9dSx1PW51bGwpOnE9dS5zaWJsaW5nO3ZhciBuPXAoZSx1LGhbel0sayk7aWYobnVsbD09PW4pe251bGw9PT11JiYodT1xKTticmVha31hJiZ1JiZudWxsPT09XG5uLmFsdGVybmF0ZSYmYihlLHUpO2c9ZihuLGcseik7bnVsbD09PXQ/bD1uOnQuc2libGluZz1uO3Q9bjt1PXF9aWYoej09PWgubGVuZ3RoKXJldHVybiBjKGUsdSksbDtpZihudWxsPT09dSl7Zm9yKDt6PGgubGVuZ3RoO3orKyl1PUEoZSxoW3pdLGspLG51bGwhPT11JiYoZz1mKHUsZyx6KSxudWxsPT09dD9sPXU6dC5zaWJsaW5nPXUsdD11KTtyZXR1cm4gbH1mb3IodT1kKGUsdSk7ejxoLmxlbmd0aDt6KyspcT1DKHUsZSx6LGhbel0sayksbnVsbCE9PXEmJihhJiZudWxsIT09cS5hbHRlcm5hdGUmJnUuZGVsZXRlKG51bGw9PT1xLmtleT96OnEua2V5KSxnPWYocSxnLHopLG51bGw9PT10P2w9cTp0LnNpYmxpbmc9cSx0PXEpO2EmJnUuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9ZnVuY3Rpb24gdyhlLGcsaCxrKXt2YXIgbD1MYShoKTtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgbCl0aHJvdyBFcnJvcih5KDE1MCkpO2g9bC5jYWxsKGgpO2lmKG51bGw9PVxuaCl0aHJvdyBFcnJvcih5KDE1MSkpO2Zvcih2YXIgdD1sPW51bGwsdT1nLHo9Zz0wLHE9bnVsbCxuPWgubmV4dCgpO251bGwhPT11JiYhbi5kb25lO3orKyxuPWgubmV4dCgpKXt1LmluZGV4Pno/KHE9dSx1PW51bGwpOnE9dS5zaWJsaW5nO3ZhciB3PXAoZSx1LG4udmFsdWUsayk7aWYobnVsbD09PXcpe251bGw9PT11JiYodT1xKTticmVha31hJiZ1JiZudWxsPT09dy5hbHRlcm5hdGUmJmIoZSx1KTtnPWYodyxnLHopO251bGw9PT10P2w9dzp0LnNpYmxpbmc9dzt0PXc7dT1xfWlmKG4uZG9uZSlyZXR1cm4gYyhlLHUpLGw7aWYobnVsbD09PXUpe2Zvcig7IW4uZG9uZTt6Kyssbj1oLm5leHQoKSluPUEoZSxuLnZhbHVlLGspLG51bGwhPT1uJiYoZz1mKG4sZyx6KSxudWxsPT09dD9sPW46dC5zaWJsaW5nPW4sdD1uKTtyZXR1cm4gbH1mb3IodT1kKGUsdSk7IW4uZG9uZTt6Kyssbj1oLm5leHQoKSluPUModSxlLHosbi52YWx1ZSxrKSxudWxsIT09biYmKGEmJm51bGwhPT1uLmFsdGVybmF0ZSYmXG51LmRlbGV0ZShudWxsPT09bi5rZXk/ejpuLmtleSksZz1mKG4sZyx6KSxudWxsPT09dD9sPW46dC5zaWJsaW5nPW4sdD1uKTthJiZ1LmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfXJldHVybiBmdW5jdGlvbihhLGQsZixoKXt2YXIgaz1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLnR5cGU9PT11YSYmbnVsbD09PWYua2V5O2smJihmPWYucHJvcHMuY2hpbGRyZW4pO3ZhciBsPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY7aWYobClzd2l0Y2goZi4kJHR5cGVvZil7Y2FzZSBzYTphOntsPWYua2V5O2ZvcihrPWQ7bnVsbCE9PWs7KXtpZihrLmtleT09PWwpe3N3aXRjaChrLnRhZyl7Y2FzZSA3OmlmKGYudHlwZT09PXVhKXtjKGEsay5zaWJsaW5nKTtkPWUoayxmLnByb3BzLmNoaWxkcmVuKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWJyZWFrO2RlZmF1bHQ6aWYoay5lbGVtZW50VHlwZT09PWYudHlwZSl7YyhhLGsuc2libGluZyk7XG5kPWUoayxmLnByb3BzKTtkLnJlZj1RZyhhLGssZik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX19YyhhLGspO2JyZWFrfWVsc2UgYihhLGspO2s9ay5zaWJsaW5nfWYudHlwZT09PXVhPyhkPVhnKGYucHJvcHMuY2hpbGRyZW4sYS5tb2RlLGgsZi5rZXkpLGQucmV0dXJuPWEsYT1kKTooaD1WZyhmLnR5cGUsZi5rZXksZi5wcm9wcyxudWxsLGEubW9kZSxoKSxoLnJlZj1RZyhhLGQsZiksaC5yZXR1cm49YSxhPWgpfXJldHVybiBnKGEpO2Nhc2UgdGE6YTp7Zm9yKGs9Zi5rZXk7bnVsbCE9PWQ7KXtpZihkLmtleT09PWspaWYoND09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PWYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGQpO2JyZWFrfWVsc2UgYihhLGQpO2Q9ZC5zaWJsaW5nfWQ9XG5XZyhmLGEubW9kZSxoKTtkLnJldHVybj1hO2E9ZH1yZXR1cm4gZyhhKX1pZihcInN0cmluZ1wiPT09dHlwZW9mIGZ8fFwibnVtYmVyXCI9PT10eXBlb2YgZilyZXR1cm4gZj1cIlwiK2YsbnVsbCE9PWQmJjY9PT1kLnRhZz8oYyhhLGQuc2libGluZyksZD1lKGQsZiksZC5yZXR1cm49YSxhPWQpOihjKGEsZCksZD1VZyhmLGEubW9kZSxoKSxkLnJldHVybj1hLGE9ZCksZyhhKTtpZihQZyhmKSlyZXR1cm4geChhLGQsZixoKTtpZihMYShmKSlyZXR1cm4gdyhhLGQsZixoKTtsJiZSZyhhLGYpO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgZiYmIWspc3dpdGNoKGEudGFnKXtjYXNlIDE6Y2FzZSAyMjpjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OnRocm93IEVycm9yKHkoMTUyLFJhKGEudHlwZSl8fFwiQ29tcG9uZW50XCIpKTt9cmV0dXJuIGMoYSxkKX19dmFyIFlnPVNnKCEwKSxaZz1TZyghMSksJGc9e30sYWg9QmYoJGcpLGJoPUJmKCRnKSxjaD1CZigkZyk7XG5mdW5jdGlvbiBkaChhKXtpZihhPT09JGcpdGhyb3cgRXJyb3IoeSgxNzQpKTtyZXR1cm4gYX1mdW5jdGlvbiBlaChhLGIpe0koY2gsYik7SShiaCxhKTtJKGFoLCRnKTthPWIubm9kZVR5cGU7c3dpdGNoKGEpe2Nhc2UgOTpjYXNlIDExOmI9KGI9Yi5kb2N1bWVudEVsZW1lbnQpP2IubmFtZXNwYWNlVVJJOm1iKG51bGwsXCJcIik7YnJlYWs7ZGVmYXVsdDphPTg9PT1hP2IucGFyZW50Tm9kZTpiLGI9YS5uYW1lc3BhY2VVUkl8fG51bGwsYT1hLnRhZ05hbWUsYj1tYihiLGEpfUgoYWgpO0koYWgsYil9ZnVuY3Rpb24gZmgoKXtIKGFoKTtIKGJoKTtIKGNoKX1mdW5jdGlvbiBnaChhKXtkaChjaC5jdXJyZW50KTt2YXIgYj1kaChhaC5jdXJyZW50KTt2YXIgYz1tYihiLGEudHlwZSk7YiE9PWMmJihJKGJoLGEpLEkoYWgsYykpfWZ1bmN0aW9uIGhoKGEpe2JoLmN1cnJlbnQ9PT1hJiYoSChhaCksSChiaCkpfXZhciBQPUJmKDApO1xuZnVuY3Rpb24gaWgoYSl7Zm9yKHZhciBiPWE7bnVsbCE9PWI7KXtpZigxMz09PWIudGFnKXt2YXIgYz1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWMmJihjPWMuZGVoeWRyYXRlZCxudWxsPT09Y3x8XCIkP1wiPT09Yy5kYXRhfHxcIiQhXCI9PT1jLmRhdGEpKXJldHVybiBifWVsc2UgaWYoMTk9PT1iLnRhZyYmdm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLnJldmVhbE9yZGVyKXtpZigwIT09KGIuZmxhZ3MmNjQpKXJldHVybiBifWVsc2UgaWYobnVsbCE9PWIuY2hpbGQpe2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ31yZXR1cm4gbnVsbH12YXIgamg9bnVsbCxraD1udWxsLGxoPSExO1xuZnVuY3Rpb24gbWgoYSxiKXt2YXIgYz1uaCg1LG51bGwsbnVsbCwwKTtjLmVsZW1lbnRUeXBlPVwiREVMRVRFRFwiO2MudHlwZT1cIkRFTEVURURcIjtjLnN0YXRlTm9kZT1iO2MucmV0dXJuPWE7Yy5mbGFncz04O251bGwhPT1hLmxhc3RFZmZlY3Q/KGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsYS5sYXN0RWZmZWN0PWMpOmEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PWN9ZnVuY3Rpb24gb2goYSxiKXtzd2l0Y2goYS50YWcpe2Nhc2UgNTp2YXIgYz1hLnR5cGU7Yj0xIT09Yi5ub2RlVHlwZXx8Yy50b0xvd2VyQ2FzZSgpIT09Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpP251bGw6YjtyZXR1cm4gbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgNjpyZXR1cm4gYj1cIlwiPT09YS5wZW5kaW5nUHJvcHN8fDMhPT1iLm5vZGVUeXBlP251bGw6YixudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSAxMzpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIHBoKGEpe2lmKGxoKXt2YXIgYj1raDtpZihiKXt2YXIgYz1iO2lmKCFvaChhLGIpKXtiPXJmKGMubmV4dFNpYmxpbmcpO2lmKCFifHwhb2goYSxiKSl7YS5mbGFncz1hLmZsYWdzJi0xMDI1fDI7bGg9ITE7amg9YTtyZXR1cm59bWgoamgsYyl9amg9YTtraD1yZihiLmZpcnN0Q2hpbGQpfWVsc2UgYS5mbGFncz1hLmZsYWdzJi0xMDI1fDIsbGg9ITEsamg9YX19ZnVuY3Rpb24gcWgoYSl7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnJiYxMyE9PWEudGFnOylhPWEucmV0dXJuO2poPWF9XG5mdW5jdGlvbiByaChhKXtpZihhIT09amgpcmV0dXJuITE7aWYoIWxoKXJldHVybiBxaChhKSxsaD0hMCwhMTt2YXIgYj1hLnR5cGU7aWYoNSE9PWEudGFnfHxcImhlYWRcIiE9PWImJlwiYm9keVwiIT09YiYmIW5mKGIsYS5tZW1vaXplZFByb3BzKSlmb3IoYj1raDtiOyltaChhLGIpLGI9cmYoYi5uZXh0U2libGluZyk7cWgoYSk7aWYoMTM9PT1hLnRhZyl7YT1hLm1lbW9pemVkU3RhdGU7YT1udWxsIT09YT9hLmRlaHlkcmF0ZWQ6bnVsbDtpZighYSl0aHJvdyBFcnJvcih5KDMxNykpO2E6e2E9YS5uZXh0U2libGluZztmb3IoYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKFwiLyRcIj09PWMpe2lmKDA9PT1iKXtraD1yZihhLm5leHRTaWJsaW5nKTticmVhayBhfWItLX1lbHNlXCIkXCIhPT1jJiZcIiQhXCIhPT1jJiZcIiQ/XCIhPT1jfHxiKyt9YT1hLm5leHRTaWJsaW5nfWtoPW51bGx9fWVsc2Uga2g9amg/cmYoYS5zdGF0ZU5vZGUubmV4dFNpYmxpbmcpOm51bGw7cmV0dXJuITB9XG5mdW5jdGlvbiBzaCgpe2toPWpoPW51bGw7bGg9ITF9dmFyIHRoPVtdO2Z1bmN0aW9uIHVoKCl7Zm9yKHZhciBhPTA7YTx0aC5sZW5ndGg7YSsrKXRoW2FdLl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5PW51bGw7dGgubGVuZ3RoPTB9dmFyIHZoPXJhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsd2g9cmEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcseGg9MCxSPW51bGwsUz1udWxsLFQ9bnVsbCx5aD0hMSx6aD0hMTtmdW5jdGlvbiBBaCgpe3Rocm93IEVycm9yKHkoMzIxKSk7fWZ1bmN0aW9uIEJoKGEsYil7aWYobnVsbD09PWIpcmV0dXJuITE7Zm9yKHZhciBjPTA7YzxiLmxlbmd0aCYmYzxhLmxlbmd0aDtjKyspaWYoIUhlKGFbY10sYltjXSkpcmV0dXJuITE7cmV0dXJuITB9XG5mdW5jdGlvbiBDaChhLGIsYyxkLGUsZil7eGg9ZjtSPWI7Yi5tZW1vaXplZFN0YXRlPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2IubGFuZXM9MDt2aC5jdXJyZW50PW51bGw9PT1hfHxudWxsPT09YS5tZW1vaXplZFN0YXRlP0RoOkVoO2E9YyhkLGUpO2lmKHpoKXtmPTA7ZG97emg9ITE7aWYoISgyNT5mKSl0aHJvdyBFcnJvcih5KDMwMSkpO2YrPTE7VD1TPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO3ZoLmN1cnJlbnQ9Rmg7YT1jKGQsZSl9d2hpbGUoemgpfXZoLmN1cnJlbnQ9R2g7Yj1udWxsIT09UyYmbnVsbCE9PVMubmV4dDt4aD0wO1Q9Uz1SPW51bGw7eWg9ITE7aWYoYil0aHJvdyBFcnJvcih5KDMwMCkpO3JldHVybiBhfWZ1bmN0aW9uIEhoKCl7dmFyIGE9e21lbW9pemVkU3RhdGU6bnVsbCxiYXNlU3RhdGU6bnVsbCxiYXNlUXVldWU6bnVsbCxxdWV1ZTpudWxsLG5leHQ6bnVsbH07bnVsbD09PVQ/Ui5tZW1vaXplZFN0YXRlPVQ9YTpUPVQubmV4dD1hO3JldHVybiBUfVxuZnVuY3Rpb24gSWgoKXtpZihudWxsPT09Uyl7dmFyIGE9Ui5hbHRlcm5hdGU7YT1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbH1lbHNlIGE9Uy5uZXh0O3ZhciBiPW51bGw9PT1UP1IubWVtb2l6ZWRTdGF0ZTpULm5leHQ7aWYobnVsbCE9PWIpVD1iLFM9YTtlbHNle2lmKG51bGw9PT1hKXRocm93IEVycm9yKHkoMzEwKSk7Uz1hO2E9e21lbW9pemVkU3RhdGU6Uy5tZW1vaXplZFN0YXRlLGJhc2VTdGF0ZTpTLmJhc2VTdGF0ZSxiYXNlUXVldWU6Uy5iYXNlUXVldWUscXVldWU6Uy5xdWV1ZSxuZXh0Om51bGx9O251bGw9PT1UP1IubWVtb2l6ZWRTdGF0ZT1UPWE6VD1ULm5leHQ9YX1yZXR1cm4gVH1mdW5jdGlvbiBKaChhLGIpe3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBiP2IoYSk6Yn1cbmZ1bmN0aW9uIEtoKGEpe3ZhciBiPUloKCksYz1iLnF1ZXVlO2lmKG51bGw9PT1jKXRocm93IEVycm9yKHkoMzExKSk7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7dmFyIGQ9UyxlPWQuYmFzZVF1ZXVlLGY9Yy5wZW5kaW5nO2lmKG51bGwhPT1mKXtpZihudWxsIT09ZSl7dmFyIGc9ZS5uZXh0O2UubmV4dD1mLm5leHQ7Zi5uZXh0PWd9ZC5iYXNlUXVldWU9ZT1mO2MucGVuZGluZz1udWxsfWlmKG51bGwhPT1lKXtlPWUubmV4dDtkPWQuYmFzZVN0YXRlO3ZhciBoPWc9Zj1udWxsLGs9ZTtkb3t2YXIgbD1rLmxhbmU7aWYoKHhoJmwpPT09bCludWxsIT09aCYmKGg9aC5uZXh0PXtsYW5lOjAsYWN0aW9uOmsuYWN0aW9uLGVhZ2VyUmVkdWNlcjprLmVhZ2VyUmVkdWNlcixlYWdlclN0YXRlOmsuZWFnZXJTdGF0ZSxuZXh0Om51bGx9KSxkPWsuZWFnZXJSZWR1Y2VyPT09YT9rLmVhZ2VyU3RhdGU6YShkLGsuYWN0aW9uKTtlbHNle3ZhciBuPXtsYW5lOmwsYWN0aW9uOmsuYWN0aW9uLGVhZ2VyUmVkdWNlcjprLmVhZ2VyUmVkdWNlcixcbmVhZ2VyU3RhdGU6ay5lYWdlclN0YXRlLG5leHQ6bnVsbH07bnVsbD09PWg/KGc9aD1uLGY9ZCk6aD1oLm5leHQ9bjtSLmxhbmVzfD1sO0RnfD1sfWs9ay5uZXh0fXdoaWxlKG51bGwhPT1rJiZrIT09ZSk7bnVsbD09PWg/Zj1kOmgubmV4dD1nO0hlKGQsYi5tZW1vaXplZFN0YXRlKXx8KHVnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZDtiLmJhc2VTdGF0ZT1mO2IuYmFzZVF1ZXVlPWg7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1kfXJldHVybltiLm1lbW9pemVkU3RhdGUsYy5kaXNwYXRjaF19XG5mdW5jdGlvbiBMaChhKXt2YXIgYj1JaCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcih5KDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPWMuZGlzcGF0Y2gsZT1jLnBlbmRpbmcsZj1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWUpe2MucGVuZGluZz1udWxsO3ZhciBnPWU9ZS5uZXh0O2RvIGY9YShmLGcuYWN0aW9uKSxnPWcubmV4dDt3aGlsZShnIT09ZSk7SGUoZixiLm1lbW9pemVkU3RhdGUpfHwodWc9ITApO2IubWVtb2l6ZWRTdGF0ZT1mO251bGw9PT1iLmJhc2VRdWV1ZSYmKGIuYmFzZVN0YXRlPWYpO2MubGFzdFJlbmRlcmVkU3RhdGU9Zn1yZXR1cm5bZixkXX1cbmZ1bmN0aW9uIE1oKGEsYixjKXt2YXIgZD1iLl9nZXRWZXJzaW9uO2Q9ZChiLl9zb3VyY2UpO3ZhciBlPWIuX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnk7aWYobnVsbCE9PWUpYT1lPT09ZDtlbHNlIGlmKGE9YS5tdXRhYmxlUmVhZExhbmVzLGE9KHhoJmEpPT09YSliLl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5PWQsdGgucHVzaChiKTtpZihhKXJldHVybiBjKGIuX3NvdXJjZSk7dGgucHVzaChiKTt0aHJvdyBFcnJvcih5KDM1MCkpO31cbmZ1bmN0aW9uIE5oKGEsYixjLGQpe3ZhciBlPVU7aWYobnVsbD09PWUpdGhyb3cgRXJyb3IoeSgzNDkpKTt2YXIgZj1iLl9nZXRWZXJzaW9uLGc9ZihiLl9zb3VyY2UpLGg9dmguY3VycmVudCxrPWgudXNlU3RhdGUoZnVuY3Rpb24oKXtyZXR1cm4gTWgoZSxiLGMpfSksbD1rWzFdLG49a1swXTtrPVQ7dmFyIEE9YS5tZW1vaXplZFN0YXRlLHA9QS5yZWZzLEM9cC5nZXRTbmFwc2hvdCx4PUEuc291cmNlO0E9QS5zdWJzY3JpYmU7dmFyIHc9UjthLm1lbW9pemVkU3RhdGU9e3JlZnM6cCxzb3VyY2U6YixzdWJzY3JpYmU6ZH07aC51c2VFZmZlY3QoZnVuY3Rpb24oKXtwLmdldFNuYXBzaG90PWM7cC5zZXRTbmFwc2hvdD1sO3ZhciBhPWYoYi5fc291cmNlKTtpZighSGUoZyxhKSl7YT1jKGIuX3NvdXJjZSk7SGUobixhKXx8KGwoYSksYT1JZyh3KSxlLm11dGFibGVSZWFkTGFuZXN8PWEmZS5wZW5kaW5nTGFuZXMpO2E9ZS5tdXRhYmxlUmVhZExhbmVzO2UuZW50YW5nbGVkTGFuZXN8PWE7Zm9yKHZhciBkPVxuZS5lbnRhbmdsZW1lbnRzLGg9YTswPGg7KXt2YXIgaz0zMS1WYyhoKSx2PTE8PGs7ZFtrXXw9YTtoJj1+dn19fSxbYyxiLGRdKTtoLnVzZUVmZmVjdChmdW5jdGlvbigpe3JldHVybiBkKGIuX3NvdXJjZSxmdW5jdGlvbigpe3ZhciBhPXAuZ2V0U25hcHNob3QsYz1wLnNldFNuYXBzaG90O3RyeXtjKGEoYi5fc291cmNlKSk7dmFyIGQ9SWcodyk7ZS5tdXRhYmxlUmVhZExhbmVzfD1kJmUucGVuZGluZ0xhbmVzfWNhdGNoKHEpe2MoZnVuY3Rpb24oKXt0aHJvdyBxO30pfX0pfSxbYixkXSk7SGUoQyxjKSYmSGUoeCxiKSYmSGUoQSxkKXx8KGE9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6SmgsbGFzdFJlbmRlcmVkU3RhdGU6bn0sYS5kaXNwYXRjaD1sPU9oLmJpbmQobnVsbCxSLGEpLGsucXVldWU9YSxrLmJhc2VRdWV1ZT1udWxsLG49TWgoZSxiLGMpLGsubWVtb2l6ZWRTdGF0ZT1rLmJhc2VTdGF0ZT1uKTtyZXR1cm4gbn1cbmZ1bmN0aW9uIFBoKGEsYixjKXt2YXIgZD1JaCgpO3JldHVybiBOaChkLGEsYixjKX1mdW5jdGlvbiBRaChhKXt2YXIgYj1IaCgpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBhJiYoYT1hKCkpO2IubWVtb2l6ZWRTdGF0ZT1iLmJhc2VTdGF0ZT1hO2E9Yi5xdWV1ZT17cGVuZGluZzpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjpKaCxsYXN0UmVuZGVyZWRTdGF0ZTphfTthPWEuZGlzcGF0Y2g9T2guYmluZChudWxsLFIsYSk7cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxhXX1cbmZ1bmN0aW9uIFJoKGEsYixjLGQpe2E9e3RhZzphLGNyZWF0ZTpiLGRlc3Ryb3k6YyxkZXBzOmQsbmV4dDpudWxsfTtiPVIudXBkYXRlUXVldWU7bnVsbD09PWI/KGI9e2xhc3RFZmZlY3Q6bnVsbH0sUi51cGRhdGVRdWV1ZT1iLGIubGFzdEVmZmVjdD1hLm5leHQ9YSk6KGM9Yi5sYXN0RWZmZWN0LG51bGw9PT1jP2IubGFzdEVmZmVjdD1hLm5leHQ9YTooZD1jLm5leHQsYy5uZXh0PWEsYS5uZXh0PWQsYi5sYXN0RWZmZWN0PWEpKTtyZXR1cm4gYX1mdW5jdGlvbiBTaChhKXt2YXIgYj1IaCgpO2E9e2N1cnJlbnQ6YX07cmV0dXJuIGIubWVtb2l6ZWRTdGF0ZT1hfWZ1bmN0aW9uIFRoKCl7cmV0dXJuIEloKCkubWVtb2l6ZWRTdGF0ZX1mdW5jdGlvbiBVaChhLGIsYyxkKXt2YXIgZT1IaCgpO1IuZmxhZ3N8PWE7ZS5tZW1vaXplZFN0YXRlPVJoKDF8YixjLHZvaWQgMCx2b2lkIDA9PT1kP251bGw6ZCl9XG5mdW5jdGlvbiBWaChhLGIsYyxkKXt2YXIgZT1JaCgpO2Q9dm9pZCAwPT09ZD9udWxsOmQ7dmFyIGY9dm9pZCAwO2lmKG51bGwhPT1TKXt2YXIgZz1TLm1lbW9pemVkU3RhdGU7Zj1nLmRlc3Ryb3k7aWYobnVsbCE9PWQmJkJoKGQsZy5kZXBzKSl7UmgoYixjLGYsZCk7cmV0dXJufX1SLmZsYWdzfD1hO2UubWVtb2l6ZWRTdGF0ZT1SaCgxfGIsYyxmLGQpfWZ1bmN0aW9uIFdoKGEsYil7cmV0dXJuIFVoKDUxNiw0LGEsYil9ZnVuY3Rpb24gWGgoYSxiKXtyZXR1cm4gVmgoNTE2LDQsYSxiKX1mdW5jdGlvbiBZaChhLGIpe3JldHVybiBWaCg0LDIsYSxiKX1mdW5jdGlvbiBaaChhLGIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXJldHVybiBhPWEoKSxiKGEpLGZ1bmN0aW9uKCl7YihudWxsKX07aWYobnVsbCE9PWImJnZvaWQgMCE9PWIpcmV0dXJuIGE9YSgpLGIuY3VycmVudD1hLGZ1bmN0aW9uKCl7Yi5jdXJyZW50PW51bGx9fVxuZnVuY3Rpb24gJGgoYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBWaCg0LDIsWmguYmluZChudWxsLGIsYSksYyl9ZnVuY3Rpb24gYWkoKXt9ZnVuY3Rpb24gYmkoYSxiKXt2YXIgYz1JaCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmQmgoYixkWzFdKSlyZXR1cm4gZFswXTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9ZnVuY3Rpb24gY2koYSxiKXt2YXIgYz1JaCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmQmgoYixkWzFdKSlyZXR1cm4gZFswXTthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9XG5mdW5jdGlvbiBkaShhLGIpe3ZhciBjPWVnKCk7Z2coOTg+Yz85ODpjLGZ1bmN0aW9uKCl7YSghMCl9KTtnZyg5NzxjPzk3OmMsZnVuY3Rpb24oKXt2YXIgYz13aC50cmFuc2l0aW9uO3doLnRyYW5zaXRpb249MTt0cnl7YSghMSksYigpfWZpbmFsbHl7d2gudHJhbnNpdGlvbj1jfX0pfVxuZnVuY3Rpb24gT2goYSxiLGMpe3ZhciBkPUhnKCksZT1JZyhhKSxmPXtsYW5lOmUsYWN0aW9uOmMsZWFnZXJSZWR1Y2VyOm51bGwsZWFnZXJTdGF0ZTpudWxsLG5leHQ6bnVsbH0sZz1iLnBlbmRpbmc7bnVsbD09PWc/Zi5uZXh0PWY6KGYubmV4dD1nLm5leHQsZy5uZXh0PWYpO2IucGVuZGluZz1mO2c9YS5hbHRlcm5hdGU7aWYoYT09PVJ8fG51bGwhPT1nJiZnPT09Uil6aD15aD0hMDtlbHNle2lmKDA9PT1hLmxhbmVzJiYobnVsbD09PWd8fDA9PT1nLmxhbmVzKSYmKGc9Yi5sYXN0UmVuZGVyZWRSZWR1Y2VyLG51bGwhPT1nKSl0cnl7dmFyIGg9Yi5sYXN0UmVuZGVyZWRTdGF0ZSxrPWcoaCxjKTtmLmVhZ2VyUmVkdWNlcj1nO2YuZWFnZXJTdGF0ZT1rO2lmKEhlKGssaCkpcmV0dXJufWNhdGNoKGwpe31maW5hbGx5e31KZyhhLGUsZCl9fVxudmFyIEdoPXtyZWFkQ29udGV4dDp2Zyx1c2VDYWxsYmFjazpBaCx1c2VDb250ZXh0OkFoLHVzZUVmZmVjdDpBaCx1c2VJbXBlcmF0aXZlSGFuZGxlOkFoLHVzZUxheW91dEVmZmVjdDpBaCx1c2VNZW1vOkFoLHVzZVJlZHVjZXI6QWgsdXNlUmVmOkFoLHVzZVN0YXRlOkFoLHVzZURlYnVnVmFsdWU6QWgsdXNlRGVmZXJyZWRWYWx1ZTpBaCx1c2VUcmFuc2l0aW9uOkFoLHVzZU11dGFibGVTb3VyY2U6QWgsdXNlT3BhcXVlSWRlbnRpZmllcjpBaCx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LERoPXtyZWFkQ29udGV4dDp2Zyx1c2VDYWxsYmFjazpmdW5jdGlvbihhLGIpe0hoKCkubWVtb2l6ZWRTdGF0ZT1bYSx2b2lkIDA9PT1iP251bGw6Yl07cmV0dXJuIGF9LHVzZUNvbnRleHQ6dmcsdXNlRWZmZWN0OldoLHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBVaCg0LDIsWmguYmluZChudWxsLFxuYixhKSxjKX0sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFVoKDQsMixhLGIpfSx1c2VNZW1vOmZ1bmN0aW9uKGEsYil7dmFyIGM9SGgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX0sdXNlUmVkdWNlcjpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9SGgoKTtiPXZvaWQgMCE9PWM/YyhiKTpiO2QubWVtb2l6ZWRTdGF0ZT1kLmJhc2VTdGF0ZT1iO2E9ZC5xdWV1ZT17cGVuZGluZzpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjphLGxhc3RSZW5kZXJlZFN0YXRlOmJ9O2E9YS5kaXNwYXRjaD1PaC5iaW5kKG51bGwsUixhKTtyZXR1cm5bZC5tZW1vaXplZFN0YXRlLGFdfSx1c2VSZWY6U2gsdXNlU3RhdGU6UWgsdXNlRGVidWdWYWx1ZTphaSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEpe3ZhciBiPVFoKGEpLGM9YlswXSxkPWJbMV07V2goZnVuY3Rpb24oKXt2YXIgYj13aC50cmFuc2l0aW9uO1xud2gudHJhbnNpdGlvbj0xO3RyeXtkKGEpfWZpbmFsbHl7d2gudHJhbnNpdGlvbj1ifX0sW2FdKTtyZXR1cm4gY30sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbigpe3ZhciBhPVFoKCExKSxiPWFbMF07YT1kaS5iaW5kKG51bGwsYVsxXSk7U2goYSk7cmV0dXJuW2EsYl19LHVzZU11dGFibGVTb3VyY2U6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPUhoKCk7ZC5tZW1vaXplZFN0YXRlPXtyZWZzOntnZXRTbmFwc2hvdDpiLHNldFNuYXBzaG90Om51bGx9LHNvdXJjZTphLHN1YnNjcmliZTpjfTtyZXR1cm4gTmgoZCxhLGIsYyl9LHVzZU9wYXF1ZUlkZW50aWZpZXI6ZnVuY3Rpb24oKXtpZihsaCl7dmFyIGE9ITEsYj11ZihmdW5jdGlvbigpe2F8fChhPSEwLGMoXCJyOlwiKyh0ZisrKS50b1N0cmluZygzNikpKTt0aHJvdyBFcnJvcih5KDM1NSkpO30pLGM9UWgoYilbMV07MD09PShSLm1vZGUmMikmJihSLmZsYWdzfD01MTYsUmgoNSxmdW5jdGlvbigpe2MoXCJyOlwiKyh0ZisrKS50b1N0cmluZygzNikpfSxcbnZvaWQgMCxudWxsKSk7cmV0dXJuIGJ9Yj1cInI6XCIrKHRmKyspLnRvU3RyaW5nKDM2KTtRaChiKTtyZXR1cm4gYn0sdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxFaD17cmVhZENvbnRleHQ6dmcsdXNlQ2FsbGJhY2s6YmksdXNlQ29udGV4dDp2Zyx1c2VFZmZlY3Q6WGgsdXNlSW1wZXJhdGl2ZUhhbmRsZTokaCx1c2VMYXlvdXRFZmZlY3Q6WWgsdXNlTWVtbzpjaSx1c2VSZWR1Y2VyOktoLHVzZVJlZjpUaCx1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiBLaChKaCl9LHVzZURlYnVnVmFsdWU6YWksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXt2YXIgYj1LaChKaCksYz1iWzBdLGQ9YlsxXTtYaChmdW5jdGlvbigpe3ZhciBiPXdoLnRyYW5zaXRpb247d2gudHJhbnNpdGlvbj0xO3RyeXtkKGEpfWZpbmFsbHl7d2gudHJhbnNpdGlvbj1ifX0sW2FdKTtyZXR1cm4gY30sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbigpe3ZhciBhPUtoKEpoKVswXTtyZXR1cm5bVGgoKS5jdXJyZW50LFxuYV19LHVzZU11dGFibGVTb3VyY2U6UGgsdXNlT3BhcXVlSWRlbnRpZmllcjpmdW5jdGlvbigpe3JldHVybiBLaChKaClbMF19LHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sRmg9e3JlYWRDb250ZXh0OnZnLHVzZUNhbGxiYWNrOmJpLHVzZUNvbnRleHQ6dmcsdXNlRWZmZWN0OlhoLHVzZUltcGVyYXRpdmVIYW5kbGU6JGgsdXNlTGF5b3V0RWZmZWN0OlloLHVzZU1lbW86Y2ksdXNlUmVkdWNlcjpMaCx1c2VSZWY6VGgsdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gTGgoSmgpfSx1c2VEZWJ1Z1ZhbHVlOmFpLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSl7dmFyIGI9TGgoSmgpLGM9YlswXSxkPWJbMV07WGgoZnVuY3Rpb24oKXt2YXIgYj13aC50cmFuc2l0aW9uO3doLnRyYW5zaXRpb249MTt0cnl7ZChhKX1maW5hbGx5e3doLnRyYW5zaXRpb249Yn19LFthXSk7cmV0dXJuIGN9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1MaChKaClbMF07cmV0dXJuW1RoKCkuY3VycmVudCxcbmFdfSx1c2VNdXRhYmxlU291cmNlOlBoLHVzZU9wYXF1ZUlkZW50aWZpZXI6ZnVuY3Rpb24oKXtyZXR1cm4gTGgoSmgpWzBdfSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LGVpPXJhLlJlYWN0Q3VycmVudE93bmVyLHVnPSExO2Z1bmN0aW9uIGZpKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/WmcoYixudWxsLGMsZCk6WWcoYixhLmNoaWxkLGMsZCl9ZnVuY3Rpb24gZ2koYSxiLGMsZCxlKXtjPWMucmVuZGVyO3ZhciBmPWIucmVmO3RnKGIsZSk7ZD1DaChhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiF1ZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZmxhZ3MmPS01MTcsYS5sYW5lcyY9fmUsaGkoYSxiLGUpO2IuZmxhZ3N8PTE7ZmkoYSxiLGQsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBpaShhLGIsYyxkLGUsZil7aWYobnVsbD09PWEpe3ZhciBnPWMudHlwZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmIWppKGcpJiZ2b2lkIDA9PT1nLmRlZmF1bHRQcm9wcyYmbnVsbD09PWMuY29tcGFyZSYmdm9pZCAwPT09Yy5kZWZhdWx0UHJvcHMpcmV0dXJuIGIudGFnPTE1LGIudHlwZT1nLGtpKGEsYixnLGQsZSxmKTthPVZnKGMudHlwZSxudWxsLGQsYixiLm1vZGUsZik7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfWc9YS5jaGlsZDtpZigwPT09KGUmZikmJihlPWcubWVtb2l6ZWRQcm9wcyxjPWMuY29tcGFyZSxjPW51bGwhPT1jP2M6SmUsYyhlLGQpJiZhLnJlZj09PWIucmVmKSlyZXR1cm4gaGkoYSxiLGYpO2IuZmxhZ3N8PTE7YT1UZyhnLGQpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1cbmZ1bmN0aW9uIGtpKGEsYixjLGQsZSxmKXtpZihudWxsIT09YSYmSmUoYS5tZW1vaXplZFByb3BzLGQpJiZhLnJlZj09PWIucmVmKWlmKHVnPSExLDAhPT0oZiZlKSkwIT09KGEuZmxhZ3MmMTYzODQpJiYodWc9ITApO2Vsc2UgcmV0dXJuIGIubGFuZXM9YS5sYW5lcyxoaShhLGIsZik7cmV0dXJuIGxpKGEsYixjLGQsZil9XG5mdW5jdGlvbiBtaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1kLmNoaWxkcmVuLGY9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGw7aWYoXCJoaWRkZW5cIj09PWQubW9kZXx8XCJ1bnN0YWJsZS1kZWZlci13aXRob3V0LWhpZGluZ1wiPT09ZC5tb2RlKWlmKDA9PT0oYi5tb2RlJjQpKWIubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOjB9LG5pKGIsYyk7ZWxzZSBpZigwIT09KGMmMTA3Mzc0MTgyNCkpYi5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6MH0sbmkoYixudWxsIT09Zj9mLmJhc2VMYW5lczpjKTtlbHNlIHJldHVybiBhPW51bGwhPT1mP2YuYmFzZUxhbmVzfGM6YyxiLmxhbmVzPWIuY2hpbGRMYW5lcz0xMDczNzQxODI0LGIubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOmF9LG5pKGIsYSksbnVsbDtlbHNlIG51bGwhPT1mPyhkPWYuYmFzZUxhbmVzfGMsYi5tZW1vaXplZFN0YXRlPW51bGwpOmQ9YyxuaShiLGQpO2ZpKGEsYixlLGMpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gb2koYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsPT09YSYmbnVsbCE9PWN8fG51bGwhPT1hJiZhLnJlZiE9PWMpYi5mbGFnc3w9MTI4fWZ1bmN0aW9uIGxpKGEsYixjLGQsZSl7dmFyIGY9RmYoYyk/RGY6TS5jdXJyZW50O2Y9RWYoYixmKTt0ZyhiLGUpO2M9Q2goYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhdWcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmZsYWdzJj0tNTE3LGEubGFuZXMmPX5lLGhpKGEsYixlKTtiLmZsYWdzfD0xO2ZpKGEsYixjLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gcGkoYSxiLGMsZCxlKXtpZihGZihjKSl7dmFyIGY9ITA7SmYoYil9ZWxzZSBmPSExO3RnKGIsZSk7aWYobnVsbD09PWIuc3RhdGVOb2RlKW51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpLE1nKGIsYyxkKSxPZyhiLGMsZCxlKSxkPSEwO2Vsc2UgaWYobnVsbD09PWEpe3ZhciBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzO2cucHJvcHM9aDt2YXIgaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD12ZyhsKToobD1GZihjKT9EZjpNLmN1cnJlbnQsbD1FZihiLGwpKTt2YXIgbj1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyxBPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBufHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZTtBfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmTmcoYixnLGQsbCk7d2c9ITE7dmFyIHA9Yi5tZW1vaXplZFN0YXRlO2cuc3RhdGU9cDtDZyhiLGQsZyxlKTtrPWIubWVtb2l6ZWRTdGF0ZTtoIT09ZHx8cCE9PWt8fE4uY3VycmVudHx8d2c/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBuJiYoR2coYixjLG4sZCksaz1iLm1lbW9pemVkU3RhdGUpLChoPXdnfHxMZyhiLGMsaCxkLHAsayxsKSk/KEF8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudHx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudCYmZy5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSksXCJmdW5jdGlvblwiPT09XG50eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZmxhZ3N8PTQpKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9ayksZy5wcm9wcz1kLGcuc3RhdGU9ayxnLmNvbnRleHQ9bCxkPWgpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZmxhZ3N8PTQpLGQ9ITEpfWVsc2V7Zz1iLnN0YXRlTm9kZTt5ZyhhLGIpO2g9Yi5tZW1vaXplZFByb3BzO2w9Yi50eXBlPT09Yi5lbGVtZW50VHlwZT9oOmxnKGIudHlwZSxoKTtnLnByb3BzPWw7QT1iLnBlbmRpbmdQcm9wcztwPWcuY29udGV4dDtrPWMuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBrJiZudWxsIT09az9rPXZnKGspOihrPUZmKGMpP0RmOk0uY3VycmVudCxrPUVmKGIsaykpO3ZhciBDPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOyhuPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBDfHxcblwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09QXx8cCE9PWspJiZOZyhiLGcsZCxrKTt3Zz0hMTtwPWIubWVtb2l6ZWRTdGF0ZTtnLnN0YXRlPXA7Q2coYixkLGcsZSk7dmFyIHg9Yi5tZW1vaXplZFN0YXRlO2ghPT1BfHxwIT09eHx8Ti5jdXJyZW50fHx3Zz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIEMmJihHZyhiLGMsQyxkKSx4PWIubWVtb2l6ZWRTdGF0ZSksKGw9d2d8fExnKGIsYyxsLGQscCx4LGspKT8obnx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGV8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlJiZnLmNvbXBvbmVudFdpbGxVcGRhdGUoZCxcbngsayksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUoZCx4LGspKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGUmJihiLmZsYWdzfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZmxhZ3N8PTI1NikpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnA9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmcD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTI1NiksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPXgpLGcucHJvcHM9ZCxnLnN0YXRlPXgsZy5jb250ZXh0PWssZD1sKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxcbmg9PT1hLm1lbW9pemVkUHJvcHMmJnA9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmcD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTI1NiksZD0hMSl9cmV0dXJuIHFpKGEsYixjLGQsZixlKX1cbmZ1bmN0aW9uIHFpKGEsYixjLGQsZSxmKXtvaShhLGIpO3ZhciBnPTAhPT0oYi5mbGFncyY2NCk7aWYoIWQmJiFnKXJldHVybiBlJiZLZihiLGMsITEpLGhpKGEsYixmKTtkPWIuc3RhdGVOb2RlO2VpLmN1cnJlbnQ9Yjt2YXIgaD1nJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I/bnVsbDpkLnJlbmRlcigpO2IuZmxhZ3N8PTE7bnVsbCE9PWEmJmc/KGIuY2hpbGQ9WWcoYixhLmNoaWxkLG51bGwsZiksYi5jaGlsZD1ZZyhiLG51bGwsaCxmKSk6ZmkoYSxiLGgsZik7Yi5tZW1vaXplZFN0YXRlPWQuc3RhdGU7ZSYmS2YoYixjLCEwKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiByaShhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P0hmKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJkhmKGEsYi5jb250ZXh0LCExKTtlaChhLGIuY29udGFpbmVySW5mbyl9XG52YXIgc2k9e2RlaHlkcmF0ZWQ6bnVsbCxyZXRyeUxhbmU6MH07XG5mdW5jdGlvbiB0aShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1QLmN1cnJlbnQsZj0hMSxnOyhnPTAhPT0oYi5mbGFncyY2NCkpfHwoZz1udWxsIT09YSYmbnVsbD09PWEubWVtb2l6ZWRTdGF0ZT8hMTowIT09KGUmMikpO2c/KGY9ITAsYi5mbGFncyY9LTY1KTpudWxsIT09YSYmbnVsbD09PWEubWVtb2l6ZWRTdGF0ZXx8dm9pZCAwPT09ZC5mYWxsYmFja3x8ITA9PT1kLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrfHwoZXw9MSk7SShQLGUmMSk7aWYobnVsbD09PWEpe3ZvaWQgMCE9PWQuZmFsbGJhY2smJnBoKGIpO2E9ZC5jaGlsZHJlbjtlPWQuZmFsbGJhY2s7aWYoZilyZXR1cm4gYT11aShiLGEsZSxjKSxiLmNoaWxkLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczpjfSxiLm1lbW9pemVkU3RhdGU9c2ksYTtpZihcIm51bWJlclwiPT09dHlwZW9mIGQudW5zdGFibGVfZXhwZWN0ZWRMb2FkVGltZSlyZXR1cm4gYT11aShiLGEsZSxjKSxiLmNoaWxkLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczpjfSxcbmIubWVtb2l6ZWRTdGF0ZT1zaSxiLmxhbmVzPTMzNTU0NDMyLGE7Yz12aSh7bW9kZTpcInZpc2libGVcIixjaGlsZHJlbjphfSxiLm1vZGUsYyxudWxsKTtjLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWN9aWYobnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSl7aWYoZilyZXR1cm4gZD13aShhLGIsZC5jaGlsZHJlbixkLmZhbGxiYWNrLGMpLGY9Yi5jaGlsZCxlPWEuY2hpbGQubWVtb2l6ZWRTdGF0ZSxmLm1lbW9pemVkU3RhdGU9bnVsbD09PWU/e2Jhc2VMYW5lczpjfTp7YmFzZUxhbmVzOmUuYmFzZUxhbmVzfGN9LGYuY2hpbGRMYW5lcz1hLmNoaWxkTGFuZXMmfmMsYi5tZW1vaXplZFN0YXRlPXNpLGQ7Yz14aShhLGIsZC5jaGlsZHJlbixjKTtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gY31pZihmKXJldHVybiBkPXdpKGEsYixkLmNoaWxkcmVuLGQuZmFsbGJhY2ssYyksZj1iLmNoaWxkLGU9YS5jaGlsZC5tZW1vaXplZFN0YXRlLGYubWVtb2l6ZWRTdGF0ZT1udWxsPT09ZT97YmFzZUxhbmVzOmN9Olxue2Jhc2VMYW5lczplLmJhc2VMYW5lc3xjfSxmLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzJn5jLGIubWVtb2l6ZWRTdGF0ZT1zaSxkO2M9eGkoYSxiLGQuY2hpbGRyZW4sYyk7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGN9ZnVuY3Rpb24gdWkoYSxiLGMsZCl7dmFyIGU9YS5tb2RlLGY9YS5jaGlsZDtiPXttb2RlOlwiaGlkZGVuXCIsY2hpbGRyZW46Yn07MD09PShlJjIpJiZudWxsIT09Zj8oZi5jaGlsZExhbmVzPTAsZi5wZW5kaW5nUHJvcHM9Yik6Zj12aShiLGUsMCxudWxsKTtjPVhnKGMsZSxkLG51bGwpO2YucmV0dXJuPWE7Yy5yZXR1cm49YTtmLnNpYmxpbmc9YzthLmNoaWxkPWY7cmV0dXJuIGN9XG5mdW5jdGlvbiB4aShhLGIsYyxkKXt2YXIgZT1hLmNoaWxkO2E9ZS5zaWJsaW5nO2M9VGcoZSx7bW9kZTpcInZpc2libGVcIixjaGlsZHJlbjpjfSk7MD09PShiLm1vZGUmMikmJihjLmxhbmVzPWQpO2MucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGw7bnVsbCE9PWEmJihhLm5leHRFZmZlY3Q9bnVsbCxhLmZsYWdzPTgsYi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YSk7cmV0dXJuIGIuY2hpbGQ9Y31cbmZ1bmN0aW9uIHdpKGEsYixjLGQsZSl7dmFyIGY9Yi5tb2RlLGc9YS5jaGlsZDthPWcuc2libGluZzt2YXIgaD17bW9kZTpcImhpZGRlblwiLGNoaWxkcmVuOmN9OzA9PT0oZiYyKSYmYi5jaGlsZCE9PWc/KGM9Yi5jaGlsZCxjLmNoaWxkTGFuZXM9MCxjLnBlbmRpbmdQcm9wcz1oLGc9Yy5sYXN0RWZmZWN0LG51bGwhPT1nPyhiLmZpcnN0RWZmZWN0PWMuZmlyc3RFZmZlY3QsYi5sYXN0RWZmZWN0PWcsZy5uZXh0RWZmZWN0PW51bGwpOmIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PW51bGwpOmM9VGcoZyxoKTtudWxsIT09YT9kPVRnKGEsZCk6KGQ9WGcoZCxmLGUsbnVsbCksZC5mbGFnc3w9Mik7ZC5yZXR1cm49YjtjLnJldHVybj1iO2Muc2libGluZz1kO2IuY2hpbGQ9YztyZXR1cm4gZH1mdW5jdGlvbiB5aShhLGIpe2EubGFuZXN8PWI7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJihjLmxhbmVzfD1iKTtzZyhhLnJldHVybixiKX1cbmZ1bmN0aW9uIHppKGEsYixjLGQsZSxmKXt2YXIgZz1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWc/YS5tZW1vaXplZFN0YXRlPXtpc0JhY2t3YXJkczpiLHJlbmRlcmluZzpudWxsLHJlbmRlcmluZ1N0YXJ0VGltZTowLGxhc3Q6ZCx0YWlsOmMsdGFpbE1vZGU6ZSxsYXN0RWZmZWN0OmZ9OihnLmlzQmFja3dhcmRzPWIsZy5yZW5kZXJpbmc9bnVsbCxnLnJlbmRlcmluZ1N0YXJ0VGltZT0wLGcubGFzdD1kLGcudGFpbD1jLGcudGFpbE1vZGU9ZSxnLmxhc3RFZmZlY3Q9Zil9XG5mdW5jdGlvbiBBaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1kLnJldmVhbE9yZGVyLGY9ZC50YWlsO2ZpKGEsYixkLmNoaWxkcmVuLGMpO2Q9UC5jdXJyZW50O2lmKDAhPT0oZCYyKSlkPWQmMXwyLGIuZmxhZ3N8PTY0O2Vsc2V7aWYobnVsbCE9PWEmJjAhPT0oYS5mbGFncyY2NCkpYTpmb3IoYT1iLmNoaWxkO251bGwhPT1hOyl7aWYoMTM9PT1hLnRhZyludWxsIT09YS5tZW1vaXplZFN0YXRlJiZ5aShhLGMpO2Vsc2UgaWYoMTk9PT1hLnRhZyl5aShhLGMpO2Vsc2UgaWYobnVsbCE9PWEuY2hpbGQpe2EuY2hpbGQucmV0dXJuPWE7YT1hLmNoaWxkO2NvbnRpbnVlfWlmKGE9PT1iKWJyZWFrIGE7Zm9yKDtudWxsPT09YS5zaWJsaW5nOyl7aWYobnVsbD09PWEucmV0dXJufHxhLnJldHVybj09PWIpYnJlYWsgYTthPWEucmV0dXJufWEuc2libGluZy5yZXR1cm49YS5yZXR1cm47YT1hLnNpYmxpbmd9ZCY9MX1JKFAsZCk7aWYoMD09PShiLm1vZGUmMikpYi5tZW1vaXplZFN0YXRlPVxubnVsbDtlbHNlIHN3aXRjaChlKXtjYXNlIFwiZm9yd2FyZHNcIjpjPWIuY2hpbGQ7Zm9yKGU9bnVsbDtudWxsIT09YzspYT1jLmFsdGVybmF0ZSxudWxsIT09YSYmbnVsbD09PWloKGEpJiYoZT1jKSxjPWMuc2libGluZztjPWU7bnVsbD09PWM/KGU9Yi5jaGlsZCxiLmNoaWxkPW51bGwpOihlPWMuc2libGluZyxjLnNpYmxpbmc9bnVsbCk7emkoYiwhMSxlLGMsZixiLmxhc3RFZmZlY3QpO2JyZWFrO2Nhc2UgXCJiYWNrd2FyZHNcIjpjPW51bGw7ZT1iLmNoaWxkO2ZvcihiLmNoaWxkPW51bGw7bnVsbCE9PWU7KXthPWUuYWx0ZXJuYXRlO2lmKG51bGwhPT1hJiZudWxsPT09aWgoYSkpe2IuY2hpbGQ9ZTticmVha31hPWUuc2libGluZztlLnNpYmxpbmc9YztjPWU7ZT1hfXppKGIsITAsYyxudWxsLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwidG9nZXRoZXJcIjp6aShiLCExLG51bGwsbnVsbCx2b2lkIDAsYi5sYXN0RWZmZWN0KTticmVhaztkZWZhdWx0OmIubWVtb2l6ZWRTdGF0ZT1udWxsfXJldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gaGkoYSxiLGMpe251bGwhPT1hJiYoYi5kZXBlbmRlbmNpZXM9YS5kZXBlbmRlbmNpZXMpO0RnfD1iLmxhbmVzO2lmKDAhPT0oYyZiLmNoaWxkTGFuZXMpKXtpZihudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQpdGhyb3cgRXJyb3IoeSgxNTMpKTtpZihudWxsIT09Yi5jaGlsZCl7YT1iLmNoaWxkO2M9VGcoYSxhLnBlbmRpbmdQcm9wcyk7Yi5jaGlsZD1jO2ZvcihjLnJldHVybj1iO251bGwhPT1hLnNpYmxpbmc7KWE9YS5zaWJsaW5nLGM9Yy5zaWJsaW5nPVRnKGEsYS5wZW5kaW5nUHJvcHMpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9cmV0dXJuIG51bGx9dmFyIEJpLENpLERpLEVpO1xuQmk9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9Yi5jaGlsZDtudWxsIT09Yzspe2lmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKWEuYXBwZW5kQ2hpbGQoYy5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWMudGFnJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319O0NpPWZ1bmN0aW9uKCl7fTtcbkRpPWZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWEubWVtb2l6ZWRQcm9wcztpZihlIT09ZCl7YT1iLnN0YXRlTm9kZTtkaChhaC5jdXJyZW50KTt2YXIgZj1udWxsO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjplPVlhKGEsZSk7ZD1ZYShhLGQpO2Y9W107YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmU9ZWIoYSxlKTtkPWViKGEsZCk7Zj1bXTticmVhaztjYXNlIFwic2VsZWN0XCI6ZT1tKHt9LGUse3ZhbHVlOnZvaWQgMH0pO2Q9bSh7fSxkLHt2YWx1ZTp2b2lkIDB9KTtmPVtdO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmU9Z2IoYSxlKTtkPWdiKGEsZCk7Zj1bXTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLm9uQ2xpY2smJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLm9uQ2xpY2smJihhLm9uY2xpY2s9amYpfXZiKGMsZCk7dmFyIGc7Yz1udWxsO2ZvcihsIGluIGUpaWYoIWQuaGFzT3duUHJvcGVydHkobCkmJmUuaGFzT3duUHJvcGVydHkobCkmJm51bGwhPWVbbF0paWYoXCJzdHlsZVwiPT09XG5sKXt2YXIgaD1lW2xdO2ZvcihnIGluIGgpaC5oYXNPd25Qcm9wZXJ0eShnKSYmKGN8fChjPXt9KSxjW2ddPVwiXCIpfWVsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIhPT1sJiZcImNoaWxkcmVuXCIhPT1sJiZcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09bCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWwmJlwiYXV0b0ZvY3VzXCIhPT1sJiYoY2EuaGFzT3duUHJvcGVydHkobCk/Znx8KGY9W10pOihmPWZ8fFtdKS5wdXNoKGwsbnVsbCkpO2ZvcihsIGluIGQpe3ZhciBrPWRbbF07aD1udWxsIT1lP2VbbF06dm9pZCAwO2lmKGQuaGFzT3duUHJvcGVydHkobCkmJmshPT1oJiYobnVsbCE9a3x8bnVsbCE9aCkpaWYoXCJzdHlsZVwiPT09bClpZihoKXtmb3IoZyBpbiBoKSFoLmhhc093blByb3BlcnR5KGcpfHxrJiZrLmhhc093blByb3BlcnR5KGcpfHwoY3x8KGM9e30pLGNbZ109XCJcIik7Zm9yKGcgaW4gaylrLmhhc093blByb3BlcnR5KGcpJiZoW2ddIT09a1tnXSYmKGN8fFxuKGM9e30pLGNbZ109a1tnXSl9ZWxzZSBjfHwoZnx8KGY9W10pLGYucHVzaChsLGMpKSxjPWs7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWw/KGs9az9rLl9faHRtbDp2b2lkIDAsaD1oP2guX19odG1sOnZvaWQgMCxudWxsIT1rJiZoIT09ayYmKGY9Znx8W10pLnB1c2gobCxrKSk6XCJjaGlsZHJlblwiPT09bD9cInN0cmluZ1wiIT09dHlwZW9mIGsmJlwibnVtYmVyXCIhPT10eXBlb2Yga3x8KGY9Znx8W10pLnB1c2gobCxcIlwiK2spOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1sJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09bCYmKGNhLmhhc093blByb3BlcnR5KGwpPyhudWxsIT1rJiZcIm9uU2Nyb2xsXCI9PT1sJiZHKFwic2Nyb2xsXCIsYSksZnx8aD09PWt8fChmPVtdKSk6XCJvYmplY3RcIj09PXR5cGVvZiBrJiZudWxsIT09ayYmay4kJHR5cGVvZj09PUdhP2sudG9TdHJpbmcoKTooZj1mfHxbXSkucHVzaChsLGspKX1jJiYoZj1mfHxbXSkucHVzaChcInN0eWxlXCIsXG5jKTt2YXIgbD1mO2lmKGIudXBkYXRlUXVldWU9bCliLmZsYWdzfD00fX07RWk9ZnVuY3Rpb24oYSxiLGMsZCl7YyE9PWQmJihiLmZsYWdzfD00KX07ZnVuY3Rpb24gRmkoYSxiKXtpZighbGgpc3dpdGNoKGEudGFpbE1vZGUpe2Nhc2UgXCJoaWRkZW5cIjpiPWEudGFpbDtmb3IodmFyIGM9bnVsbDtudWxsIT09YjspbnVsbCE9PWIuYWx0ZXJuYXRlJiYoYz1iKSxiPWIuc2libGluZztudWxsPT09Yz9hLnRhaWw9bnVsbDpjLnNpYmxpbmc9bnVsbDticmVhaztjYXNlIFwiY29sbGFwc2VkXCI6Yz1hLnRhaWw7Zm9yKHZhciBkPW51bGw7bnVsbCE9PWM7KW51bGwhPT1jLmFsdGVybmF0ZSYmKGQ9YyksYz1jLnNpYmxpbmc7bnVsbD09PWQ/Ynx8bnVsbD09PWEudGFpbD9hLnRhaWw9bnVsbDphLnRhaWwuc2libGluZz1udWxsOmQuc2libGluZz1udWxsfX1cbmZ1bmN0aW9uIEdpKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcztzd2l0Y2goYi50YWcpe2Nhc2UgMjpjYXNlIDE2OmNhc2UgMTU6Y2FzZSAwOmNhc2UgMTE6Y2FzZSA3OmNhc2UgODpjYXNlIDEyOmNhc2UgOTpjYXNlIDE0OnJldHVybiBudWxsO2Nhc2UgMTpyZXR1cm4gRmYoYi50eXBlKSYmR2YoKSxudWxsO2Nhc2UgMzpmaCgpO0goTik7SChNKTt1aCgpO2Q9Yi5zdGF0ZU5vZGU7ZC5wZW5kaW5nQ29udGV4dCYmKGQuY29udGV4dD1kLnBlbmRpbmdDb250ZXh0LGQucGVuZGluZ0NvbnRleHQ9bnVsbCk7aWYobnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKXJoKGIpP2IuZmxhZ3N8PTQ6ZC5oeWRyYXRlfHwoYi5mbGFnc3w9MjU2KTtDaShiKTtyZXR1cm4gbnVsbDtjYXNlIDU6aGgoYik7dmFyIGU9ZGgoY2guY3VycmVudCk7Yz1iLnR5cGU7aWYobnVsbCE9PWEmJm51bGwhPWIuc3RhdGVOb2RlKURpKGEsYixjLGQsZSksYS5yZWYhPT1iLnJlZiYmKGIuZmxhZ3N8PTEyOCk7ZWxzZXtpZighZCl7aWYobnVsbD09PVxuYi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IoeSgxNjYpKTtyZXR1cm4gbnVsbH1hPWRoKGFoLmN1cnJlbnQpO2lmKHJoKGIpKXtkPWIuc3RhdGVOb2RlO2M9Yi50eXBlO3ZhciBmPWIubWVtb2l6ZWRQcm9wcztkW3dmXT1iO2RbeGZdPWY7c3dpdGNoKGMpe2Nhc2UgXCJkaWFsb2dcIjpHKFwiY2FuY2VsXCIsZCk7RyhcImNsb3NlXCIsZCk7YnJlYWs7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwiZW1iZWRcIjpHKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihhPTA7YTxYZS5sZW5ndGg7YSsrKUcoWGVbYV0sZCk7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkcoXCJlcnJvclwiLGQpO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkcoXCJlcnJvclwiLGQpO0coXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpHKFwidG9nZ2xlXCIsZCk7YnJlYWs7Y2FzZSBcImlucHV0XCI6WmEoZCxmKTtHKFwiaW52YWxpZFwiLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpkLl93cmFwcGVyU3RhdGU9XG57d2FzTXVsdGlwbGU6ISFmLm11bHRpcGxlfTtHKFwiaW52YWxpZFwiLGQpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmhiKGQsZiksRyhcImludmFsaWRcIixkKX12YihjLGYpO2E9bnVsbDtmb3IodmFyIGcgaW4gZilmLmhhc093blByb3BlcnR5KGcpJiYoZT1mW2ddLFwiY2hpbGRyZW5cIj09PWc/XCJzdHJpbmdcIj09PXR5cGVvZiBlP2QudGV4dENvbnRlbnQhPT1lJiYoYT1bXCJjaGlsZHJlblwiLGVdKTpcIm51bWJlclwiPT09dHlwZW9mIGUmJmQudGV4dENvbnRlbnQhPT1cIlwiK2UmJihhPVtcImNoaWxkcmVuXCIsXCJcIitlXSk6Y2EuaGFzT3duUHJvcGVydHkoZykmJm51bGwhPWUmJlwib25TY3JvbGxcIj09PWcmJkcoXCJzY3JvbGxcIixkKSk7c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOlZhKGQpO2NiKGQsZiwhMCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6VmEoZCk7amIoZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJvcHRpb25cIjpicmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLm9uQ2xpY2smJihkLm9uY2xpY2s9XG5qZil9ZD1hO2IudXBkYXRlUXVldWU9ZDtudWxsIT09ZCYmKGIuZmxhZ3N8PTQpfWVsc2V7Zz05PT09ZS5ub2RlVHlwZT9lOmUub3duZXJEb2N1bWVudDthPT09a2IuaHRtbCYmKGE9bGIoYykpO2E9PT1rYi5odG1sP1wic2NyaXB0XCI9PT1jPyhhPWcuY3JlYXRlRWxlbWVudChcImRpdlwiKSxhLmlubmVySFRNTD1cIjxzY3JpcHQ+XFx4M2Mvc2NyaXB0PlwiLGE9YS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpKTpcInN0cmluZ1wiPT09dHlwZW9mIGQuaXM/YT1nLmNyZWF0ZUVsZW1lbnQoYyx7aXM6ZC5pc30pOihhPWcuY3JlYXRlRWxlbWVudChjKSxcInNlbGVjdFwiPT09YyYmKGc9YSxkLm11bHRpcGxlP2cubXVsdGlwbGU9ITA6ZC5zaXplJiYoZy5zaXplPWQuc2l6ZSkpKTphPWcuY3JlYXRlRWxlbWVudE5TKGEsYyk7YVt3Zl09YjthW3hmXT1kO0JpKGEsYiwhMSwhMSk7Yi5zdGF0ZU5vZGU9YTtnPXdiKGMsZCk7c3dpdGNoKGMpe2Nhc2UgXCJkaWFsb2dcIjpHKFwiY2FuY2VsXCIsYSk7RyhcImNsb3NlXCIsYSk7XG5lPWQ7YnJlYWs7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwiZW1iZWRcIjpHKFwibG9hZFwiLGEpO2U9ZDticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoZT0wO2U8WGUubGVuZ3RoO2UrKylHKFhlW2VdLGEpO2U9ZDticmVhaztjYXNlIFwic291cmNlXCI6RyhcImVycm9yXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkcoXCJlcnJvclwiLGEpO0coXCJsb2FkXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RyhcInRvZ2dsZVwiLGEpO2U9ZDticmVhaztjYXNlIFwiaW5wdXRcIjpaYShhLGQpO2U9WWEoYSxkKTtHKFwiaW52YWxpZFwiLGEpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjplPWViKGEsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEuX3dyYXBwZXJTdGF0ZT17d2FzTXVsdGlwbGU6ISFkLm11bHRpcGxlfTtlPW0oe30sZCx7dmFsdWU6dm9pZCAwfSk7RyhcImludmFsaWRcIixhKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpoYihhLGQpO2U9XG5nYihhLGQpO0coXCJpbnZhbGlkXCIsYSk7YnJlYWs7ZGVmYXVsdDplPWR9dmIoYyxlKTt2YXIgaD1lO2ZvcihmIGluIGgpaWYoaC5oYXNPd25Qcm9wZXJ0eShmKSl7dmFyIGs9aFtmXTtcInN0eWxlXCI9PT1mP3RiKGEsayk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zj8oaz1rP2suX19odG1sOnZvaWQgMCxudWxsIT1rJiZvYihhLGspKTpcImNoaWxkcmVuXCI9PT1mP1wic3RyaW5nXCI9PT10eXBlb2Ygaz8oXCJ0ZXh0YXJlYVwiIT09Y3x8XCJcIiE9PWspJiZwYihhLGspOlwibnVtYmVyXCI9PT10eXBlb2YgayYmcGIoYSxcIlwiK2spOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1mJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09ZiYmXCJhdXRvRm9jdXNcIiE9PWYmJihjYS5oYXNPd25Qcm9wZXJ0eShmKT9udWxsIT1rJiZcIm9uU2Nyb2xsXCI9PT1mJiZHKFwic2Nyb2xsXCIsYSk6bnVsbCE9ayYmcWEoYSxmLGssZykpfXN3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpWYShhKTtjYihhLGQsITEpO1xuYnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6VmEoYSk7amIoYSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPWQudmFsdWUmJmEuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK1NhKGQudmFsdWUpKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5tdWx0aXBsZT0hIWQubXVsdGlwbGU7Zj1kLnZhbHVlO251bGwhPWY/ZmIoYSwhIWQubXVsdGlwbGUsZiwhMSk6bnVsbCE9ZC5kZWZhdWx0VmFsdWUmJmZiKGEsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLm9uQ2xpY2smJihhLm9uY2xpY2s9amYpfW1mKGMsZCkmJihiLmZsYWdzfD00KX1udWxsIT09Yi5yZWYmJihiLmZsYWdzfD0xMjgpfXJldHVybiBudWxsO2Nhc2UgNjppZihhJiZudWxsIT1iLnN0YXRlTm9kZSlFaShhLGIsYS5tZW1vaXplZFByb3BzLGQpO2Vsc2V7aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBkJiZudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IoeSgxNjYpKTtcbmM9ZGgoY2guY3VycmVudCk7ZGgoYWguY3VycmVudCk7cmgoYik/KGQ9Yi5zdGF0ZU5vZGUsYz1iLm1lbW9pemVkUHJvcHMsZFt3Zl09YixkLm5vZGVWYWx1ZSE9PWMmJihiLmZsYWdzfD00KSk6KGQ9KDk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50KS5jcmVhdGVUZXh0Tm9kZShkKSxkW3dmXT1iLGIuc3RhdGVOb2RlPWQpfXJldHVybiBudWxsO2Nhc2UgMTM6SChQKTtkPWIubWVtb2l6ZWRTdGF0ZTtpZigwIT09KGIuZmxhZ3MmNjQpKXJldHVybiBiLmxhbmVzPWMsYjtkPW51bGwhPT1kO2M9ITE7bnVsbD09PWE/dm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLmZhbGxiYWNrJiZyaChiKTpjPW51bGwhPT1hLm1lbW9pemVkU3RhdGU7aWYoZCYmIWMmJjAhPT0oYi5tb2RlJjIpKWlmKG51bGw9PT1hJiYhMCE9PWIubWVtb2l6ZWRQcm9wcy51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFja3x8MCE9PShQLmN1cnJlbnQmMSkpMD09PVYmJihWPTMpO2Vsc2V7aWYoMD09PVZ8fDM9PT1WKVY9XG40O251bGw9PT1VfHwwPT09KERnJjEzNDIxNzcyNykmJjA9PT0oSGkmMTM0MjE3NzI3KXx8SWkoVSxXKX1pZihkfHxjKWIuZmxhZ3N8PTQ7cmV0dXJuIG51bGw7Y2FzZSA0OnJldHVybiBmaCgpLENpKGIpLG51bGw9PT1hJiZjZihiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxudWxsO2Nhc2UgMTA6cmV0dXJuIHJnKGIpLG51bGw7Y2FzZSAxNzpyZXR1cm4gRmYoYi50eXBlKSYmR2YoKSxudWxsO2Nhc2UgMTk6SChQKTtkPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsPT09ZClyZXR1cm4gbnVsbDtmPTAhPT0oYi5mbGFncyY2NCk7Zz1kLnJlbmRlcmluZztpZihudWxsPT09ZylpZihmKUZpKGQsITEpO2Vsc2V7aWYoMCE9PVZ8fG51bGwhPT1hJiYwIT09KGEuZmxhZ3MmNjQpKWZvcihhPWIuY2hpbGQ7bnVsbCE9PWE7KXtnPWloKGEpO2lmKG51bGwhPT1nKXtiLmZsYWdzfD02NDtGaShkLCExKTtmPWcudXBkYXRlUXVldWU7bnVsbCE9PWYmJihiLnVwZGF0ZVF1ZXVlPWYsYi5mbGFnc3w9NCk7XG5udWxsPT09ZC5sYXN0RWZmZWN0JiYoYi5maXJzdEVmZmVjdD1udWxsKTtiLmxhc3RFZmZlY3Q9ZC5sYXN0RWZmZWN0O2Q9Yztmb3IoYz1iLmNoaWxkO251bGwhPT1jOylmPWMsYT1kLGYuZmxhZ3MmPTIsZi5uZXh0RWZmZWN0PW51bGwsZi5maXJzdEVmZmVjdD1udWxsLGYubGFzdEVmZmVjdD1udWxsLGc9Zi5hbHRlcm5hdGUsbnVsbD09PWc/KGYuY2hpbGRMYW5lcz0wLGYubGFuZXM9YSxmLmNoaWxkPW51bGwsZi5tZW1vaXplZFByb3BzPW51bGwsZi5tZW1vaXplZFN0YXRlPW51bGwsZi51cGRhdGVRdWV1ZT1udWxsLGYuZGVwZW5kZW5jaWVzPW51bGwsZi5zdGF0ZU5vZGU9bnVsbCk6KGYuY2hpbGRMYW5lcz1nLmNoaWxkTGFuZXMsZi5sYW5lcz1nLmxhbmVzLGYuY2hpbGQ9Zy5jaGlsZCxmLm1lbW9pemVkUHJvcHM9Zy5tZW1vaXplZFByb3BzLGYubWVtb2l6ZWRTdGF0ZT1nLm1lbW9pemVkU3RhdGUsZi51cGRhdGVRdWV1ZT1nLnVwZGF0ZVF1ZXVlLGYudHlwZT1nLnR5cGUsYT1nLmRlcGVuZGVuY2llcyxcbmYuZGVwZW5kZW5jaWVzPW51bGw9PT1hP251bGw6e2xhbmVzOmEubGFuZXMsZmlyc3RDb250ZXh0OmEuZmlyc3RDb250ZXh0fSksYz1jLnNpYmxpbmc7SShQLFAuY3VycmVudCYxfDIpO3JldHVybiBiLmNoaWxkfWE9YS5zaWJsaW5nfW51bGwhPT1kLnRhaWwmJk8oKT5KaSYmKGIuZmxhZ3N8PTY0LGY9ITAsRmkoZCwhMSksYi5sYW5lcz0zMzU1NDQzMil9ZWxzZXtpZighZilpZihhPWloKGcpLG51bGwhPT1hKXtpZihiLmZsYWdzfD02NCxmPSEwLGM9YS51cGRhdGVRdWV1ZSxudWxsIT09YyYmKGIudXBkYXRlUXVldWU9YyxiLmZsYWdzfD00KSxGaShkLCEwKSxudWxsPT09ZC50YWlsJiZcImhpZGRlblwiPT09ZC50YWlsTW9kZSYmIWcuYWx0ZXJuYXRlJiYhbGgpcmV0dXJuIGI9Yi5sYXN0RWZmZWN0PWQubGFzdEVmZmVjdCxudWxsIT09YiYmKGIubmV4dEVmZmVjdD1udWxsKSxudWxsfWVsc2UgMipPKCktZC5yZW5kZXJpbmdTdGFydFRpbWU+SmkmJjEwNzM3NDE4MjQhPT1jJiYoYi5mbGFnc3w9XG42NCxmPSEwLEZpKGQsITEpLGIubGFuZXM9MzM1NTQ0MzIpO2QuaXNCYWNrd2FyZHM/KGcuc2libGluZz1iLmNoaWxkLGIuY2hpbGQ9Zyk6KGM9ZC5sYXN0LG51bGwhPT1jP2Muc2libGluZz1nOmIuY2hpbGQ9ZyxkLmxhc3Q9Zyl9cmV0dXJuIG51bGwhPT1kLnRhaWw/KGM9ZC50YWlsLGQucmVuZGVyaW5nPWMsZC50YWlsPWMuc2libGluZyxkLmxhc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0LGQucmVuZGVyaW5nU3RhcnRUaW1lPU8oKSxjLnNpYmxpbmc9bnVsbCxiPVAuY3VycmVudCxJKFAsZj9iJjF8MjpiJjEpLGMpOm51bGw7Y2FzZSAyMzpjYXNlIDI0OnJldHVybiBLaSgpLG51bGwhPT1hJiZudWxsIT09YS5tZW1vaXplZFN0YXRlIT09KG51bGwhPT1iLm1lbW9pemVkU3RhdGUpJiZcInVuc3RhYmxlLWRlZmVyLXdpdGhvdXQtaGlkaW5nXCIhPT1kLm1vZGUmJihiLmZsYWdzfD00KSxudWxsfXRocm93IEVycm9yKHkoMTU2LGIudGFnKSk7fVxuZnVuY3Rpb24gTGkoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDE6RmYoYS50eXBlKSYmR2YoKTt2YXIgYj1hLmZsYWdzO3JldHVybiBiJjQwOTY/KGEuZmxhZ3M9YiYtNDA5N3w2NCxhKTpudWxsO2Nhc2UgMzpmaCgpO0goTik7SChNKTt1aCgpO2I9YS5mbGFncztpZigwIT09KGImNjQpKXRocm93IEVycm9yKHkoMjg1KSk7YS5mbGFncz1iJi00MDk3fDY0O3JldHVybiBhO2Nhc2UgNTpyZXR1cm4gaGgoYSksbnVsbDtjYXNlIDEzOnJldHVybiBIKFApLGI9YS5mbGFncyxiJjQwOTY/KGEuZmxhZ3M9YiYtNDA5N3w2NCxhKTpudWxsO2Nhc2UgMTk6cmV0dXJuIEgoUCksbnVsbDtjYXNlIDQ6cmV0dXJuIGZoKCksbnVsbDtjYXNlIDEwOnJldHVybiByZyhhKSxudWxsO2Nhc2UgMjM6Y2FzZSAyNDpyZXR1cm4gS2koKSxudWxsO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24gTWkoYSxiKXt0cnl7dmFyIGM9XCJcIixkPWI7ZG8gYys9UWEoZCksZD1kLnJldHVybjt3aGlsZShkKTt2YXIgZT1jfWNhdGNoKGYpe2U9XCJcXG5FcnJvciBnZW5lcmF0aW5nIHN0YWNrOiBcIitmLm1lc3NhZ2UrXCJcXG5cIitmLnN0YWNrfXJldHVybnt2YWx1ZTphLHNvdXJjZTpiLHN0YWNrOmV9fWZ1bmN0aW9uIE5pKGEsYil7dHJ5e2NvbnNvbGUuZXJyb3IoYi52YWx1ZSl9Y2F0Y2goYyl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGM7fSl9fXZhciBPaT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcDtmdW5jdGlvbiBQaShhLGIsYyl7Yz16ZygtMSxjKTtjLnRhZz0zO2MucGF5bG9hZD17ZWxlbWVudDpudWxsfTt2YXIgZD1iLnZhbHVlO2MuY2FsbGJhY2s9ZnVuY3Rpb24oKXtRaXx8KFFpPSEwLFJpPWQpO05pKGEsYil9O3JldHVybiBjfVxuZnVuY3Rpb24gU2koYSxiLGMpe2M9emcoLTEsYyk7Yy50YWc9Mzt2YXIgZD1hLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgZT1iLnZhbHVlO2MucGF5bG9hZD1mdW5jdGlvbigpe05pKGEsYik7cmV0dXJuIGQoZSl9fXZhciBmPWEuc3RhdGVOb2RlO251bGwhPT1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5jb21wb25lbnREaWRDYXRjaCYmKGMuY2FsbGJhY2s9ZnVuY3Rpb24oKXtcImZ1bmN0aW9uXCIhPT10eXBlb2YgZCYmKG51bGw9PT1UaT9UaT1uZXcgU2V0KFt0aGlzXSk6VGkuYWRkKHRoaXMpLE5pKGEsYikpO3ZhciBjPWIuc3RhY2s7dGhpcy5jb21wb25lbnREaWRDYXRjaChiLnZhbHVlLHtjb21wb25lbnRTdGFjazpudWxsIT09Yz9jOlwiXCJ9KX0pO3JldHVybiBjfXZhciBVaT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha1NldD9XZWFrU2V0OlNldDtcbmZ1bmN0aW9uIFZpKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXRyeXtiKG51bGwpfWNhdGNoKGMpe1dpKGEsYyl9ZWxzZSBiLmN1cnJlbnQ9bnVsbH1mdW5jdGlvbiBYaShhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpjYXNlIDIyOnJldHVybjtjYXNlIDE6aWYoYi5mbGFncyYyNTYmJm51bGwhPT1hKXt2YXIgYz1hLm1lbW9pemVkUHJvcHMsZD1hLm1lbW9pemVkU3RhdGU7YT1iLnN0YXRlTm9kZTtiPWEuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoYi5lbGVtZW50VHlwZT09PWIudHlwZT9jOmxnKGIudHlwZSxjKSxkKTthLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlPWJ9cmV0dXJuO2Nhc2UgMzpiLmZsYWdzJjI1NiYmcWYoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7cmV0dXJuO2Nhc2UgNTpjYXNlIDY6Y2FzZSA0OmNhc2UgMTc6cmV0dXJufXRocm93IEVycm9yKHkoMTYzKSk7fVxuZnVuY3Rpb24gWWkoYSxiLGMpe3N3aXRjaChjLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpjYXNlIDIyOmI9Yy51cGRhdGVRdWV1ZTtiPW51bGwhPT1iP2IubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1iKXthPWI9Yi5uZXh0O2Rve2lmKDM9PT0oYS50YWcmMykpe3ZhciBkPWEuY3JlYXRlO2EuZGVzdHJveT1kKCl9YT1hLm5leHR9d2hpbGUoYSE9PWIpfWI9Yy51cGRhdGVRdWV1ZTtiPW51bGwhPT1iP2IubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1iKXthPWI9Yi5uZXh0O2Rve3ZhciBlPWE7ZD1lLm5leHQ7ZT1lLnRhZzswIT09KGUmNCkmJjAhPT0oZSYxKSYmKFppKGMsYSksJGkoYyxhKSk7YT1kfXdoaWxlKGEhPT1iKX1yZXR1cm47Y2FzZSAxOmE9Yy5zdGF0ZU5vZGU7Yy5mbGFncyY0JiYobnVsbD09PWI/YS5jb21wb25lbnREaWRNb3VudCgpOihkPWMuZWxlbWVudFR5cGU9PT1jLnR5cGU/Yi5tZW1vaXplZFByb3BzOmxnKGMudHlwZSxiLm1lbW9pemVkUHJvcHMpLGEuY29tcG9uZW50RGlkVXBkYXRlKGQsXG5iLm1lbW9pemVkU3RhdGUsYS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSkpKTtiPWMudXBkYXRlUXVldWU7bnVsbCE9PWImJkVnKGMsYixhKTtyZXR1cm47Y2FzZSAzOmI9Yy51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YT1udWxsO2lmKG51bGwhPT1jLmNoaWxkKXN3aXRjaChjLmNoaWxkLnRhZyl7Y2FzZSA1OmE9Yy5jaGlsZC5zdGF0ZU5vZGU7YnJlYWs7Y2FzZSAxOmE9Yy5jaGlsZC5zdGF0ZU5vZGV9RWcoYyxiLGEpfXJldHVybjtjYXNlIDU6YT1jLnN0YXRlTm9kZTtudWxsPT09YiYmYy5mbGFncyY0JiZtZihjLnR5cGUsYy5tZW1vaXplZFByb3BzKSYmYS5mb2N1cygpO3JldHVybjtjYXNlIDY6cmV0dXJuO2Nhc2UgNDpyZXR1cm47Y2FzZSAxMjpyZXR1cm47Y2FzZSAxMzpudWxsPT09Yy5tZW1vaXplZFN0YXRlJiYoYz1jLmFsdGVybmF0ZSxudWxsIT09YyYmKGM9Yy5tZW1vaXplZFN0YXRlLG51bGwhPT1jJiYoYz1jLmRlaHlkcmF0ZWQsbnVsbCE9PWMmJkNjKGMpKSkpO1xucmV0dXJuO2Nhc2UgMTk6Y2FzZSAxNzpjYXNlIDIwOmNhc2UgMjE6Y2FzZSAyMzpjYXNlIDI0OnJldHVybn10aHJvdyBFcnJvcih5KDE2MykpO31cbmZ1bmN0aW9uIGFqKGEsYil7Zm9yKHZhciBjPWE7Oyl7aWYoNT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihiKWQ9ZC5zdHlsZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5zZXRQcm9wZXJ0eT9kLnNldFByb3BlcnR5KFwiZGlzcGxheVwiLFwibm9uZVwiLFwiaW1wb3J0YW50XCIpOmQuZGlzcGxheT1cIm5vbmVcIjtlbHNle2Q9Yy5zdGF0ZU5vZGU7dmFyIGU9Yy5tZW1vaXplZFByb3BzLnN0eWxlO2U9dm9pZCAwIT09ZSYmbnVsbCE9PWUmJmUuaGFzT3duUHJvcGVydHkoXCJkaXNwbGF5XCIpP2UuZGlzcGxheTpudWxsO2Quc3R5bGUuZGlzcGxheT1zYihcImRpc3BsYXlcIixlKX19ZWxzZSBpZig2PT09Yy50YWcpYy5zdGF0ZU5vZGUubm9kZVZhbHVlPWI/XCJcIjpjLm1lbW9pemVkUHJvcHM7ZWxzZSBpZigoMjMhPT1jLnRhZyYmMjQhPT1jLnRhZ3x8bnVsbD09PWMubWVtb2l6ZWRTdGF0ZXx8Yz09PWEpJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PVxuYSlicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YSlyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX1cbmZ1bmN0aW9uIGJqKGEsYil7aWYoTWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBNZi5vbkNvbW1pdEZpYmVyVW5tb3VudCl0cnl7TWYub25Db21taXRGaWJlclVubW91bnQoTGYsYil9Y2F0Y2goZil7fXN3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmNhc2UgMjI6YT1iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1hJiYoYT1hLmxhc3RFZmZlY3QsbnVsbCE9PWEpKXt2YXIgYz1hPWEubmV4dDtkb3t2YXIgZD1jLGU9ZC5kZXN0cm95O2Q9ZC50YWc7aWYodm9pZCAwIT09ZSlpZigwIT09KGQmNCkpWmkoYixjKTtlbHNle2Q9Yjt0cnl7ZSgpfWNhdGNoKGYpe1dpKGQsZil9fWM9Yy5uZXh0fXdoaWxlKGMhPT1hKX1icmVhaztjYXNlIDE6VmkoYik7YT1iLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5jb21wb25lbnRXaWxsVW5tb3VudCl0cnl7YS5wcm9wcz1iLm1lbW9pemVkUHJvcHMsYS5zdGF0ZT1iLm1lbW9pemVkU3RhdGUsYS5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKGYpe1dpKGIsXG5mKX1icmVhaztjYXNlIDU6VmkoYik7YnJlYWs7Y2FzZSA0OmNqKGEsYil9fWZ1bmN0aW9uIGRqKGEpe2EuYWx0ZXJuYXRlPW51bGw7YS5jaGlsZD1udWxsO2EuZGVwZW5kZW5jaWVzPW51bGw7YS5maXJzdEVmZmVjdD1udWxsO2EubGFzdEVmZmVjdD1udWxsO2EubWVtb2l6ZWRQcm9wcz1udWxsO2EubWVtb2l6ZWRTdGF0ZT1udWxsO2EucGVuZGluZ1Byb3BzPW51bGw7YS5yZXR1cm49bnVsbDthLnVwZGF0ZVF1ZXVlPW51bGx9ZnVuY3Rpb24gZWooYSl7cmV0dXJuIDU9PT1hLnRhZ3x8Mz09PWEudGFnfHw0PT09YS50YWd9XG5mdW5jdGlvbiBmaihhKXthOntmb3IodmFyIGI9YS5yZXR1cm47bnVsbCE9PWI7KXtpZihlaihiKSlicmVhayBhO2I9Yi5yZXR1cm59dGhyb3cgRXJyb3IoeSgxNjApKTt9dmFyIGM9YjtiPWMuc3RhdGVOb2RlO3N3aXRjaChjLnRhZyl7Y2FzZSA1OnZhciBkPSExO2JyZWFrO2Nhc2UgMzpiPWIuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2Nhc2UgNDpiPWIuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgxNjEpKTt9Yy5mbGFncyYxNiYmKHBiKGIsXCJcIiksYy5mbGFncyY9LTE3KTthOmI6Zm9yKGM9YTs7KXtmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGVqKGMucmV0dXJuKSl7Yz1udWxsO2JyZWFrIGF9Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2ZvcihjPWMuc2libGluZzs1IT09Yy50YWcmJjYhPT1jLnRhZyYmMTghPT1jLnRhZzspe2lmKGMuZmxhZ3MmMiljb250aW51ZSBiO2lmKG51bGw9PT1cbmMuY2hpbGR8fDQ9PT1jLnRhZyljb250aW51ZSBiO2Vsc2UgYy5jaGlsZC5yZXR1cm49YyxjPWMuY2hpbGR9aWYoIShjLmZsYWdzJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWQ/Z2ooYSxjLGIpOmhqKGEsYyxiKX1cbmZ1bmN0aW9uIGdqKGEsYixjKXt2YXIgZD1hLnRhZyxlPTU9PT1kfHw2PT09ZDtpZihlKWE9ZT9hLnN0YXRlTm9kZTphLnN0YXRlTm9kZS5pbnN0YW5jZSxiPzg9PT1jLm5vZGVUeXBlP2MucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYSxiKTpjLmluc2VydEJlZm9yZShhLGIpOig4PT09Yy5ub2RlVHlwZT8oYj1jLnBhcmVudE5vZGUsYi5pbnNlcnRCZWZvcmUoYSxjKSk6KGI9YyxiLmFwcGVuZENoaWxkKGEpKSxjPWMuX3JlYWN0Um9vdENvbnRhaW5lcixudWxsIT09YyYmdm9pZCAwIT09Y3x8bnVsbCE9PWIub25jbGlja3x8KGIub25jbGljaz1qZikpO2Vsc2UgaWYoNCE9PWQmJihhPWEuY2hpbGQsbnVsbCE9PWEpKWZvcihnaihhLGIsYyksYT1hLnNpYmxpbmc7bnVsbCE9PWE7KWdqKGEsYixjKSxhPWEuc2libGluZ31cbmZ1bmN0aW9uIGhqKGEsYixjKXt2YXIgZD1hLnRhZyxlPTU9PT1kfHw2PT09ZDtpZihlKWE9ZT9hLnN0YXRlTm9kZTphLnN0YXRlTm9kZS5pbnN0YW5jZSxiP2MuaW5zZXJ0QmVmb3JlKGEsYik6Yy5hcHBlbmRDaGlsZChhKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoaGooYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOyloaihhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBjaihhLGIpe2Zvcih2YXIgYz1iLGQ9ITEsZSxmOzspe2lmKCFkKXtkPWMucmV0dXJuO2E6Zm9yKDs7KXtpZihudWxsPT09ZCl0aHJvdyBFcnJvcih5KDE2MCkpO2U9ZC5zdGF0ZU5vZGU7c3dpdGNoKGQudGFnKXtjYXNlIDU6Zj0hMTticmVhayBhO2Nhc2UgMzplPWUuY29udGFpbmVySW5mbztmPSEwO2JyZWFrIGE7Y2FzZSA0OmU9ZS5jb250YWluZXJJbmZvO2Y9ITA7YnJlYWsgYX1kPWQucmV0dXJufWQ9ITB9aWYoNT09PWMudGFnfHw2PT09Yy50YWcpe2E6Zm9yKHZhciBnPWEsaD1jLGs9aDs7KWlmKGJqKGcsayksbnVsbCE9PWsuY2hpbGQmJjQhPT1rLnRhZylrLmNoaWxkLnJldHVybj1rLGs9ay5jaGlsZDtlbHNle2lmKGs9PT1oKWJyZWFrIGE7Zm9yKDtudWxsPT09ay5zaWJsaW5nOyl7aWYobnVsbD09PWsucmV0dXJufHxrLnJldHVybj09PWgpYnJlYWsgYTtrPWsucmV0dXJufWsuc2libGluZy5yZXR1cm49ay5yZXR1cm47az1rLnNpYmxpbmd9Zj8oZz1lLGg9Yy5zdGF0ZU5vZGUsXG44PT09Zy5ub2RlVHlwZT9nLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoaCk6Zy5yZW1vdmVDaGlsZChoKSk6ZS5yZW1vdmVDaGlsZChjLnN0YXRlTm9kZSl9ZWxzZSBpZig0PT09Yy50YWcpe2lmKG51bGwhPT1jLmNoaWxkKXtlPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87Zj0hMDtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX19ZWxzZSBpZihiaihhLGMpLG51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YilicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YilyZXR1cm47Yz1jLnJldHVybjs0PT09Yy50YWcmJihkPSExKX1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX1cbmZ1bmN0aW9uIGlqKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6Y2FzZSAyMjp2YXIgYz1iLnVwZGF0ZVF1ZXVlO2M9bnVsbCE9PWM/Yy5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWMpe3ZhciBkPWM9Yy5uZXh0O2RvIDM9PT0oZC50YWcmMykmJihhPWQuZGVzdHJveSxkLmRlc3Ryb3k9dm9pZCAwLHZvaWQgMCE9PWEmJmEoKSksZD1kLm5leHQ7d2hpbGUoZCE9PWMpfXJldHVybjtjYXNlIDE6cmV0dXJuO2Nhc2UgNTpjPWIuc3RhdGVOb2RlO2lmKG51bGwhPWMpe2Q9Yi5tZW1vaXplZFByb3BzO3ZhciBlPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpkO2E9Yi50eXBlO3ZhciBmPWIudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT1udWxsO2lmKG51bGwhPT1mKXtjW3hmXT1kO1wiaW5wdXRcIj09PWEmJlwicmFkaW9cIj09PWQudHlwZSYmbnVsbCE9ZC5uYW1lJiYkYShjLGQpO3diKGEsZSk7Yj13YihhLGQpO2ZvcihlPTA7ZTxmLmxlbmd0aDtlKz1cbjIpe3ZhciBnPWZbZV0saD1mW2UrMV07XCJzdHlsZVwiPT09Zz90YihjLGgpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWc/b2IoYyxoKTpcImNoaWxkcmVuXCI9PT1nP3BiKGMsaCk6cWEoYyxnLGgsYil9c3dpdGNoKGEpe2Nhc2UgXCJpbnB1dFwiOmFiKGMsZCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aWIoYyxkKTticmVhaztjYXNlIFwic2VsZWN0XCI6YT1jLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGUsYy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlPSEhZC5tdWx0aXBsZSxmPWQudmFsdWUsbnVsbCE9Zj9mYihjLCEhZC5tdWx0aXBsZSxmLCExKTphIT09ISFkLm11bHRpcGxlJiYobnVsbCE9ZC5kZWZhdWx0VmFsdWU/ZmIoYywhIWQubXVsdGlwbGUsZC5kZWZhdWx0VmFsdWUsITApOmZiKGMsISFkLm11bHRpcGxlLGQubXVsdGlwbGU/W106XCJcIiwhMSkpfX19cmV0dXJuO2Nhc2UgNjppZihudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IoeSgxNjIpKTtiLnN0YXRlTm9kZS5ub2RlVmFsdWU9XG5iLm1lbW9pemVkUHJvcHM7cmV0dXJuO2Nhc2UgMzpjPWIuc3RhdGVOb2RlO2MuaHlkcmF0ZSYmKGMuaHlkcmF0ZT0hMSxDYyhjLmNvbnRhaW5lckluZm8pKTtyZXR1cm47Y2FzZSAxMjpyZXR1cm47Y2FzZSAxMzpudWxsIT09Yi5tZW1vaXplZFN0YXRlJiYoamo9TygpLGFqKGIuY2hpbGQsITApKTtraihiKTtyZXR1cm47Y2FzZSAxOTpraihiKTtyZXR1cm47Y2FzZSAxNzpyZXR1cm47Y2FzZSAyMzpjYXNlIDI0OmFqKGIsbnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSk7cmV0dXJufXRocm93IEVycm9yKHkoMTYzKSk7fWZ1bmN0aW9uIGtqKGEpe3ZhciBiPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWIpe2EudXBkYXRlUXVldWU9bnVsbDt2YXIgYz1hLnN0YXRlTm9kZTtudWxsPT09YyYmKGM9YS5zdGF0ZU5vZGU9bmV3IFVpKTtiLmZvckVhY2goZnVuY3Rpb24oYil7dmFyIGQ9bGouYmluZChudWxsLGEsYik7Yy5oYXMoYil8fChjLmFkZChiKSxiLnRoZW4oZCxkKSl9KX19XG5mdW5jdGlvbiBtaihhLGIpe3JldHVybiBudWxsIT09YSYmKGE9YS5tZW1vaXplZFN0YXRlLG51bGw9PT1hfHxudWxsIT09YS5kZWh5ZHJhdGVkKT8oYj1iLm1lbW9pemVkU3RhdGUsbnVsbCE9PWImJm51bGw9PT1iLmRlaHlkcmF0ZWQpOiExfXZhciBuaj1NYXRoLmNlaWwsb2o9cmEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixwaj1yYS5SZWFjdEN1cnJlbnRPd25lcixYPTAsVT1udWxsLFk9bnVsbCxXPTAscWo9MCxyaj1CZigwKSxWPTAsc2o9bnVsbCx0aj0wLERnPTAsSGk9MCx1aj0wLHZqPW51bGwsamo9MCxKaT1JbmZpbml0eTtmdW5jdGlvbiB3aigpe0ppPU8oKSs1MDB9dmFyIFo9bnVsbCxRaT0hMSxSaT1udWxsLFRpPW51bGwseGo9ITEseWo9bnVsbCx6aj05MCxBaj1bXSxCaj1bXSxDaj1udWxsLERqPTAsRWo9bnVsbCxGaj0tMSxHaj0wLEhqPTAsSWo9bnVsbCxKaj0hMTtmdW5jdGlvbiBIZygpe3JldHVybiAwIT09KFgmNDgpP08oKTotMSE9PUZqP0ZqOkZqPU8oKX1cbmZ1bmN0aW9uIElnKGEpe2E9YS5tb2RlO2lmKDA9PT0oYSYyKSlyZXR1cm4gMTtpZigwPT09KGEmNCkpcmV0dXJuIDk5PT09ZWcoKT8xOjI7MD09PUdqJiYoR2o9dGopO2lmKDAhPT1rZy50cmFuc2l0aW9uKXswIT09SGomJihIaj1udWxsIT09dmo/dmoucGVuZGluZ0xhbmVzOjApO2E9R2o7dmFyIGI9NDE4NjExMiZ+SGo7YiY9LWI7MD09PWImJihhPTQxODYxMTImfmEsYj1hJi1hLDA9PT1iJiYoYj04MTkyKSk7cmV0dXJuIGJ9YT1lZygpOzAhPT0oWCY0KSYmOTg9PT1hP2E9WGMoMTIsR2opOihhPVNjKGEpLGE9WGMoYSxHaikpO3JldHVybiBhfVxuZnVuY3Rpb24gSmcoYSxiLGMpe2lmKDUwPERqKXRocm93IERqPTAsRWo9bnVsbCxFcnJvcih5KDE4NSkpO2E9S2ooYSxiKTtpZihudWxsPT09YSlyZXR1cm4gbnVsbDskYyhhLGIsYyk7YT09PVUmJihIaXw9Yiw0PT09ViYmSWkoYSxXKSk7dmFyIGQ9ZWcoKTsxPT09Yj8wIT09KFgmOCkmJjA9PT0oWCY0OCk/TGooYSk6KE1qKGEsYyksMD09PVgmJih3aigpLGlnKCkpKTooMD09PShYJjQpfHw5OCE9PWQmJjk5IT09ZHx8KG51bGw9PT1Daj9Daj1uZXcgU2V0KFthXSk6Q2ouYWRkKGEpKSxNaihhLGMpKTt2aj1hfWZ1bmN0aW9uIEtqKGEsYil7YS5sYW5lc3w9Yjt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmKGMubGFuZXN8PWIpO2M9YTtmb3IoYT1hLnJldHVybjtudWxsIT09YTspYS5jaGlsZExhbmVzfD1iLGM9YS5hbHRlcm5hdGUsbnVsbCE9PWMmJihjLmNoaWxkTGFuZXN8PWIpLGM9YSxhPWEucmV0dXJuO3JldHVybiAzPT09Yy50YWc/Yy5zdGF0ZU5vZGU6bnVsbH1cbmZ1bmN0aW9uIE1qKGEsYil7Zm9yKHZhciBjPWEuY2FsbGJhY2tOb2RlLGQ9YS5zdXNwZW5kZWRMYW5lcyxlPWEucGluZ2VkTGFuZXMsZj1hLmV4cGlyYXRpb25UaW1lcyxnPWEucGVuZGluZ0xhbmVzOzA8Zzspe3ZhciBoPTMxLVZjKGcpLGs9MTw8aCxsPWZbaF07aWYoLTE9PT1sKXtpZigwPT09KGsmZCl8fDAhPT0oayZlKSl7bD1iO1JjKGspO3ZhciBuPUY7ZltoXT0xMDw9bj9sKzI1MDo2PD1uP2wrNUUzOi0xfX1lbHNlIGw8PWImJihhLmV4cGlyZWRMYW5lc3w9ayk7ZyY9fmt9ZD1VYyhhLGE9PT1VP1c6MCk7Yj1GO2lmKDA9PT1kKW51bGwhPT1jJiYoYyE9PVpmJiZQZihjKSxhLmNhbGxiYWNrTm9kZT1udWxsLGEuY2FsbGJhY2tQcmlvcml0eT0wKTtlbHNle2lmKG51bGwhPT1jKXtpZihhLmNhbGxiYWNrUHJpb3JpdHk9PT1iKXJldHVybjtjIT09WmYmJlBmKGMpfTE1PT09Yj8oYz1Mai5iaW5kKG51bGwsYSksbnVsbD09PWFnPyhhZz1bY10sYmc9T2YoVWYsamcpKTphZy5wdXNoKGMpLFxuYz1aZik6MTQ9PT1iP2M9aGcoOTksTGouYmluZChudWxsLGEpKTooYz1UYyhiKSxjPWhnKGMsTmouYmluZChudWxsLGEpKSk7YS5jYWxsYmFja1ByaW9yaXR5PWI7YS5jYWxsYmFja05vZGU9Y319XG5mdW5jdGlvbiBOaihhKXtGaj0tMTtIaj1Haj0wO2lmKDAhPT0oWCY0OCkpdGhyb3cgRXJyb3IoeSgzMjcpKTt2YXIgYj1hLmNhbGxiYWNrTm9kZTtpZihPaigpJiZhLmNhbGxiYWNrTm9kZSE9PWIpcmV0dXJuIG51bGw7dmFyIGM9VWMoYSxhPT09VT9XOjApO2lmKDA9PT1jKXJldHVybiBudWxsO3ZhciBkPWM7dmFyIGU9WDtYfD0xNjt2YXIgZj1QaigpO2lmKFUhPT1hfHxXIT09ZCl3aigpLFFqKGEsZCk7ZG8gdHJ5e1JqKCk7YnJlYWt9Y2F0Y2goaCl7U2ooYSxoKX13aGlsZSgxKTtxZygpO29qLmN1cnJlbnQ9ZjtYPWU7bnVsbCE9PVk/ZD0wOihVPW51bGwsVz0wLGQ9Vik7aWYoMCE9PSh0aiZIaSkpUWooYSwwKTtlbHNlIGlmKDAhPT1kKXsyPT09ZCYmKFh8PTY0LGEuaHlkcmF0ZSYmKGEuaHlkcmF0ZT0hMSxxZihhLmNvbnRhaW5lckluZm8pKSxjPVdjKGEpLDAhPT1jJiYoZD1UaihhLGMpKSk7aWYoMT09PWQpdGhyb3cgYj1zaixRaihhLDApLElpKGEsYyksTWooYSxPKCkpLGI7YS5maW5pc2hlZFdvcms9XG5hLmN1cnJlbnQuYWx0ZXJuYXRlO2EuZmluaXNoZWRMYW5lcz1jO3N3aXRjaChkKXtjYXNlIDA6Y2FzZSAxOnRocm93IEVycm9yKHkoMzQ1KSk7Y2FzZSAyOlVqKGEpO2JyZWFrO2Nhc2UgMzpJaShhLGMpO2lmKChjJjYyOTE0NTYwKT09PWMmJihkPWpqKzUwMC1PKCksMTA8ZCkpe2lmKDAhPT1VYyhhLDApKWJyZWFrO2U9YS5zdXNwZW5kZWRMYW5lcztpZigoZSZjKSE9PWMpe0hnKCk7YS5waW5nZWRMYW5lc3w9YS5zdXNwZW5kZWRMYW5lcyZlO2JyZWFrfWEudGltZW91dEhhbmRsZT1vZihVai5iaW5kKG51bGwsYSksZCk7YnJlYWt9VWooYSk7YnJlYWs7Y2FzZSA0OklpKGEsYyk7aWYoKGMmNDE4NjExMik9PT1jKWJyZWFrO2Q9YS5ldmVudFRpbWVzO2ZvcihlPS0xOzA8Yzspe3ZhciBnPTMxLVZjKGMpO2Y9MTw8ZztnPWRbZ107Zz5lJiYoZT1nKTtjJj1+Zn1jPWU7Yz1PKCktYztjPSgxMjA+Yz8xMjA6NDgwPmM/NDgwOjEwODA+Yz8xMDgwOjE5MjA+Yz8xOTIwOjNFMz5jPzNFMzo0MzIwPlxuYz80MzIwOjE5NjAqbmooYy8xOTYwKSktYztpZigxMDxjKXthLnRpbWVvdXRIYW5kbGU9b2YoVWouYmluZChudWxsLGEpLGMpO2JyZWFrfVVqKGEpO2JyZWFrO2Nhc2UgNTpVaihhKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHkoMzI5KSk7fX1NaihhLE8oKSk7cmV0dXJuIGEuY2FsbGJhY2tOb2RlPT09Yj9Oai5iaW5kKG51bGwsYSk6bnVsbH1mdW5jdGlvbiBJaShhLGIpe2ImPX51ajtiJj1+SGk7YS5zdXNwZW5kZWRMYW5lc3w9YjthLnBpbmdlZExhbmVzJj1+Yjtmb3IoYT1hLmV4cGlyYXRpb25UaW1lczswPGI7KXt2YXIgYz0zMS1WYyhiKSxkPTE8PGM7YVtjXT0tMTtiJj1+ZH19XG5mdW5jdGlvbiBMaihhKXtpZigwIT09KFgmNDgpKXRocm93IEVycm9yKHkoMzI3KSk7T2ooKTtpZihhPT09VSYmMCE9PShhLmV4cGlyZWRMYW5lcyZXKSl7dmFyIGI9Vzt2YXIgYz1UaihhLGIpOzAhPT0odGomSGkpJiYoYj1VYyhhLGIpLGM9VGooYSxiKSl9ZWxzZSBiPVVjKGEsMCksYz1UaihhLGIpOzAhPT1hLnRhZyYmMj09PWMmJihYfD02NCxhLmh5ZHJhdGUmJihhLmh5ZHJhdGU9ITEscWYoYS5jb250YWluZXJJbmZvKSksYj1XYyhhKSwwIT09YiYmKGM9VGooYSxiKSkpO2lmKDE9PT1jKXRocm93IGM9c2osUWooYSwwKSxJaShhLGIpLE1qKGEsTygpKSxjO2EuZmluaXNoZWRXb3JrPWEuY3VycmVudC5hbHRlcm5hdGU7YS5maW5pc2hlZExhbmVzPWI7VWooYSk7TWooYSxPKCkpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gVmooKXtpZihudWxsIT09Q2ope3ZhciBhPUNqO0NqPW51bGw7YS5mb3JFYWNoKGZ1bmN0aW9uKGEpe2EuZXhwaXJlZExhbmVzfD0yNCZhLnBlbmRpbmdMYW5lcztNaihhLE8oKSl9KX1pZygpfWZ1bmN0aW9uIFdqKGEsYil7dmFyIGM9WDtYfD0xO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1g9YywwPT09WCYmKHdqKCksaWcoKSl9fWZ1bmN0aW9uIFhqKGEsYil7dmFyIGM9WDtYJj0tMjtYfD04O3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1g9YywwPT09WCYmKHdqKCksaWcoKSl9fWZ1bmN0aW9uIG5pKGEsYil7SShyaixxaik7cWp8PWI7dGp8PWJ9ZnVuY3Rpb24gS2koKXtxaj1yai5jdXJyZW50O0gocmopfVxuZnVuY3Rpb24gUWooYSxiKXthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRMYW5lcz0wO3ZhciBjPWEudGltZW91dEhhbmRsZTstMSE9PWMmJihhLnRpbWVvdXRIYW5kbGU9LTEscGYoYykpO2lmKG51bGwhPT1ZKWZvcihjPVkucmV0dXJuO251bGwhPT1jOyl7dmFyIGQ9Yztzd2l0Y2goZC50YWcpe2Nhc2UgMTpkPWQudHlwZS5jaGlsZENvbnRleHRUeXBlcztudWxsIT09ZCYmdm9pZCAwIT09ZCYmR2YoKTticmVhaztjYXNlIDM6ZmgoKTtIKE4pO0goTSk7dWgoKTticmVhaztjYXNlIDU6aGgoZCk7YnJlYWs7Y2FzZSA0OmZoKCk7YnJlYWs7Y2FzZSAxMzpIKFApO2JyZWFrO2Nhc2UgMTk6SChQKTticmVhaztjYXNlIDEwOnJnKGQpO2JyZWFrO2Nhc2UgMjM6Y2FzZSAyNDpLaSgpfWM9Yy5yZXR1cm59VT1hO1k9VGcoYS5jdXJyZW50LG51bGwpO1c9cWo9dGo9YjtWPTA7c2o9bnVsbDt1aj1IaT1EZz0wfVxuZnVuY3Rpb24gU2ooYSxiKXtkb3t2YXIgYz1ZO3RyeXtxZygpO3ZoLmN1cnJlbnQ9R2g7aWYoeWgpe2Zvcih2YXIgZD1SLm1lbW9pemVkU3RhdGU7bnVsbCE9PWQ7KXt2YXIgZT1kLnF1ZXVlO251bGwhPT1lJiYoZS5wZW5kaW5nPW51bGwpO2Q9ZC5uZXh0fXloPSExfXhoPTA7VD1TPVI9bnVsbDt6aD0hMTtwai5jdXJyZW50PW51bGw7aWYobnVsbD09PWN8fG51bGw9PT1jLnJldHVybil7Vj0xO3NqPWI7WT1udWxsO2JyZWFrfWE6e3ZhciBmPWEsZz1jLnJldHVybixoPWMsaz1iO2I9VztoLmZsYWdzfD0yMDQ4O2guZmlyc3RFZmZlY3Q9aC5sYXN0RWZmZWN0PW51bGw7aWYobnVsbCE9PWsmJlwib2JqZWN0XCI9PT10eXBlb2YgayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGsudGhlbil7dmFyIGw9aztpZigwPT09KGgubW9kZSYyKSl7dmFyIG49aC5hbHRlcm5hdGU7bj8oaC51cGRhdGVRdWV1ZT1uLnVwZGF0ZVF1ZXVlLGgubWVtb2l6ZWRTdGF0ZT1uLm1lbW9pemVkU3RhdGUsaC5sYW5lcz1uLmxhbmVzKTpcbihoLnVwZGF0ZVF1ZXVlPW51bGwsaC5tZW1vaXplZFN0YXRlPW51bGwpfXZhciBBPTAhPT0oUC5jdXJyZW50JjEpLHA9Zztkb3t2YXIgQztpZihDPTEzPT09cC50YWcpe3ZhciB4PXAubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09eClDPW51bGwhPT14LmRlaHlkcmF0ZWQ/ITA6ITE7ZWxzZXt2YXIgdz1wLm1lbW9pemVkUHJvcHM7Qz12b2lkIDA9PT13LmZhbGxiYWNrPyExOiEwIT09dy51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjaz8hMDpBPyExOiEwfX1pZihDKXt2YXIgej1wLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT16KXt2YXIgdT1uZXcgU2V0O3UuYWRkKGwpO3AudXBkYXRlUXVldWU9dX1lbHNlIHouYWRkKGwpO2lmKDA9PT0ocC5tb2RlJjIpKXtwLmZsYWdzfD02NDtoLmZsYWdzfD0xNjM4NDtoLmZsYWdzJj0tMjk4MTtpZigxPT09aC50YWcpaWYobnVsbD09PWguYWx0ZXJuYXRlKWgudGFnPTE3O2Vsc2V7dmFyIHQ9emcoLTEsMSk7dC50YWc9MjtBZyhoLHQpfWgubGFuZXN8PTE7YnJlYWsgYX1rPVxudm9pZCAwO2g9Yjt2YXIgcT1mLnBpbmdDYWNoZTtudWxsPT09cT8ocT1mLnBpbmdDYWNoZT1uZXcgT2ksaz1uZXcgU2V0LHEuc2V0KGwsaykpOihrPXEuZ2V0KGwpLHZvaWQgMD09PWsmJihrPW5ldyBTZXQscS5zZXQobCxrKSkpO2lmKCFrLmhhcyhoKSl7ay5hZGQoaCk7dmFyIHY9WWouYmluZChudWxsLGYsbCxoKTtsLnRoZW4odix2KX1wLmZsYWdzfD00MDk2O3AubGFuZXM9YjticmVhayBhfXA9cC5yZXR1cm59d2hpbGUobnVsbCE9PXApO2s9RXJyb3IoKFJhKGgudHlwZSl8fFwiQSBSZWFjdCBjb21wb25lbnRcIikrXCIgc3VzcGVuZGVkIHdoaWxlIHJlbmRlcmluZywgYnV0IG5vIGZhbGxiYWNrIFVJIHdhcyBzcGVjaWZpZWQuXFxuXFxuQWRkIGEgPFN1c3BlbnNlIGZhbGxiYWNrPS4uLj4gY29tcG9uZW50IGhpZ2hlciBpbiB0aGUgdHJlZSB0byBwcm92aWRlIGEgbG9hZGluZyBpbmRpY2F0b3Igb3IgcGxhY2Vob2xkZXIgdG8gZGlzcGxheS5cIil9NSE9PVYmJihWPTIpO2s9TWkoayxoKTtwPVxuZztkb3tzd2l0Y2gocC50YWcpe2Nhc2UgMzpmPWs7cC5mbGFnc3w9NDA5NjtiJj0tYjtwLmxhbmVzfD1iO3ZhciBKPVBpKHAsZixiKTtCZyhwLEopO2JyZWFrIGE7Y2FzZSAxOmY9azt2YXIgSz1wLnR5cGUsUT1wLnN0YXRlTm9kZTtpZigwPT09KHAuZmxhZ3MmNjQpJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIEsuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxudWxsIT09USYmXCJmdW5jdGlvblwiPT09dHlwZW9mIFEuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09VGl8fCFUaS5oYXMoUSkpKSl7cC5mbGFnc3w9NDA5NjtiJj0tYjtwLmxhbmVzfD1iO3ZhciBMPVNpKHAsZixiKTtCZyhwLEwpO2JyZWFrIGF9fXA9cC5yZXR1cm59d2hpbGUobnVsbCE9PXApfVpqKGMpfWNhdGNoKHZhKXtiPXZhO1k9PT1jJiZudWxsIT09YyYmKFk9Yz1jLnJldHVybik7Y29udGludWV9YnJlYWt9d2hpbGUoMSl9XG5mdW5jdGlvbiBQaigpe3ZhciBhPW9qLmN1cnJlbnQ7b2ouY3VycmVudD1HaDtyZXR1cm4gbnVsbD09PWE/R2g6YX1mdW5jdGlvbiBUaihhLGIpe3ZhciBjPVg7WHw9MTY7dmFyIGQ9UGooKTtVPT09YSYmVz09PWJ8fFFqKGEsYik7ZG8gdHJ5e2FrKCk7YnJlYWt9Y2F0Y2goZSl7U2ooYSxlKX13aGlsZSgxKTtxZygpO1g9Yztvai5jdXJyZW50PWQ7aWYobnVsbCE9PVkpdGhyb3cgRXJyb3IoeSgyNjEpKTtVPW51bGw7Vz0wO3JldHVybiBWfWZ1bmN0aW9uIGFrKCl7Zm9yKDtudWxsIT09WTspYmsoWSl9ZnVuY3Rpb24gUmooKXtmb3IoO251bGwhPT1ZJiYhUWYoKTspYmsoWSl9ZnVuY3Rpb24gYmsoYSl7dmFyIGI9Y2soYS5hbHRlcm5hdGUsYSxxaik7YS5tZW1vaXplZFByb3BzPWEucGVuZGluZ1Byb3BzO251bGw9PT1iP1pqKGEpOlk9Yjtwai5jdXJyZW50PW51bGx9XG5mdW5jdGlvbiBaaihhKXt2YXIgYj1hO2Rve3ZhciBjPWIuYWx0ZXJuYXRlO2E9Yi5yZXR1cm47aWYoMD09PShiLmZsYWdzJjIwNDgpKXtjPUdpKGMsYixxaik7aWYobnVsbCE9PWMpe1k9YztyZXR1cm59Yz1iO2lmKDI0IT09Yy50YWcmJjIzIT09Yy50YWd8fG51bGw9PT1jLm1lbW9pemVkU3RhdGV8fDAhPT0ocWomMTA3Mzc0MTgyNCl8fDA9PT0oYy5tb2RlJjQpKXtmb3IodmFyIGQ9MCxlPWMuY2hpbGQ7bnVsbCE9PWU7KWR8PWUubGFuZXN8ZS5jaGlsZExhbmVzLGU9ZS5zaWJsaW5nO2MuY2hpbGRMYW5lcz1kfW51bGwhPT1hJiYwPT09KGEuZmxhZ3MmMjA0OCkmJihudWxsPT09YS5maXJzdEVmZmVjdCYmKGEuZmlyc3RFZmZlY3Q9Yi5maXJzdEVmZmVjdCksbnVsbCE9PWIubGFzdEVmZmVjdCYmKG51bGwhPT1hLmxhc3RFZmZlY3QmJihhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1iLmZpcnN0RWZmZWN0KSxhLmxhc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0KSwxPGIuZmxhZ3MmJihudWxsIT09XG5hLmxhc3RFZmZlY3Q/YS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YjphLmZpcnN0RWZmZWN0PWIsYS5sYXN0RWZmZWN0PWIpKX1lbHNle2M9TGkoYik7aWYobnVsbCE9PWMpe2MuZmxhZ3MmPTIwNDc7WT1jO3JldHVybn1udWxsIT09YSYmKGEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PW51bGwsYS5mbGFnc3w9MjA0OCl9Yj1iLnNpYmxpbmc7aWYobnVsbCE9PWIpe1k9YjtyZXR1cm59WT1iPWF9d2hpbGUobnVsbCE9PWIpOzA9PT1WJiYoVj01KX1mdW5jdGlvbiBVaihhKXt2YXIgYj1lZygpO2dnKDk5LGRrLmJpbmQobnVsbCxhLGIpKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGRrKGEsYil7ZG8gT2ooKTt3aGlsZShudWxsIT09eWopO2lmKDAhPT0oWCY0OCkpdGhyb3cgRXJyb3IoeSgzMjcpKTt2YXIgYz1hLmZpbmlzaGVkV29yaztpZihudWxsPT09YylyZXR1cm4gbnVsbDthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRMYW5lcz0wO2lmKGM9PT1hLmN1cnJlbnQpdGhyb3cgRXJyb3IoeSgxNzcpKTthLmNhbGxiYWNrTm9kZT1udWxsO3ZhciBkPWMubGFuZXN8Yy5jaGlsZExhbmVzLGU9ZCxmPWEucGVuZGluZ0xhbmVzJn5lO2EucGVuZGluZ0xhbmVzPWU7YS5zdXNwZW5kZWRMYW5lcz0wO2EucGluZ2VkTGFuZXM9MDthLmV4cGlyZWRMYW5lcyY9ZTthLm11dGFibGVSZWFkTGFuZXMmPWU7YS5lbnRhbmdsZWRMYW5lcyY9ZTtlPWEuZW50YW5nbGVtZW50cztmb3IodmFyIGc9YS5ldmVudFRpbWVzLGg9YS5leHBpcmF0aW9uVGltZXM7MDxmOyl7dmFyIGs9MzEtVmMoZiksbD0xPDxrO2Vba109MDtnW2tdPS0xO2hba109LTE7ZiY9fmx9bnVsbCE9PVxuQ2omJjA9PT0oZCYyNCkmJkNqLmhhcyhhKSYmQ2ouZGVsZXRlKGEpO2E9PT1VJiYoWT1VPW51bGwsVz0wKTsxPGMuZmxhZ3M/bnVsbCE9PWMubGFzdEVmZmVjdD8oYy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxkPWMuZmlyc3RFZmZlY3QpOmQ9YzpkPWMuZmlyc3RFZmZlY3Q7aWYobnVsbCE9PWQpe2U9WDtYfD0zMjtwai5jdXJyZW50PW51bGw7a2Y9ZmQ7Zz1OZSgpO2lmKE9lKGcpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBnKWg9e3N0YXJ0Omcuc2VsZWN0aW9uU3RhcnQsZW5kOmcuc2VsZWN0aW9uRW5kfTtlbHNlIGE6aWYoaD0oaD1nLm93bmVyRG9jdW1lbnQpJiZoLmRlZmF1bHRWaWV3fHx3aW5kb3csKGw9aC5nZXRTZWxlY3Rpb24mJmguZ2V0U2VsZWN0aW9uKCkpJiYwIT09bC5yYW5nZUNvdW50KXtoPWwuYW5jaG9yTm9kZTtmPWwuYW5jaG9yT2Zmc2V0O2s9bC5mb2N1c05vZGU7bD1sLmZvY3VzT2Zmc2V0O3RyeXtoLm5vZGVUeXBlLGsubm9kZVR5cGV9Y2F0Y2godmEpe2g9bnVsbDtcbmJyZWFrIGF9dmFyIG49MCxBPS0xLHA9LTEsQz0wLHg9MCx3PWcsej1udWxsO2I6Zm9yKDs7KXtmb3IodmFyIHU7Oyl7dyE9PWh8fDAhPT1mJiYzIT09dy5ub2RlVHlwZXx8KEE9bitmKTt3IT09a3x8MCE9PWwmJjMhPT13Lm5vZGVUeXBlfHwocD1uK2wpOzM9PT13Lm5vZGVUeXBlJiYobis9dy5ub2RlVmFsdWUubGVuZ3RoKTtpZihudWxsPT09KHU9dy5maXJzdENoaWxkKSlicmVhazt6PXc7dz11fWZvcig7Oyl7aWYodz09PWcpYnJlYWsgYjt6PT09aCYmKytDPT09ZiYmKEE9bik7ej09PWsmJisreD09PWwmJihwPW4pO2lmKG51bGwhPT0odT13Lm5leHRTaWJsaW5nKSlicmVhazt3PXo7ej13LnBhcmVudE5vZGV9dz11fWg9LTE9PT1BfHwtMT09PXA/bnVsbDp7c3RhcnQ6QSxlbmQ6cH19ZWxzZSBoPW51bGw7aD1ofHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBoPW51bGw7bGY9e2ZvY3VzZWRFbGVtOmcsc2VsZWN0aW9uUmFuZ2U6aH07ZmQ9ITE7SWo9bnVsbDtKaj0hMTtaPWQ7ZG8gdHJ5e2VrKCl9Y2F0Y2godmEpe2lmKG51bGw9PT1cblopdGhyb3cgRXJyb3IoeSgzMzApKTtXaShaLHZhKTtaPVoubmV4dEVmZmVjdH13aGlsZShudWxsIT09Wik7SWo9bnVsbDtaPWQ7ZG8gdHJ5e2ZvcihnPWE7bnVsbCE9PVo7KXt2YXIgdD1aLmZsYWdzO3QmMTYmJnBiKFouc3RhdGVOb2RlLFwiXCIpO2lmKHQmMTI4KXt2YXIgcT1aLmFsdGVybmF0ZTtpZihudWxsIT09cSl7dmFyIHY9cS5yZWY7bnVsbCE9PXYmJihcImZ1bmN0aW9uXCI9PT10eXBlb2Ygdj92KG51bGwpOnYuY3VycmVudD1udWxsKX19c3dpdGNoKHQmMTAzOCl7Y2FzZSAyOmZqKFopO1ouZmxhZ3MmPS0zO2JyZWFrO2Nhc2UgNjpmaihaKTtaLmZsYWdzJj0tMztpaihaLmFsdGVybmF0ZSxaKTticmVhaztjYXNlIDEwMjQ6Wi5mbGFncyY9LTEwMjU7YnJlYWs7Y2FzZSAxMDI4OlouZmxhZ3MmPS0xMDI1O2lqKFouYWx0ZXJuYXRlLFopO2JyZWFrO2Nhc2UgNDppaihaLmFsdGVybmF0ZSxaKTticmVhaztjYXNlIDg6aD1aO2NqKGcsaCk7dmFyIEo9aC5hbHRlcm5hdGU7ZGooaCk7bnVsbCE9PVxuSiYmZGooSil9Wj1aLm5leHRFZmZlY3R9fWNhdGNoKHZhKXtpZihudWxsPT09Wil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKFosdmEpO1o9Wi5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1aKTt2PWxmO3E9TmUoKTt0PXYuZm9jdXNlZEVsZW07Zz12LnNlbGVjdGlvblJhbmdlO2lmKHEhPT10JiZ0JiZ0Lm93bmVyRG9jdW1lbnQmJk1lKHQub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsdCkpe251bGwhPT1nJiZPZSh0KSYmKHE9Zy5zdGFydCx2PWcuZW5kLHZvaWQgMD09PXYmJih2PXEpLFwic2VsZWN0aW9uU3RhcnRcImluIHQ/KHQuc2VsZWN0aW9uU3RhcnQ9cSx0LnNlbGVjdGlvbkVuZD1NYXRoLm1pbih2LHQudmFsdWUubGVuZ3RoKSk6KHY9KHE9dC5vd25lckRvY3VtZW50fHxkb2N1bWVudCkmJnEuZGVmYXVsdFZpZXd8fHdpbmRvdyx2LmdldFNlbGVjdGlvbiYmKHY9di5nZXRTZWxlY3Rpb24oKSxoPXQudGV4dENvbnRlbnQubGVuZ3RoLEo9TWF0aC5taW4oZy5zdGFydCxoKSxnPXZvaWQgMD09PVxuZy5lbmQ/SjpNYXRoLm1pbihnLmVuZCxoKSwhdi5leHRlbmQmJko+ZyYmKGg9ZyxnPUosSj1oKSxoPUxlKHQsSiksZj1MZSh0LGcpLGgmJmYmJigxIT09di5yYW5nZUNvdW50fHx2LmFuY2hvck5vZGUhPT1oLm5vZGV8fHYuYW5jaG9yT2Zmc2V0IT09aC5vZmZzZXR8fHYuZm9jdXNOb2RlIT09Zi5ub2RlfHx2LmZvY3VzT2Zmc2V0IT09Zi5vZmZzZXQpJiYocT1xLmNyZWF0ZVJhbmdlKCkscS5zZXRTdGFydChoLm5vZGUsaC5vZmZzZXQpLHYucmVtb3ZlQWxsUmFuZ2VzKCksSj5nPyh2LmFkZFJhbmdlKHEpLHYuZXh0ZW5kKGYubm9kZSxmLm9mZnNldCkpOihxLnNldEVuZChmLm5vZGUsZi5vZmZzZXQpLHYuYWRkUmFuZ2UocSkpKSkpKTtxPVtdO2Zvcih2PXQ7dj12LnBhcmVudE5vZGU7KTE9PT12Lm5vZGVUeXBlJiZxLnB1c2goe2VsZW1lbnQ6dixsZWZ0OnYuc2Nyb2xsTGVmdCx0b3A6di5zY3JvbGxUb3B9KTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgdC5mb2N1cyYmdC5mb2N1cygpO2Zvcih0PVxuMDt0PHEubGVuZ3RoO3QrKyl2PXFbdF0sdi5lbGVtZW50LnNjcm9sbExlZnQ9di5sZWZ0LHYuZWxlbWVudC5zY3JvbGxUb3A9di50b3B9ZmQ9ISFrZjtsZj1rZj1udWxsO2EuY3VycmVudD1jO1o9ZDtkbyB0cnl7Zm9yKHQ9YTtudWxsIT09Wjspe3ZhciBLPVouZmxhZ3M7SyYzNiYmWWkodCxaLmFsdGVybmF0ZSxaKTtpZihLJjEyOCl7cT12b2lkIDA7dmFyIFE9Wi5yZWY7aWYobnVsbCE9PVEpe3ZhciBMPVouc3RhdGVOb2RlO3N3aXRjaChaLnRhZyl7Y2FzZSA1OnE9TDticmVhaztkZWZhdWx0OnE9TH1cImZ1bmN0aW9uXCI9PT10eXBlb2YgUT9RKHEpOlEuY3VycmVudD1xfX1aPVoubmV4dEVmZmVjdH19Y2F0Y2godmEpe2lmKG51bGw9PT1aKXRocm93IEVycm9yKHkoMzMwKSk7V2koWix2YSk7Wj1aLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVopO1o9bnVsbDskZigpO1g9ZX1lbHNlIGEuY3VycmVudD1jO2lmKHhqKXhqPSExLHlqPWEsemo9YjtlbHNlIGZvcihaPWQ7bnVsbCE9PVo7KWI9XG5aLm5leHRFZmZlY3QsWi5uZXh0RWZmZWN0PW51bGwsWi5mbGFncyY4JiYoSz1aLEsuc2libGluZz1udWxsLEsuc3RhdGVOb2RlPW51bGwpLFo9YjtkPWEucGVuZGluZ0xhbmVzOzA9PT1kJiYoVGk9bnVsbCk7MT09PWQ/YT09PUVqP0RqKys6KERqPTAsRWo9YSk6RGo9MDtjPWMuc3RhdGVOb2RlO2lmKE1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgTWYub25Db21taXRGaWJlclJvb3QpdHJ5e01mLm9uQ29tbWl0RmliZXJSb290KExmLGMsdm9pZCAwLDY0PT09KGMuY3VycmVudC5mbGFncyY2NCkpfWNhdGNoKHZhKXt9TWooYSxPKCkpO2lmKFFpKXRocm93IFFpPSExLGE9UmksUmk9bnVsbCxhO2lmKDAhPT0oWCY4KSlyZXR1cm4gbnVsbDtpZygpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gZWsoKXtmb3IoO251bGwhPT1aOyl7dmFyIGE9Wi5hbHRlcm5hdGU7Smp8fG51bGw9PT1Janx8KDAhPT0oWi5mbGFncyY4KT9kYyhaLElqKSYmKEpqPSEwKToxMz09PVoudGFnJiZtaihhLFopJiZkYyhaLElqKSYmKEpqPSEwKSk7dmFyIGI9Wi5mbGFnczswIT09KGImMjU2KSYmWGkoYSxaKTswPT09KGImNTEyKXx8eGp8fCh4aj0hMCxoZyg5NyxmdW5jdGlvbigpe09qKCk7cmV0dXJuIG51bGx9KSk7Wj1aLm5leHRFZmZlY3R9fWZ1bmN0aW9uIE9qKCl7aWYoOTAhPT16ail7dmFyIGE9OTc8emo/OTc6emo7emo9OTA7cmV0dXJuIGdnKGEsZmspfXJldHVybiExfWZ1bmN0aW9uICRpKGEsYil7QWoucHVzaChiLGEpO3hqfHwoeGo9ITAsaGcoOTcsZnVuY3Rpb24oKXtPaigpO3JldHVybiBudWxsfSkpfWZ1bmN0aW9uIFppKGEsYil7QmoucHVzaChiLGEpO3hqfHwoeGo9ITAsaGcoOTcsZnVuY3Rpb24oKXtPaigpO3JldHVybiBudWxsfSkpfVxuZnVuY3Rpb24gZmsoKXtpZihudWxsPT09eWopcmV0dXJuITE7dmFyIGE9eWo7eWo9bnVsbDtpZigwIT09KFgmNDgpKXRocm93IEVycm9yKHkoMzMxKSk7dmFyIGI9WDtYfD0zMjt2YXIgYz1CajtCaj1bXTtmb3IodmFyIGQ9MDtkPGMubGVuZ3RoO2QrPTIpe3ZhciBlPWNbZF0sZj1jW2QrMV0sZz1lLmRlc3Ryb3k7ZS5kZXN0cm95PXZvaWQgMDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyl0cnl7ZygpfWNhdGNoKGspe2lmKG51bGw9PT1mKXRocm93IEVycm9yKHkoMzMwKSk7V2koZixrKX19Yz1BajtBaj1bXTtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCs9Mil7ZT1jW2RdO2Y9Y1tkKzFdO3RyeXt2YXIgaD1lLmNyZWF0ZTtlLmRlc3Ryb3k9aCgpfWNhdGNoKGspe2lmKG51bGw9PT1mKXRocm93IEVycm9yKHkoMzMwKSk7V2koZixrKX19Zm9yKGg9YS5jdXJyZW50LmZpcnN0RWZmZWN0O251bGwhPT1oOylhPWgubmV4dEVmZmVjdCxoLm5leHRFZmZlY3Q9bnVsbCxoLmZsYWdzJjgmJihoLnNpYmxpbmc9XG5udWxsLGguc3RhdGVOb2RlPW51bGwpLGg9YTtYPWI7aWcoKTtyZXR1cm4hMH1mdW5jdGlvbiBnayhhLGIsYyl7Yj1NaShjLGIpO2I9UGkoYSxiLDEpO0FnKGEsYik7Yj1IZygpO2E9S2ooYSwxKTtudWxsIT09YSYmKCRjKGEsMSxiKSxNaihhLGIpKX1cbmZ1bmN0aW9uIFdpKGEsYil7aWYoMz09PWEudGFnKWdrKGEsYSxiKTtlbHNlIGZvcih2YXIgYz1hLnJldHVybjtudWxsIT09Yzspe2lmKDM9PT1jLnRhZyl7Z2soYyxhLGIpO2JyZWFrfWVsc2UgaWYoMT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09VGl8fCFUaS5oYXMoZCkpKXthPU1pKGIsYSk7dmFyIGU9U2koYyxhLDEpO0FnKGMsZSk7ZT1IZygpO2M9S2ooYywxKTtpZihudWxsIT09YykkYyhjLDEsZSksTWooYyxlKTtlbHNlIGlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVRpfHwhVGkuaGFzKGQpKSl0cnl7ZC5jb21wb25lbnREaWRDYXRjaChiLGEpfWNhdGNoKGYpe31icmVha319Yz1jLnJldHVybn19XG5mdW5jdGlvbiBZaihhLGIsYyl7dmFyIGQ9YS5waW5nQ2FjaGU7bnVsbCE9PWQmJmQuZGVsZXRlKGIpO2I9SGcoKTthLnBpbmdlZExhbmVzfD1hLnN1c3BlbmRlZExhbmVzJmM7VT09PWEmJihXJmMpPT09YyYmKDQ9PT1WfHwzPT09ViYmKFcmNjI5MTQ1NjApPT09VyYmNTAwPk8oKS1qaj9RaihhLDApOnVqfD1jKTtNaihhLGIpfWZ1bmN0aW9uIGxqKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbCE9PWMmJmMuZGVsZXRlKGIpO2I9MDswPT09YiYmKGI9YS5tb2RlLDA9PT0oYiYyKT9iPTE6MD09PShiJjQpP2I9OTk9PT1lZygpPzE6MjooMD09PUdqJiYoR2o9dGopLGI9WWMoNjI5MTQ1NjAmfkdqKSwwPT09YiYmKGI9NDE5NDMwNCkpKTtjPUhnKCk7YT1LaihhLGIpO251bGwhPT1hJiYoJGMoYSxiLGMpLE1qKGEsYykpfXZhciBjaztcbmNrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1iLmxhbmVzO2lmKG51bGwhPT1hKWlmKGEubWVtb2l6ZWRQcm9wcyE9PWIucGVuZGluZ1Byb3BzfHxOLmN1cnJlbnQpdWc9ITA7ZWxzZSBpZigwIT09KGMmZCkpdWc9MCE9PShhLmZsYWdzJjE2Mzg0KT8hMDohMTtlbHNle3VnPSExO3N3aXRjaChiLnRhZyl7Y2FzZSAzOnJpKGIpO3NoKCk7YnJlYWs7Y2FzZSA1OmdoKGIpO2JyZWFrO2Nhc2UgMTpGZihiLnR5cGUpJiZKZihiKTticmVhaztjYXNlIDQ6ZWgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOmQ9Yi5tZW1vaXplZFByb3BzLnZhbHVlO3ZhciBlPWIudHlwZS5fY29udGV4dDtJKG1nLGUuX2N1cnJlbnRWYWx1ZSk7ZS5fY3VycmVudFZhbHVlPWQ7YnJlYWs7Y2FzZSAxMzppZihudWxsIT09Yi5tZW1vaXplZFN0YXRlKXtpZigwIT09KGMmYi5jaGlsZC5jaGlsZExhbmVzKSlyZXR1cm4gdGkoYSxiLGMpO0koUCxQLmN1cnJlbnQmMSk7Yj1oaShhLGIsYyk7cmV0dXJuIG51bGwhPT1cbmI/Yi5zaWJsaW5nOm51bGx9SShQLFAuY3VycmVudCYxKTticmVhaztjYXNlIDE5OmQ9MCE9PShjJmIuY2hpbGRMYW5lcyk7aWYoMCE9PShhLmZsYWdzJjY0KSl7aWYoZClyZXR1cm4gQWkoYSxiLGMpO2IuZmxhZ3N8PTY0fWU9Yi5tZW1vaXplZFN0YXRlO251bGwhPT1lJiYoZS5yZW5kZXJpbmc9bnVsbCxlLnRhaWw9bnVsbCxlLmxhc3RFZmZlY3Q9bnVsbCk7SShQLFAuY3VycmVudCk7aWYoZClicmVhaztlbHNlIHJldHVybiBudWxsO2Nhc2UgMjM6Y2FzZSAyNDpyZXR1cm4gYi5sYW5lcz0wLG1pKGEsYixjKX1yZXR1cm4gaGkoYSxiLGMpfWVsc2UgdWc9ITE7Yi5sYW5lcz0wO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmQ9Yi50eXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpO2E9Yi5wZW5kaW5nUHJvcHM7ZT1FZihiLE0uY3VycmVudCk7dGcoYixjKTtlPUNoKG51bGwsYixkLGEsZSxjKTtiLmZsYWdzfD0xO2lmKFwib2JqZWN0XCI9PT1cbnR5cGVvZiBlJiZudWxsIT09ZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGUucmVuZGVyJiZ2b2lkIDA9PT1lLiQkdHlwZW9mKXtiLnRhZz0xO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtpZihGZihkKSl7dmFyIGY9ITA7SmYoYil9ZWxzZSBmPSExO2IubWVtb2l6ZWRTdGF0ZT1udWxsIT09ZS5zdGF0ZSYmdm9pZCAwIT09ZS5zdGF0ZT9lLnN0YXRlOm51bGw7eGcoYik7dmFyIGc9ZC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJkdnKGIsZCxnLGEpO2UudXBkYXRlcj1LZztiLnN0YXRlTm9kZT1lO2UuX3JlYWN0SW50ZXJuYWxzPWI7T2coYixkLGEsYyk7Yj1xaShudWxsLGIsZCwhMCxmLGMpfWVsc2UgYi50YWc9MCxmaShudWxsLGIsZSxjKSxiPWIuY2hpbGQ7cmV0dXJuIGI7Y2FzZSAxNjplPWIuZWxlbWVudFR5cGU7YTp7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9Mik7XG5hPWIucGVuZGluZ1Byb3BzO2Y9ZS5faW5pdDtlPWYoZS5fcGF5bG9hZCk7Yi50eXBlPWU7Zj1iLnRhZz1oayhlKTthPWxnKGUsYSk7c3dpdGNoKGYpe2Nhc2UgMDpiPWxpKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDE6Yj1waShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxMTpiPWdpKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDE0OmI9aWkobnVsbCxiLGUsbGcoZS50eXBlLGEpLGQsYyk7YnJlYWsgYX10aHJvdyBFcnJvcih5KDMwNixlLFwiXCIpKTt9cmV0dXJuIGI7Y2FzZSAwOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpsZyhkLGUpLGxpKGEsYixkLGUsYyk7Y2FzZSAxOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpsZyhkLGUpLHBpKGEsYixkLGUsYyk7Y2FzZSAzOnJpKGIpO2Q9Yi51cGRhdGVRdWV1ZTtpZihudWxsPT09YXx8bnVsbD09PWQpdGhyb3cgRXJyb3IoeSgyODIpKTtcbmQ9Yi5wZW5kaW5nUHJvcHM7ZT1iLm1lbW9pemVkU3RhdGU7ZT1udWxsIT09ZT9lLmVsZW1lbnQ6bnVsbDt5ZyhhLGIpO0NnKGIsZCxudWxsLGMpO2Q9Yi5tZW1vaXplZFN0YXRlLmVsZW1lbnQ7aWYoZD09PWUpc2goKSxiPWhpKGEsYixjKTtlbHNle2U9Yi5zdGF0ZU5vZGU7aWYoZj1lLmh5ZHJhdGUpa2g9cmYoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mby5maXJzdENoaWxkKSxqaD1iLGY9bGg9ITA7aWYoZil7YT1lLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE7aWYobnVsbCE9YSlmb3IoZT0wO2U8YS5sZW5ndGg7ZSs9MilmPWFbZV0sZi5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeT1hW2UrMV0sdGgucHVzaChmKTtjPVpnKGIsbnVsbCxkLGMpO2ZvcihiLmNoaWxkPWM7YzspYy5mbGFncz1jLmZsYWdzJi0zfDEwMjQsYz1jLnNpYmxpbmd9ZWxzZSBmaShhLGIsZCxjKSxzaCgpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDU6cmV0dXJuIGdoKGIpLG51bGw9PT1hJiZcbnBoKGIpLGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZj1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6bnVsbCxnPWUuY2hpbGRyZW4sbmYoZCxlKT9nPW51bGw6bnVsbCE9PWYmJm5mKGQsZikmJihiLmZsYWdzfD0xNiksb2koYSxiKSxmaShhLGIsZyxjKSxiLmNoaWxkO2Nhc2UgNjpyZXR1cm4gbnVsbD09PWEmJnBoKGIpLG51bGw7Y2FzZSAxMzpyZXR1cm4gdGkoYSxiLGMpO2Nhc2UgNDpyZXR1cm4gZWgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxkPWIucGVuZGluZ1Byb3BzLG51bGw9PT1hP2IuY2hpbGQ9WWcoYixudWxsLGQsYyk6ZmkoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDExOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpsZyhkLGUpLGdpKGEsYixkLGUsYyk7Y2FzZSA3OnJldHVybiBmaShhLGIsYi5wZW5kaW5nUHJvcHMsYyksYi5jaGlsZDtjYXNlIDg6cmV0dXJuIGZpKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixcbmMpLGIuY2hpbGQ7Y2FzZSAxMjpyZXR1cm4gZmkoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMDphOntkPWIudHlwZS5fY29udGV4dDtlPWIucGVuZGluZ1Byb3BzO2c9Yi5tZW1vaXplZFByb3BzO2Y9ZS52YWx1ZTt2YXIgaD1iLnR5cGUuX2NvbnRleHQ7SShtZyxoLl9jdXJyZW50VmFsdWUpO2guX2N1cnJlbnRWYWx1ZT1mO2lmKG51bGwhPT1nKWlmKGg9Zy52YWx1ZSxmPUhlKGgsZik/MDooXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzP2QuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzKGgsZik6MTA3Mzc0MTgyMyl8MCwwPT09Zil7aWYoZy5jaGlsZHJlbj09PWUuY2hpbGRyZW4mJiFOLmN1cnJlbnQpe2I9aGkoYSxiLGMpO2JyZWFrIGF9fWVsc2UgZm9yKGg9Yi5jaGlsZCxudWxsIT09aCYmKGgucmV0dXJuPWIpO251bGwhPT1oOyl7dmFyIGs9aC5kZXBlbmRlbmNpZXM7aWYobnVsbCE9PWspe2c9aC5jaGlsZDtmb3IodmFyIGw9XG5rLmZpcnN0Q29udGV4dDtudWxsIT09bDspe2lmKGwuY29udGV4dD09PWQmJjAhPT0obC5vYnNlcnZlZEJpdHMmZikpezE9PT1oLnRhZyYmKGw9emcoLTEsYyYtYyksbC50YWc9MixBZyhoLGwpKTtoLmxhbmVzfD1jO2w9aC5hbHRlcm5hdGU7bnVsbCE9PWwmJihsLmxhbmVzfD1jKTtzZyhoLnJldHVybixjKTtrLmxhbmVzfD1jO2JyZWFrfWw9bC5uZXh0fX1lbHNlIGc9MTA9PT1oLnRhZz9oLnR5cGU9PT1iLnR5cGU/bnVsbDpoLmNoaWxkOmguY2hpbGQ7aWYobnVsbCE9PWcpZy5yZXR1cm49aDtlbHNlIGZvcihnPWg7bnVsbCE9PWc7KXtpZihnPT09Yil7Zz1udWxsO2JyZWFrfWg9Zy5zaWJsaW5nO2lmKG51bGwhPT1oKXtoLnJldHVybj1nLnJldHVybjtnPWg7YnJlYWt9Zz1nLnJldHVybn1oPWd9ZmkoYSxiLGUuY2hpbGRyZW4sYyk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgOTpyZXR1cm4gZT1iLnR5cGUsZj1iLnBlbmRpbmdQcm9wcyxkPWYuY2hpbGRyZW4sdGcoYixjKSxlPXZnKGUsXG5mLnVuc3RhYmxlX29ic2VydmVkQml0cyksZD1kKGUpLGIuZmxhZ3N8PTEsZmkoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDE0OnJldHVybiBlPWIudHlwZSxmPWxnKGUsYi5wZW5kaW5nUHJvcHMpLGY9bGcoZS50eXBlLGYpLGlpKGEsYixlLGYsZCxjKTtjYXNlIDE1OnJldHVybiBraShhLGIsYi50eXBlLGIucGVuZGluZ1Byb3BzLGQsYyk7Y2FzZSAxNzpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKSxiLnRhZz0xLEZmKGQpPyhhPSEwLEpmKGIpKTphPSExLHRnKGIsYyksTWcoYixkLGUpLE9nKGIsZCxlLGMpLHFpKG51bGwsYixkLCEwLGEsYyk7Y2FzZSAxOTpyZXR1cm4gQWkoYSxiLGMpO2Nhc2UgMjM6cmV0dXJuIG1pKGEsYixjKTtjYXNlIDI0OnJldHVybiBtaShhLGIsYyl9dGhyb3cgRXJyb3IoeSgxNTYsYi50YWcpKTtcbn07ZnVuY3Rpb24gaWsoYSxiLGMsZCl7dGhpcy50YWc9YTt0aGlzLmtleT1jO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT10aGlzLmVsZW1lbnRUeXBlPW51bGw7dGhpcy5pbmRleD0wO3RoaXMucmVmPW51bGw7dGhpcy5wZW5kaW5nUHJvcHM9Yjt0aGlzLmRlcGVuZGVuY2llcz10aGlzLm1lbW9pemVkU3RhdGU9dGhpcy51cGRhdGVRdWV1ZT10aGlzLm1lbW9pemVkUHJvcHM9bnVsbDt0aGlzLm1vZGU9ZDt0aGlzLmZsYWdzPTA7dGhpcy5sYXN0RWZmZWN0PXRoaXMuZmlyc3RFZmZlY3Q9dGhpcy5uZXh0RWZmZWN0PW51bGw7dGhpcy5jaGlsZExhbmVzPXRoaXMubGFuZXM9MDt0aGlzLmFsdGVybmF0ZT1udWxsfWZ1bmN0aW9uIG5oKGEsYixjLGQpe3JldHVybiBuZXcgaWsoYSxiLGMsZCl9ZnVuY3Rpb24gamkoYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1cbmZ1bmN0aW9uIGhrKGEpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBqaShhKT8xOjA7aWYodm9pZCAwIT09YSYmbnVsbCE9PWEpe2E9YS4kJHR5cGVvZjtpZihhPT09QWEpcmV0dXJuIDExO2lmKGE9PT1EYSlyZXR1cm4gMTR9cmV0dXJuIDJ9XG5mdW5jdGlvbiBUZyhhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGw9PT1jPyhjPW5oKGEudGFnLGIsYS5rZXksYS5tb2RlKSxjLmVsZW1lbnRUeXBlPWEuZWxlbWVudFR5cGUsYy50eXBlPWEudHlwZSxjLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxjLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWMpOihjLnBlbmRpbmdQcm9wcz1iLGMudHlwZT1hLnR5cGUsYy5mbGFncz0wLGMubmV4dEVmZmVjdD1udWxsLGMuZmlyc3RFZmZlY3Q9bnVsbCxjLmxhc3RFZmZlY3Q9bnVsbCk7Yy5jaGlsZExhbmVzPWEuY2hpbGRMYW5lcztjLmxhbmVzPWEubGFuZXM7Yy5jaGlsZD1hLmNoaWxkO2MubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHM7Yy5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtjLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWU7Yj1hLmRlcGVuZGVuY2llcztjLmRlcGVuZGVuY2llcz1udWxsPT09Yj9udWxsOntsYW5lczpiLmxhbmVzLGZpcnN0Q29udGV4dDpiLmZpcnN0Q29udGV4dH07XG5jLnNpYmxpbmc9YS5zaWJsaW5nO2MuaW5kZXg9YS5pbmRleDtjLnJlZj1hLnJlZjtyZXR1cm4gY31cbmZ1bmN0aW9uIFZnKGEsYixjLGQsZSxmKXt2YXIgZz0yO2Q9YTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlqaShhKSYmKGc9MSk7ZWxzZSBpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpZz01O2Vsc2UgYTpzd2l0Y2goYSl7Y2FzZSB1YTpyZXR1cm4gWGcoYy5jaGlsZHJlbixlLGYsYik7Y2FzZSBIYTpnPTg7ZXw9MTY7YnJlYWs7Y2FzZSB3YTpnPTg7ZXw9MTticmVhaztjYXNlIHhhOnJldHVybiBhPW5oKDEyLGMsYixlfDgpLGEuZWxlbWVudFR5cGU9eGEsYS50eXBlPXhhLGEubGFuZXM9ZixhO2Nhc2UgQmE6cmV0dXJuIGE9bmgoMTMsYyxiLGUpLGEudHlwZT1CYSxhLmVsZW1lbnRUeXBlPUJhLGEubGFuZXM9ZixhO2Nhc2UgQ2E6cmV0dXJuIGE9bmgoMTksYyxiLGUpLGEuZWxlbWVudFR5cGU9Q2EsYS5sYW5lcz1mLGE7Y2FzZSBJYTpyZXR1cm4gdmkoYyxlLGYsYik7Y2FzZSBKYTpyZXR1cm4gYT1uaCgyNCxjLGIsZSksYS5lbGVtZW50VHlwZT1KYSxhLmxhbmVzPWYsYTtkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT1cbnR5cGVvZiBhJiZudWxsIT09YSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSB5YTpnPTEwO2JyZWFrIGE7Y2FzZSB6YTpnPTk7YnJlYWsgYTtjYXNlIEFhOmc9MTE7YnJlYWsgYTtjYXNlIERhOmc9MTQ7YnJlYWsgYTtjYXNlIEVhOmc9MTY7ZD1udWxsO2JyZWFrIGE7Y2FzZSBGYTpnPTIyO2JyZWFrIGF9dGhyb3cgRXJyb3IoeSgxMzAsbnVsbD09YT9hOnR5cGVvZiBhLFwiXCIpKTt9Yj1uaChnLGMsYixlKTtiLmVsZW1lbnRUeXBlPWE7Yi50eXBlPWQ7Yi5sYW5lcz1mO3JldHVybiBifWZ1bmN0aW9uIFhnKGEsYixjLGQpe2E9bmgoNyxhLGQsYik7YS5sYW5lcz1jO3JldHVybiBhfWZ1bmN0aW9uIHZpKGEsYixjLGQpe2E9bmgoMjMsYSxkLGIpO2EuZWxlbWVudFR5cGU9SWE7YS5sYW5lcz1jO3JldHVybiBhfWZ1bmN0aW9uIFVnKGEsYixjKXthPW5oKDYsYSxudWxsLGIpO2EubGFuZXM9YztyZXR1cm4gYX1cbmZ1bmN0aW9uIFdnKGEsYixjKXtiPW5oKDQsbnVsbCE9PWEuY2hpbGRyZW4/YS5jaGlsZHJlbjpbXSxhLmtleSxiKTtiLmxhbmVzPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifVxuZnVuY3Rpb24gamsoYSxiLGMpe3RoaXMudGFnPWI7dGhpcy5jb250YWluZXJJbmZvPWE7dGhpcy5maW5pc2hlZFdvcms9dGhpcy5waW5nQ2FjaGU9dGhpcy5jdXJyZW50PXRoaXMucGVuZGluZ0NoaWxkcmVuPW51bGw7dGhpcy50aW1lb3V0SGFuZGxlPS0xO3RoaXMucGVuZGluZ0NvbnRleHQ9dGhpcy5jb250ZXh0PW51bGw7dGhpcy5oeWRyYXRlPWM7dGhpcy5jYWxsYmFja05vZGU9bnVsbDt0aGlzLmNhbGxiYWNrUHJpb3JpdHk9MDt0aGlzLmV2ZW50VGltZXM9WmMoMCk7dGhpcy5leHBpcmF0aW9uVGltZXM9WmMoLTEpO3RoaXMuZW50YW5nbGVkTGFuZXM9dGhpcy5maW5pc2hlZExhbmVzPXRoaXMubXV0YWJsZVJlYWRMYW5lcz10aGlzLmV4cGlyZWRMYW5lcz10aGlzLnBpbmdlZExhbmVzPXRoaXMuc3VzcGVuZGVkTGFuZXM9dGhpcy5wZW5kaW5nTGFuZXM9MDt0aGlzLmVudGFuZ2xlbWVudHM9WmMoMCk7dGhpcy5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhPW51bGx9XG5mdW5jdGlvbiBrayhhLGIsYyl7dmFyIGQ9Mzxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOm51bGw7cmV0dXJueyQkdHlwZW9mOnRhLGtleTpudWxsPT1kP251bGw6XCJcIitkLGNoaWxkcmVuOmEsY29udGFpbmVySW5mbzpiLGltcGxlbWVudGF0aW9uOmN9fVxuZnVuY3Rpb24gbGsoYSxiLGMsZCl7dmFyIGU9Yi5jdXJyZW50LGY9SGcoKSxnPUlnKGUpO2E6aWYoYyl7Yz1jLl9yZWFjdEludGVybmFscztiOntpZihaYihjKSE9PWN8fDEhPT1jLnRhZyl0aHJvdyBFcnJvcih5KDE3MCkpO3ZhciBoPWM7ZG97c3dpdGNoKGgudGFnKXtjYXNlIDM6aD1oLnN0YXRlTm9kZS5jb250ZXh0O2JyZWFrIGI7Y2FzZSAxOmlmKEZmKGgudHlwZSkpe2g9aC5zdGF0ZU5vZGUuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ7YnJlYWsgYn19aD1oLnJldHVybn13aGlsZShudWxsIT09aCk7dGhyb3cgRXJyb3IoeSgxNzEpKTt9aWYoMT09PWMudGFnKXt2YXIgaz1jLnR5cGU7aWYoRmYoaykpe2M9SWYoYyxrLGgpO2JyZWFrIGF9fWM9aH1lbHNlIGM9Q2Y7bnVsbD09PWIuY29udGV4dD9iLmNvbnRleHQ9YzpiLnBlbmRpbmdDb250ZXh0PWM7Yj16ZyhmLGcpO2IucGF5bG9hZD17ZWxlbWVudDphfTtkPXZvaWQgMD09PWQ/bnVsbDpkO251bGwhPT1cbmQmJihiLmNhbGxiYWNrPWQpO0FnKGUsYik7SmcoZSxnLGYpO3JldHVybiBnfWZ1bmN0aW9uIG1rKGEpe2E9YS5jdXJyZW50O2lmKCFhLmNoaWxkKXJldHVybiBudWxsO3N3aXRjaChhLmNoaWxkLnRhZyl7Y2FzZSA1OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZTtkZWZhdWx0OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZX19ZnVuY3Rpb24gbmsoYSxiKXthPWEubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YSYmbnVsbCE9PWEuZGVoeWRyYXRlZCl7dmFyIGM9YS5yZXRyeUxhbmU7YS5yZXRyeUxhbmU9MCE9PWMmJmM8Yj9jOmJ9fWZ1bmN0aW9uIG9rKGEsYil7bmsoYSxiKTsoYT1hLmFsdGVybmF0ZSkmJm5rKGEsYil9ZnVuY3Rpb24gcGsoKXtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIHFrKGEsYixjKXt2YXIgZD1udWxsIT1jJiZudWxsIT1jLmh5ZHJhdGlvbk9wdGlvbnMmJmMuaHlkcmF0aW9uT3B0aW9ucy5tdXRhYmxlU291cmNlc3x8bnVsbDtjPW5ldyBqayhhLGIsbnVsbCE9YyYmITA9PT1jLmh5ZHJhdGUpO2I9bmgoMyxudWxsLG51bGwsMj09PWI/NzoxPT09Yj8zOjApO2MuY3VycmVudD1iO2Iuc3RhdGVOb2RlPWM7eGcoYik7YVtmZl09Yy5jdXJyZW50O2NmKDg9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphKTtpZihkKWZvcihhPTA7YTxkLmxlbmd0aDthKyspe2I9ZFthXTt2YXIgZT1iLl9nZXRWZXJzaW9uO2U9ZShiLl9zb3VyY2UpO251bGw9PWMubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YT9jLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE9W2IsZV06Yy5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhLnB1c2goYixlKX10aGlzLl9pbnRlcm5hbFJvb3Q9Y31cbnFrLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSl7bGsoYSx0aGlzLl9pbnRlcm5hbFJvb3QsbnVsbCxudWxsKX07cWsucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLl9pbnRlcm5hbFJvb3QsYj1hLmNvbnRhaW5lckluZm87bGsobnVsbCxhLG51bGwsZnVuY3Rpb24oKXtiW2ZmXT1udWxsfSl9O2Z1bmN0aW9uIHJrKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlJiYoOCE9PWEubm9kZVR5cGV8fFwiIHJlYWN0LW1vdW50LXBvaW50LXVuc3RhYmxlIFwiIT09YS5ub2RlVmFsdWUpKX1cbmZ1bmN0aW9uIHNrKGEsYil7Ynx8KGI9YT85PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLmZpcnN0Q2hpbGQ6bnVsbCxiPSEoIWJ8fDEhPT1iLm5vZGVUeXBlfHwhYi5oYXNBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0cm9vdFwiKSkpO2lmKCFiKWZvcih2YXIgYztjPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGMpO3JldHVybiBuZXcgcWsoYSwwLGI/e2h5ZHJhdGU6ITB9OnZvaWQgMCl9XG5mdW5jdGlvbiB0ayhhLGIsYyxkLGUpe3ZhciBmPWMuX3JlYWN0Um9vdENvbnRhaW5lcjtpZihmKXt2YXIgZz1mLl9pbnRlcm5hbFJvb3Q7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPW1rKGcpO2guY2FsbChhKX19bGsoYixnLGEsZSl9ZWxzZXtmPWMuX3JlYWN0Um9vdENvbnRhaW5lcj1zayhjLGQpO2c9Zi5faW50ZXJuYWxSb290O2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaz1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1tayhnKTtrLmNhbGwoYSl9fVhqKGZ1bmN0aW9uKCl7bGsoYixnLGEsZSl9KX1yZXR1cm4gbWsoZyl9ZWM9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9SGcoKTtKZyhhLDQsYik7b2soYSw0KX19O2ZjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPUhnKCk7SmcoYSw2NzEwODg2NCxiKTtvayhhLDY3MTA4ODY0KX19O1xuZ2M9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9SGcoKSxjPUlnKGEpO0pnKGEsYyxiKTtvayhhLGMpfX07aGM9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYigpfTtcbnliPWZ1bmN0aW9uKGEsYixjKXtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6YWIoYSxjKTtiPWMubmFtZTtpZihcInJhZGlvXCI9PT1jLnR5cGUmJm51bGwhPWIpe2ZvcihjPWE7Yy5wYXJlbnROb2RlOyljPWMucGFyZW50Tm9kZTtjPWMucXVlcnlTZWxlY3RvckFsbChcImlucHV0W25hbWU9XCIrSlNPTi5zdHJpbmdpZnkoXCJcIitiKSsnXVt0eXBlPVwicmFkaW9cIl0nKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKXt2YXIgZD1jW2JdO2lmKGQhPT1hJiZkLmZvcm09PT1hLmZvcm0pe3ZhciBlPURiKGQpO2lmKCFlKXRocm93IEVycm9yKHkoOTApKTtXYShkKTthYihkLGUpfX19YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aWIoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLnZhbHVlLG51bGwhPWImJmZiKGEsISFjLm11bHRpcGxlLGIsITEpfX07R2I9V2o7XG5IYj1mdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPVg7WHw9NDt0cnl7cmV0dXJuIGdnKDk4LGEuYmluZChudWxsLGIsYyxkLGUpKX1maW5hbGx5e1g9ZiwwPT09WCYmKHdqKCksaWcoKSl9fTtJYj1mdW5jdGlvbigpezA9PT0oWCY0OSkmJihWaigpLE9qKCkpfTtKYj1mdW5jdGlvbihhLGIpe3ZhciBjPVg7WHw9Mjt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtYPWMsMD09PVgmJih3aigpLGlnKCkpfX07ZnVuY3Rpb24gdWsoYSxiKXt2YXIgYz0yPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbDtpZighcmsoYikpdGhyb3cgRXJyb3IoeSgyMDApKTtyZXR1cm4ga2soYSxiLG51bGwsYyl9dmFyIHZrPXtFdmVudHM6W0NiLHVlLERiLEViLEZiLE9qLHtjdXJyZW50OiExfV19LHdrPXtmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTp3YyxidW5kbGVUeXBlOjAsdmVyc2lvbjpcIjE3LjAuMlwiLHJlbmRlcmVyUGFja2FnZU5hbWU6XCJyZWFjdC1kb21cIn07XG52YXIgeGs9e2J1bmRsZVR5cGU6d2suYnVuZGxlVHlwZSx2ZXJzaW9uOndrLnZlcnNpb24scmVuZGVyZXJQYWNrYWdlTmFtZTp3ay5yZW5kZXJlclBhY2thZ2VOYW1lLHJlbmRlcmVyQ29uZmlnOndrLnJlbmRlcmVyQ29uZmlnLG92ZXJyaWRlSG9va1N0YXRlOm51bGwsb3ZlcnJpZGVIb29rU3RhdGVEZWxldGVQYXRoOm51bGwsb3ZlcnJpZGVIb29rU3RhdGVSZW5hbWVQYXRoOm51bGwsb3ZlcnJpZGVQcm9wczpudWxsLG92ZXJyaWRlUHJvcHNEZWxldGVQYXRoOm51bGwsb3ZlcnJpZGVQcm9wc1JlbmFtZVBhdGg6bnVsbCxzZXRTdXNwZW5zZUhhbmRsZXI6bnVsbCxzY2hlZHVsZVVwZGF0ZTpudWxsLGN1cnJlbnREaXNwYXRjaGVyUmVmOnJhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsZmluZEhvc3RJbnN0YW5jZUJ5RmliZXI6ZnVuY3Rpb24oYSl7YT1jYyhhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6d2suZmluZEZpYmVyQnlIb3N0SW5zdGFuY2V8fFxucGssZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoOm51bGwsc2NoZWR1bGVSZWZyZXNoOm51bGwsc2NoZWR1bGVSb290Om51bGwsc2V0UmVmcmVzaEhhbmRsZXI6bnVsbCxnZXRDdXJyZW50RmliZXI6bnVsbH07aWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18pe3ZhciB5az1fX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX187aWYoIXlrLmlzRGlzYWJsZWQmJnlrLnN1cHBvcnRzRmliZXIpdHJ5e0xmPXlrLmluamVjdCh4ayksTWY9eWt9Y2F0Y2goYSl7fX1leHBvcnRzLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEPXZrO2V4cG9ydHMuY3JlYXRlUG9ydGFsPXVrO1xuZXhwb3J0cy5maW5kRE9NTm9kZT1mdW5jdGlvbihhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKDE9PT1hLm5vZGVUeXBlKXJldHVybiBhO3ZhciBiPWEuX3JlYWN0SW50ZXJuYWxzO2lmKHZvaWQgMD09PWIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcil0aHJvdyBFcnJvcih5KDE4OCkpO3Rocm93IEVycm9yKHkoMjY4LE9iamVjdC5rZXlzKGEpKSk7fWE9Y2MoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfTtleHBvcnRzLmZsdXNoU3luYz1mdW5jdGlvbihhLGIpe3ZhciBjPVg7aWYoMCE9PShjJjQ4KSlyZXR1cm4gYShiKTtYfD0xO3RyeXtpZihhKXJldHVybiBnZyg5OSxhLmJpbmQobnVsbCxiKSl9ZmluYWxseXtYPWMsaWcoKX19O2V4cG9ydHMuaHlkcmF0ZT1mdW5jdGlvbihhLGIsYyl7aWYoIXJrKGIpKXRocm93IEVycm9yKHkoMjAwKSk7cmV0dXJuIHRrKG51bGwsYSxiLCEwLGMpfTtcbmV4cG9ydHMucmVuZGVyPWZ1bmN0aW9uKGEsYixjKXtpZighcmsoYikpdGhyb3cgRXJyb3IoeSgyMDApKTtyZXR1cm4gdGsobnVsbCxhLGIsITEsYyl9O2V4cG9ydHMudW5tb3VudENvbXBvbmVudEF0Tm9kZT1mdW5jdGlvbihhKXtpZighcmsoYSkpdGhyb3cgRXJyb3IoeSg0MCkpO3JldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXI/KFhqKGZ1bmN0aW9uKCl7dGsobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbDthW2ZmXT1udWxsfSl9KSwhMCk6ITF9O2V4cG9ydHMudW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXM9V2o7ZXhwb3J0cy51bnN0YWJsZV9jcmVhdGVQb3J0YWw9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdWsoYSxiLDI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsKX07XG5leHBvcnRzLnVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyPWZ1bmN0aW9uKGEsYixjLGQpe2lmKCFyayhjKSl0aHJvdyBFcnJvcih5KDIwMCkpO2lmKG51bGw9PWF8fHZvaWQgMD09PWEuX3JlYWN0SW50ZXJuYWxzKXRocm93IEVycm9yKHkoMzgpKTtyZXR1cm4gdGsoYSxiLGMsITEsZCl9O2V4cG9ydHMudmVyc2lvbj1cIjE3LjAuMlwiO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBjaGVja0RDRSgpIHtcbiAgLyogZ2xvYmFsIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAqL1xuICBpZiAoXG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyA9PT0gJ3VuZGVmaW5lZCcgfHxcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFICE9PSAnZnVuY3Rpb24nXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIFRoaXMgYnJhbmNoIGlzIHVucmVhY2hhYmxlIGJlY2F1c2UgdGhpcyBmdW5jdGlvbiBpcyBvbmx5IGNhbGxlZFxuICAgIC8vIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgY29uZGl0aW9uIGlzIHRydWUgb25seSBpbiBkZXZlbG9wbWVudC5cbiAgICAvLyBUaGVyZWZvcmUgaWYgdGhlIGJyYW5jaCBpcyBzdGlsbCBoZXJlLCBkZWFkIGNvZGUgZWxpbWluYXRpb24gd2Fzbid0XG4gICAgLy8gcHJvcGVybHkgYXBwbGllZC5cbiAgICAvLyBEb24ndCBjaGFuZ2UgdGhlIG1lc3NhZ2UuIFJlYWN0IERldlRvb2xzIHJlbGllcyBvbiBpdC4gQWxzbyBtYWtlIHN1cmVcbiAgICAvLyB0aGlzIG1lc3NhZ2UgZG9lc24ndCBvY2N1ciBlbHNld2hlcmUgaW4gdGhpcyBmdW5jdGlvbiwgb3IgaXQgd2lsbCBjYXVzZVxuICAgIC8vIGEgZmFsc2UgcG9zaXRpdmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKCdeX14nKTtcbiAgfVxuICB0cnkge1xuICAgIC8vIFZlcmlmeSB0aGF0IHRoZSBjb2RlIGFib3ZlIGhhcyBiZWVuIGRlYWQgY29kZSBlbGltaW5hdGVkIChEQ0UnZCkuXG4gICAgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFKGNoZWNrRENFKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLy8gRGV2VG9vbHMgc2hvdWxkbid0IGNyYXNoIFJlYWN0LCBubyBtYXR0ZXIgd2hhdC5cbiAgICAvLyBXZSBzaG91bGQgc3RpbGwgcmVwb3J0IGluIGNhc2Ugd2UgYnJlYWsgdGhpcyBjb2RlLlxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgfVxufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAvLyBEQ0UgY2hlY2sgc2hvdWxkIGhhcHBlbiBiZWZvcmUgUmVhY3RET00gYnVuZGxlIGV4ZWN1dGVzIHNvIHRoYXRcbiAgLy8gRGV2VG9vbHMgY2FuIHJlcG9ydCBiYWQgbWluaWZpY2F0aW9uIGR1cmluZyBpbmplY3Rpb24uXG4gIGNoZWNrRENFKCk7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNy4wLjJcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0Jzt2YXIgbD1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxuPTYwMTAzLHA9NjAxMDY7ZXhwb3J0cy5GcmFnbWVudD02MDEwNztleHBvcnRzLlN0cmljdE1vZGU9NjAxMDg7ZXhwb3J0cy5Qcm9maWxlcj02MDExNDt2YXIgcT02MDEwOSxyPTYwMTEwLHQ9NjAxMTI7ZXhwb3J0cy5TdXNwZW5zZT02MDExMzt2YXIgdT02MDExNSx2PTYwMTE2O1xuaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcil7dmFyIHc9U3ltYm9sLmZvcjtuPXcoXCJyZWFjdC5lbGVtZW50XCIpO3A9dyhcInJlYWN0LnBvcnRhbFwiKTtleHBvcnRzLkZyYWdtZW50PXcoXCJyZWFjdC5mcmFnbWVudFwiKTtleHBvcnRzLlN0cmljdE1vZGU9dyhcInJlYWN0LnN0cmljdF9tb2RlXCIpO2V4cG9ydHMuUHJvZmlsZXI9dyhcInJlYWN0LnByb2ZpbGVyXCIpO3E9dyhcInJlYWN0LnByb3ZpZGVyXCIpO3I9dyhcInJlYWN0LmNvbnRleHRcIik7dD13KFwicmVhY3QuZm9yd2FyZF9yZWZcIik7ZXhwb3J0cy5TdXNwZW5zZT13KFwicmVhY3Quc3VzcGVuc2VcIik7dT13KFwicmVhY3QubWVtb1wiKTt2PXcoXCJyZWFjdC5sYXp5XCIpfXZhciB4PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtcbmZ1bmN0aW9uIHkoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPXgmJmFbeF18fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH1mdW5jdGlvbiB6KGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifVxudmFyIEE9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEI9e307ZnVuY3Rpb24gQyhhLGIsYyl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1CO3RoaXMudXBkYXRlcj1jfHxBfUMucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ9e307Qy5wcm90b3R5cGUuc2V0U3RhdGU9ZnVuY3Rpb24oYSxiKXtpZihcIm9iamVjdFwiIT09dHlwZW9mIGEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZudWxsIT1hKXRocm93IEVycm9yKHooODUpKTt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0MucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O1xuZnVuY3Rpb24gRCgpe31ELnByb3RvdHlwZT1DLnByb3RvdHlwZTtmdW5jdGlvbiBFKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUI7dGhpcy51cGRhdGVyPWN8fEF9dmFyIEY9RS5wcm90b3R5cGU9bmV3IEQ7Ri5jb25zdHJ1Y3Rvcj1FO2woRixDLnByb3RvdHlwZSk7Ri5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgRz17Y3VycmVudDpudWxsfSxIPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksST17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xuZnVuY3Rpb24gSihhLGIsYyl7dmFyIGUsZD17fSxrPW51bGwsaD1udWxsO2lmKG51bGwhPWIpZm9yKGUgaW4gdm9pZCAwIT09Yi5yZWYmJihoPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGs9XCJcIitiLmtleSksYilILmNhbGwoYixlKSYmIUkuaGFzT3duUHJvcGVydHkoZSkmJihkW2VdPWJbZV0pO3ZhciBnPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZylkLmNoaWxkcmVuPWM7ZWxzZSBpZigxPGcpe2Zvcih2YXIgZj1BcnJheShnKSxtPTA7bTxnO20rKylmW21dPWFyZ3VtZW50c1ttKzJdO2QuY2hpbGRyZW49Zn1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoZSBpbiBnPWEuZGVmYXVsdFByb3BzLGcpdm9pZCAwPT09ZFtlXSYmKGRbZV09Z1tlXSk7cmV0dXJueyQkdHlwZW9mOm4sdHlwZTphLGtleTprLHJlZjpoLHByb3BzOmQsX293bmVyOkcuY3VycmVudH19XG5mdW5jdGlvbiBLKGEsYil7cmV0dXJueyQkdHlwZW9mOm4sdHlwZTphLnR5cGUsa2V5OmIscmVmOmEucmVmLHByb3BzOmEucHJvcHMsX293bmVyOmEuX293bmVyfX1mdW5jdGlvbiBMKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1ufWZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCI9XCI6XCI9MFwiLFwiOlwiOlwiPTJcIn07cmV0dXJuXCIkXCIrYS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgTT0vXFwvKy9nO2Z1bmN0aW9uIE4oYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoXCJcIithLmtleSk6Yi50b1N0cmluZygzNil9XG5mdW5jdGlvbiBPKGEsYixjLGUsZCl7dmFyIGs9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWt8fFwiYm9vbGVhblwiPT09aylhPW51bGw7dmFyIGg9ITE7aWYobnVsbD09PWEpaD0hMDtlbHNlIHN3aXRjaChrKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmg9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIG46Y2FzZSBwOmg9ITB9fWlmKGgpcmV0dXJuIGg9YSxkPWQoaCksYT1cIlwiPT09ZT9cIi5cIitOKGgsMCk6ZSxBcnJheS5pc0FycmF5KGQpPyhjPVwiXCIsbnVsbCE9YSYmKGM9YS5yZXBsYWNlKE0sXCIkJi9cIikrXCIvXCIpLE8oZCxiLGMsXCJcIixmdW5jdGlvbihhKXtyZXR1cm4gYX0pKTpudWxsIT1kJiYoTChkKSYmKGQ9SyhkLGMrKCFkLmtleXx8aCYmaC5rZXk9PT1kLmtleT9cIlwiOihcIlwiK2Qua2V5KS5yZXBsYWNlKE0sXCIkJi9cIikrXCIvXCIpK2EpKSxiLnB1c2goZCkpLDE7aD0wO2U9XCJcIj09PWU/XCIuXCI6ZStcIjpcIjtpZihBcnJheS5pc0FycmF5KGEpKWZvcih2YXIgZz1cbjA7ZzxhLmxlbmd0aDtnKyspe2s9YVtnXTt2YXIgZj1lK04oayxnKTtoKz1PKGssYixjLGYsZCl9ZWxzZSBpZihmPXkoYSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGc9MDshKGs9YS5uZXh0KCkpLmRvbmU7KWs9ay52YWx1ZSxmPWUrTihrLGcrKyksaCs9TyhrLGIsYyxmLGQpO2Vsc2UgaWYoXCJvYmplY3RcIj09PWspdGhyb3cgYj1cIlwiK2EsRXJyb3IoeigzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09Yj9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGEpLmpvaW4oXCIsIFwiKStcIn1cIjpiKSk7cmV0dXJuIGh9ZnVuY3Rpb24gUChhLGIsYyl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgZT1bXSxkPTA7TyhhLGUsXCJcIixcIlwiLGZ1bmN0aW9uKGEpe3JldHVybiBiLmNhbGwoYyxhLGQrKyl9KTtyZXR1cm4gZX1cbmZ1bmN0aW9uIFEoYSl7aWYoLTE9PT1hLl9zdGF0dXMpe3ZhciBiPWEuX3Jlc3VsdDtiPWIoKTthLl9zdGF0dXM9MDthLl9yZXN1bHQ9YjtiLnRoZW4oZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGI9Yi5kZWZhdWx0LGEuX3N0YXR1cz0xLGEuX3Jlc3VsdD1iKX0sZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGEuX3N0YXR1cz0yLGEuX3Jlc3VsdD1iKX0pfWlmKDE9PT1hLl9zdGF0dXMpcmV0dXJuIGEuX3Jlc3VsdDt0aHJvdyBhLl9yZXN1bHQ7fXZhciBSPXtjdXJyZW50Om51bGx9O2Z1bmN0aW9uIFMoKXt2YXIgYT1SLmN1cnJlbnQ7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IoeigzMjEpKTtyZXR1cm4gYX12YXIgVD17UmVhY3RDdXJyZW50RGlzcGF0Y2hlcjpSLFJlYWN0Q3VycmVudEJhdGNoQ29uZmlnOnt0cmFuc2l0aW9uOjB9LFJlYWN0Q3VycmVudE93bmVyOkcsSXNTb21lUmVuZGVyZXJBY3Rpbmc6e2N1cnJlbnQ6ITF9LGFzc2lnbjpsfTtcbmV4cG9ydHMuQ2hpbGRyZW49e21hcDpQLGZvckVhY2g6ZnVuY3Rpb24oYSxiLGMpe1AoYSxmdW5jdGlvbigpe2IuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxjKX0sY291bnQ6ZnVuY3Rpb24oYSl7dmFyIGI9MDtQKGEsZnVuY3Rpb24oKXtiKyt9KTtyZXR1cm4gYn0sdG9BcnJheTpmdW5jdGlvbihhKXtyZXR1cm4gUChhLGZ1bmN0aW9uKGEpe3JldHVybiBhfSl8fFtdfSxvbmx5OmZ1bmN0aW9uKGEpe2lmKCFMKGEpKXRocm93IEVycm9yKHooMTQzKSk7cmV0dXJuIGF9fTtleHBvcnRzLkNvbXBvbmVudD1DO2V4cG9ydHMuUHVyZUNvbXBvbmVudD1FO2V4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9VDtcbmV4cG9ydHMuY2xvbmVFbGVtZW50PWZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT09YXx8dm9pZCAwPT09YSl0aHJvdyBFcnJvcih6KDI2NyxhKSk7dmFyIGU9bCh7fSxhLnByb3BzKSxkPWEua2V5LGs9YS5yZWYsaD1hLl9vd25lcjtpZihudWxsIT1iKXt2b2lkIDAhPT1iLnJlZiYmKGs9Yi5yZWYsaD1HLmN1cnJlbnQpO3ZvaWQgMCE9PWIua2V5JiYoZD1cIlwiK2Iua2V5KTtpZihhLnR5cGUmJmEudHlwZS5kZWZhdWx0UHJvcHMpdmFyIGc9YS50eXBlLmRlZmF1bHRQcm9wcztmb3IoZiBpbiBiKUguY2FsbChiLGYpJiYhSS5oYXNPd25Qcm9wZXJ0eShmKSYmKGVbZl09dm9pZCAwPT09YltmXSYmdm9pZCAwIT09Zz9nW2ZdOmJbZl0pfXZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZillLmNoaWxkcmVuPWM7ZWxzZSBpZigxPGYpe2c9QXJyYXkoZik7Zm9yKHZhciBtPTA7bTxmO20rKylnW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49Z31yZXR1cm57JCR0eXBlb2Y6bix0eXBlOmEudHlwZSxcbmtleTpkLHJlZjprLHByb3BzOmUsX293bmVyOmh9fTtleHBvcnRzLmNyZWF0ZUNvbnRleHQ9ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj1udWxsKTthPXskJHR5cGVvZjpyLF9jYWxjdWxhdGVDaGFuZ2VkQml0czpiLF9jdXJyZW50VmFsdWU6YSxfY3VycmVudFZhbHVlMjphLF90aHJlYWRDb3VudDowLFByb3ZpZGVyOm51bGwsQ29uc3VtZXI6bnVsbH07YS5Qcm92aWRlcj17JCR0eXBlb2Y6cSxfY29udGV4dDphfTtyZXR1cm4gYS5Db25zdW1lcj1hfTtleHBvcnRzLmNyZWF0ZUVsZW1lbnQ9SjtleHBvcnRzLmNyZWF0ZUZhY3Rvcnk9ZnVuY3Rpb24oYSl7dmFyIGI9Si5iaW5kKG51bGwsYSk7Yi50eXBlPWE7cmV0dXJuIGJ9O2V4cG9ydHMuY3JlYXRlUmVmPWZ1bmN0aW9uKCl7cmV0dXJue2N1cnJlbnQ6bnVsbH19O2V4cG9ydHMuZm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6dCxyZW5kZXI6YX19O2V4cG9ydHMuaXNWYWxpZEVsZW1lbnQ9TDtcbmV4cG9ydHMubGF6eT1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6dixfcGF5bG9hZDp7X3N0YXR1czotMSxfcmVzdWx0OmF9LF9pbml0OlF9fTtleHBvcnRzLm1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm57JCR0eXBlb2Y6dSx0eXBlOmEsY29tcGFyZTp2b2lkIDA9PT1iP251bGw6Yn19O2V4cG9ydHMudXNlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZUNhbGxiYWNrKGEsYil9O2V4cG9ydHMudXNlQ29udGV4dD1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlQ29udGV4dChhLGIpfTtleHBvcnRzLnVzZURlYnVnVmFsdWU9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudXNlRWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VJbXBlcmF0aXZlSGFuZGxlPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gUygpLnVzZUltcGVyYXRpdmVIYW5kbGUoYSxiLGMpfTtcbmV4cG9ydHMudXNlTGF5b3V0RWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VMYXlvdXRFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VNZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VNZW1vKGEsYil9O2V4cG9ydHMudXNlUmVkdWNlcj1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIFMoKS51c2VSZWR1Y2VyKGEsYixjKX07ZXhwb3J0cy51c2VSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIFMoKS51c2VSZWYoYSl9O2V4cG9ydHMudXNlU3RhdGU9ZnVuY3Rpb24oYSl7cmV0dXJuIFMoKS51c2VTdGF0ZShhKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTcuMC4yXCI7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE0LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxudmFyIHJ1bnRpbWUgPSAoZnVuY3Rpb24gKGV4cG9ydHMpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgdmFyIE9wID0gT2JqZWN0LnByb3RvdHlwZTtcbiAgdmFyIGhhc093biA9IE9wLmhhc093blByb3BlcnR5O1xuICB2YXIgdW5kZWZpbmVkOyAvLyBNb3JlIGNvbXByZXNzaWJsZSB0aGFuIHZvaWQgMC5cbiAgdmFyICRTeW1ib2wgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgPyBTeW1ib2wgOiB7fTtcbiAgdmFyIGl0ZXJhdG9yU3ltYm9sID0gJFN5bWJvbC5pdGVyYXRvciB8fCBcIkBAaXRlcmF0b3JcIjtcbiAgdmFyIGFzeW5jSXRlcmF0b3JTeW1ib2wgPSAkU3ltYm9sLmFzeW5jSXRlcmF0b3IgfHwgXCJAQGFzeW5jSXRlcmF0b3JcIjtcbiAgdmFyIHRvU3RyaW5nVGFnU3ltYm9sID0gJFN5bWJvbC50b1N0cmluZ1RhZyB8fCBcIkBAdG9TdHJpbmdUYWdcIjtcblxuICBmdW5jdGlvbiBkZWZpbmUob2JqLCBrZXksIHZhbHVlKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgd3JpdGFibGU6IHRydWVcbiAgICB9KTtcbiAgICByZXR1cm4gb2JqW2tleV07XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBJRSA4IGhhcyBhIGJyb2tlbiBPYmplY3QuZGVmaW5lUHJvcGVydHkgdGhhdCBvbmx5IHdvcmtzIG9uIERPTSBvYmplY3RzLlxuICAgIGRlZmluZSh7fSwgXCJcIik7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGRlZmluZSA9IGZ1bmN0aW9uKG9iaiwga2V5LCB2YWx1ZSkge1xuICAgICAgcmV0dXJuIG9ialtrZXldID0gdmFsdWU7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHdyYXAoaW5uZXJGbiwgb3V0ZXJGbiwgc2VsZiwgdHJ5TG9jc0xpc3QpIHtcbiAgICAvLyBJZiBvdXRlckZuIHByb3ZpZGVkIGFuZCBvdXRlckZuLnByb3RvdHlwZSBpcyBhIEdlbmVyYXRvciwgdGhlbiBvdXRlckZuLnByb3RvdHlwZSBpbnN0YW5jZW9mIEdlbmVyYXRvci5cbiAgICB2YXIgcHJvdG9HZW5lcmF0b3IgPSBvdXRlckZuICYmIG91dGVyRm4ucHJvdG90eXBlIGluc3RhbmNlb2YgR2VuZXJhdG9yID8gb3V0ZXJGbiA6IEdlbmVyYXRvcjtcbiAgICB2YXIgZ2VuZXJhdG9yID0gT2JqZWN0LmNyZWF0ZShwcm90b0dlbmVyYXRvci5wcm90b3R5cGUpO1xuICAgIHZhciBjb250ZXh0ID0gbmV3IENvbnRleHQodHJ5TG9jc0xpc3QgfHwgW10pO1xuXG4gICAgLy8gVGhlIC5faW52b2tlIG1ldGhvZCB1bmlmaWVzIHRoZSBpbXBsZW1lbnRhdGlvbnMgb2YgdGhlIC5uZXh0LFxuICAgIC8vIC50aHJvdywgYW5kIC5yZXR1cm4gbWV0aG9kcy5cbiAgICBnZW5lcmF0b3IuX2ludm9rZSA9IG1ha2VJbnZva2VNZXRob2QoaW5uZXJGbiwgc2VsZiwgY29udGV4dCk7XG5cbiAgICByZXR1cm4gZ2VuZXJhdG9yO1xuICB9XG4gIGV4cG9ydHMud3JhcCA9IHdyYXA7XG5cbiAgLy8gVHJ5L2NhdGNoIGhlbHBlciB0byBtaW5pbWl6ZSBkZW9wdGltaXphdGlvbnMuIFJldHVybnMgYSBjb21wbGV0aW9uXG4gIC8vIHJlY29yZCBsaWtlIGNvbnRleHQudHJ5RW50cmllc1tpXS5jb21wbGV0aW9uLiBUaGlzIGludGVyZmFjZSBjb3VsZFxuICAvLyBoYXZlIGJlZW4gKGFuZCB3YXMgcHJldmlvdXNseSkgZGVzaWduZWQgdG8gdGFrZSBhIGNsb3N1cmUgdG8gYmVcbiAgLy8gaW52b2tlZCB3aXRob3V0IGFyZ3VtZW50cywgYnV0IGluIGFsbCB0aGUgY2FzZXMgd2UgY2FyZSBhYm91dCB3ZVxuICAvLyBhbHJlYWR5IGhhdmUgYW4gZXhpc3RpbmcgbWV0aG9kIHdlIHdhbnQgdG8gY2FsbCwgc28gdGhlcmUncyBubyBuZWVkXG4gIC8vIHRvIGNyZWF0ZSBhIG5ldyBmdW5jdGlvbiBvYmplY3QuIFdlIGNhbiBldmVuIGdldCBhd2F5IHdpdGggYXNzdW1pbmdcbiAgLy8gdGhlIG1ldGhvZCB0YWtlcyBleGFjdGx5IG9uZSBhcmd1bWVudCwgc2luY2UgdGhhdCBoYXBwZW5zIHRvIGJlIHRydWVcbiAgLy8gaW4gZXZlcnkgY2FzZSwgc28gd2UgZG9uJ3QgaGF2ZSB0byB0b3VjaCB0aGUgYXJndW1lbnRzIG9iamVjdC4gVGhlXG4gIC8vIG9ubHkgYWRkaXRpb25hbCBhbGxvY2F0aW9uIHJlcXVpcmVkIGlzIHRoZSBjb21wbGV0aW9uIHJlY29yZCwgd2hpY2hcbiAgLy8gaGFzIGEgc3RhYmxlIHNoYXBlIGFuZCBzbyBob3BlZnVsbHkgc2hvdWxkIGJlIGNoZWFwIHRvIGFsbG9jYXRlLlxuICBmdW5jdGlvbiB0cnlDYXRjaChmbiwgb2JqLCBhcmcpIHtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIHsgdHlwZTogXCJub3JtYWxcIiwgYXJnOiBmbi5jYWxsKG9iaiwgYXJnKSB9O1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgcmV0dXJuIHsgdHlwZTogXCJ0aHJvd1wiLCBhcmc6IGVyciB9O1xuICAgIH1cbiAgfVxuXG4gIHZhciBHZW5TdGF0ZVN1c3BlbmRlZFN0YXJ0ID0gXCJzdXNwZW5kZWRTdGFydFwiO1xuICB2YXIgR2VuU3RhdGVTdXNwZW5kZWRZaWVsZCA9IFwic3VzcGVuZGVkWWllbGRcIjtcbiAgdmFyIEdlblN0YXRlRXhlY3V0aW5nID0gXCJleGVjdXRpbmdcIjtcbiAgdmFyIEdlblN0YXRlQ29tcGxldGVkID0gXCJjb21wbGV0ZWRcIjtcblxuICAvLyBSZXR1cm5pbmcgdGhpcyBvYmplY3QgZnJvbSB0aGUgaW5uZXJGbiBoYXMgdGhlIHNhbWUgZWZmZWN0IGFzXG4gIC8vIGJyZWFraW5nIG91dCBvZiB0aGUgZGlzcGF0Y2ggc3dpdGNoIHN0YXRlbWVudC5cbiAgdmFyIENvbnRpbnVlU2VudGluZWwgPSB7fTtcblxuICAvLyBEdW1teSBjb25zdHJ1Y3RvciBmdW5jdGlvbnMgdGhhdCB3ZSB1c2UgYXMgdGhlIC5jb25zdHJ1Y3RvciBhbmRcbiAgLy8gLmNvbnN0cnVjdG9yLnByb3RvdHlwZSBwcm9wZXJ0aWVzIGZvciBmdW5jdGlvbnMgdGhhdCByZXR1cm4gR2VuZXJhdG9yXG4gIC8vIG9iamVjdHMuIEZvciBmdWxsIHNwZWMgY29tcGxpYW5jZSwgeW91IG1heSB3aXNoIHRvIGNvbmZpZ3VyZSB5b3VyXG4gIC8vIG1pbmlmaWVyIG5vdCB0byBtYW5nbGUgdGhlIG5hbWVzIG9mIHRoZXNlIHR3byBmdW5jdGlvbnMuXG4gIGZ1bmN0aW9uIEdlbmVyYXRvcigpIHt9XG4gIGZ1bmN0aW9uIEdlbmVyYXRvckZ1bmN0aW9uKCkge31cbiAgZnVuY3Rpb24gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUoKSB7fVxuXG4gIC8vIFRoaXMgaXMgYSBwb2x5ZmlsbCBmb3IgJUl0ZXJhdG9yUHJvdG90eXBlJSBmb3IgZW52aXJvbm1lbnRzIHRoYXRcbiAgLy8gZG9uJ3QgbmF0aXZlbHkgc3VwcG9ydCBpdC5cbiAgdmFyIEl0ZXJhdG9yUHJvdG90eXBlID0ge307XG4gIGRlZmluZShJdGVyYXRvclByb3RvdHlwZSwgaXRlcmF0b3JTeW1ib2wsIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcztcbiAgfSk7XG5cbiAgdmFyIGdldFByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mO1xuICB2YXIgTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUgPSBnZXRQcm90byAmJiBnZXRQcm90byhnZXRQcm90byh2YWx1ZXMoW10pKSk7XG4gIGlmIChOYXRpdmVJdGVyYXRvclByb3RvdHlwZSAmJlxuICAgICAgTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUgIT09IE9wICYmXG4gICAgICBoYXNPd24uY2FsbChOYXRpdmVJdGVyYXRvclByb3RvdHlwZSwgaXRlcmF0b3JTeW1ib2wpKSB7XG4gICAgLy8gVGhpcyBlbnZpcm9ubWVudCBoYXMgYSBuYXRpdmUgJUl0ZXJhdG9yUHJvdG90eXBlJTsgdXNlIGl0IGluc3RlYWRcbiAgICAvLyBvZiB0aGUgcG9seWZpbGwuXG4gICAgSXRlcmF0b3JQcm90b3R5cGUgPSBOYXRpdmVJdGVyYXRvclByb3RvdHlwZTtcbiAgfVxuXG4gIHZhciBHcCA9IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlLnByb3RvdHlwZSA9XG4gICAgR2VuZXJhdG9yLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoSXRlcmF0b3JQcm90b3R5cGUpO1xuICBHZW5lcmF0b3JGdW5jdGlvbi5wcm90b3R5cGUgPSBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZTtcbiAgZGVmaW5lKEdwLCBcImNvbnN0cnVjdG9yXCIsIEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlKTtcbiAgZGVmaW5lKEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlLCBcImNvbnN0cnVjdG9yXCIsIEdlbmVyYXRvckZ1bmN0aW9uKTtcbiAgR2VuZXJhdG9yRnVuY3Rpb24uZGlzcGxheU5hbWUgPSBkZWZpbmUoXG4gICAgR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUsXG4gICAgdG9TdHJpbmdUYWdTeW1ib2wsXG4gICAgXCJHZW5lcmF0b3JGdW5jdGlvblwiXG4gICk7XG5cbiAgLy8gSGVscGVyIGZvciBkZWZpbmluZyB0aGUgLm5leHQsIC50aHJvdywgYW5kIC5yZXR1cm4gbWV0aG9kcyBvZiB0aGVcbiAgLy8gSXRlcmF0b3IgaW50ZXJmYWNlIGluIHRlcm1zIG9mIGEgc2luZ2xlIC5faW52b2tlIG1ldGhvZC5cbiAgZnVuY3Rpb24gZGVmaW5lSXRlcmF0b3JNZXRob2RzKHByb3RvdHlwZSkge1xuICAgIFtcIm5leHRcIiwgXCJ0aHJvd1wiLCBcInJldHVyblwiXS5mb3JFYWNoKGZ1bmN0aW9uKG1ldGhvZCkge1xuICAgICAgZGVmaW5lKHByb3RvdHlwZSwgbWV0aG9kLCBmdW5jdGlvbihhcmcpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2ludm9rZShtZXRob2QsIGFyZyk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGV4cG9ydHMuaXNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKGdlbkZ1bikge1xuICAgIHZhciBjdG9yID0gdHlwZW9mIGdlbkZ1biA9PT0gXCJmdW5jdGlvblwiICYmIGdlbkZ1bi5jb25zdHJ1Y3RvcjtcbiAgICByZXR1cm4gY3RvclxuICAgICAgPyBjdG9yID09PSBHZW5lcmF0b3JGdW5jdGlvbiB8fFxuICAgICAgICAvLyBGb3IgdGhlIG5hdGl2ZSBHZW5lcmF0b3JGdW5jdGlvbiBjb25zdHJ1Y3RvciwgdGhlIGJlc3Qgd2UgY2FuXG4gICAgICAgIC8vIGRvIGlzIHRvIGNoZWNrIGl0cyAubmFtZSBwcm9wZXJ0eS5cbiAgICAgICAgKGN0b3IuZGlzcGxheU5hbWUgfHwgY3Rvci5uYW1lKSA9PT0gXCJHZW5lcmF0b3JGdW5jdGlvblwiXG4gICAgICA6IGZhbHNlO1xuICB9O1xuXG4gIGV4cG9ydHMubWFyayA9IGZ1bmN0aW9uKGdlbkZ1bikge1xuICAgIGlmIChPYmplY3Quc2V0UHJvdG90eXBlT2YpIHtcbiAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZihnZW5GdW4sIEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZ2VuRnVuLl9fcHJvdG9fXyA9IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlO1xuICAgICAgZGVmaW5lKGdlbkZ1biwgdG9TdHJpbmdUYWdTeW1ib2wsIFwiR2VuZXJhdG9yRnVuY3Rpb25cIik7XG4gICAgfVxuICAgIGdlbkZ1bi5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEdwKTtcbiAgICByZXR1cm4gZ2VuRnVuO1xuICB9O1xuXG4gIC8vIFdpdGhpbiB0aGUgYm9keSBvZiBhbnkgYXN5bmMgZnVuY3Rpb24sIGBhd2FpdCB4YCBpcyB0cmFuc2Zvcm1lZCB0b1xuICAvLyBgeWllbGQgcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKHgpYCwgc28gdGhhdCB0aGUgcnVudGltZSBjYW4gdGVzdFxuICAvLyBgaGFzT3duLmNhbGwodmFsdWUsIFwiX19hd2FpdFwiKWAgdG8gZGV0ZXJtaW5lIGlmIHRoZSB5aWVsZGVkIHZhbHVlIGlzXG4gIC8vIG1lYW50IHRvIGJlIGF3YWl0ZWQuXG4gIGV4cG9ydHMuYXdyYXAgPSBmdW5jdGlvbihhcmcpIHtcbiAgICByZXR1cm4geyBfX2F3YWl0OiBhcmcgfTtcbiAgfTtcblxuICBmdW5jdGlvbiBBc3luY0l0ZXJhdG9yKGdlbmVyYXRvciwgUHJvbWlzZUltcGwpIHtcbiAgICBmdW5jdGlvbiBpbnZva2UobWV0aG9kLCBhcmcsIHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgdmFyIHJlY29yZCA9IHRyeUNhdGNoKGdlbmVyYXRvclttZXRob2RdLCBnZW5lcmF0b3IsIGFyZyk7XG4gICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgICByZWplY3QocmVjb3JkLmFyZyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgcmVzdWx0ID0gcmVjb3JkLmFyZztcbiAgICAgICAgdmFyIHZhbHVlID0gcmVzdWx0LnZhbHVlO1xuICAgICAgICBpZiAodmFsdWUgJiZcbiAgICAgICAgICAgIHR5cGVvZiB2YWx1ZSA9PT0gXCJvYmplY3RcIiAmJlxuICAgICAgICAgICAgaGFzT3duLmNhbGwodmFsdWUsIFwiX19hd2FpdFwiKSkge1xuICAgICAgICAgIHJldHVybiBQcm9taXNlSW1wbC5yZXNvbHZlKHZhbHVlLl9fYXdhaXQpLnRoZW4oZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgICAgIGludm9rZShcIm5leHRcIiwgdmFsdWUsIHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgICAgfSwgZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgICAgICBpbnZva2UoXCJ0aHJvd1wiLCBlcnIsIHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gUHJvbWlzZUltcGwucmVzb2x2ZSh2YWx1ZSkudGhlbihmdW5jdGlvbih1bndyYXBwZWQpIHtcbiAgICAgICAgICAvLyBXaGVuIGEgeWllbGRlZCBQcm9taXNlIGlzIHJlc29sdmVkLCBpdHMgZmluYWwgdmFsdWUgYmVjb21lc1xuICAgICAgICAgIC8vIHRoZSAudmFsdWUgb2YgdGhlIFByb21pc2U8e3ZhbHVlLGRvbmV9PiByZXN1bHQgZm9yIHRoZVxuICAgICAgICAgIC8vIGN1cnJlbnQgaXRlcmF0aW9uLlxuICAgICAgICAgIHJlc3VsdC52YWx1ZSA9IHVud3JhcHBlZDtcbiAgICAgICAgICByZXNvbHZlKHJlc3VsdCk7XG4gICAgICAgIH0sIGZ1bmN0aW9uKGVycm9yKSB7XG4gICAgICAgICAgLy8gSWYgYSByZWplY3RlZCBQcm9taXNlIHdhcyB5aWVsZGVkLCB0aHJvdyB0aGUgcmVqZWN0aW9uIGJhY2tcbiAgICAgICAgICAvLyBpbnRvIHRoZSBhc3luYyBnZW5lcmF0b3IgZnVuY3Rpb24gc28gaXQgY2FuIGJlIGhhbmRsZWQgdGhlcmUuXG4gICAgICAgICAgcmV0dXJuIGludm9rZShcInRocm93XCIsIGVycm9yLCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgcHJldmlvdXNQcm9taXNlO1xuXG4gICAgZnVuY3Rpb24gZW5xdWV1ZShtZXRob2QsIGFyZykge1xuICAgICAgZnVuY3Rpb24gY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmcoKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZUltcGwoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgICAgaW52b2tlKG1ldGhvZCwgYXJnLCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHByZXZpb3VzUHJvbWlzZSA9XG4gICAgICAgIC8vIElmIGVucXVldWUgaGFzIGJlZW4gY2FsbGVkIGJlZm9yZSwgdGhlbiB3ZSB3YW50IHRvIHdhaXQgdW50aWxcbiAgICAgICAgLy8gYWxsIHByZXZpb3VzIFByb21pc2VzIGhhdmUgYmVlbiByZXNvbHZlZCBiZWZvcmUgY2FsbGluZyBpbnZva2UsXG4gICAgICAgIC8vIHNvIHRoYXQgcmVzdWx0cyBhcmUgYWx3YXlzIGRlbGl2ZXJlZCBpbiB0aGUgY29ycmVjdCBvcmRlci4gSWZcbiAgICAgICAgLy8gZW5xdWV1ZSBoYXMgbm90IGJlZW4gY2FsbGVkIGJlZm9yZSwgdGhlbiBpdCBpcyBpbXBvcnRhbnQgdG9cbiAgICAgICAgLy8gY2FsbCBpbnZva2UgaW1tZWRpYXRlbHksIHdpdGhvdXQgd2FpdGluZyBvbiBhIGNhbGxiYWNrIHRvIGZpcmUsXG4gICAgICAgIC8vIHNvIHRoYXQgdGhlIGFzeW5jIGdlbmVyYXRvciBmdW5jdGlvbiBoYXMgdGhlIG9wcG9ydHVuaXR5IHRvIGRvXG4gICAgICAgIC8vIGFueSBuZWNlc3Nhcnkgc2V0dXAgaW4gYSBwcmVkaWN0YWJsZSB3YXkuIFRoaXMgcHJlZGljdGFiaWxpdHlcbiAgICAgICAgLy8gaXMgd2h5IHRoZSBQcm9taXNlIGNvbnN0cnVjdG9yIHN5bmNocm9ub3VzbHkgaW52b2tlcyBpdHNcbiAgICAgICAgLy8gZXhlY3V0b3IgY2FsbGJhY2ssIGFuZCB3aHkgYXN5bmMgZnVuY3Rpb25zIHN5bmNocm9ub3VzbHlcbiAgICAgICAgLy8gZXhlY3V0ZSBjb2RlIGJlZm9yZSB0aGUgZmlyc3QgYXdhaXQuIFNpbmNlIHdlIGltcGxlbWVudCBzaW1wbGVcbiAgICAgICAgLy8gYXN5bmMgZnVuY3Rpb25zIGluIHRlcm1zIG9mIGFzeW5jIGdlbmVyYXRvcnMsIGl0IGlzIGVzcGVjaWFsbHlcbiAgICAgICAgLy8gaW1wb3J0YW50IHRvIGdldCB0aGlzIHJpZ2h0LCBldmVuIHRob3VnaCBpdCByZXF1aXJlcyBjYXJlLlxuICAgICAgICBwcmV2aW91c1Byb21pc2UgPyBwcmV2aW91c1Byb21pc2UudGhlbihcbiAgICAgICAgICBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZyxcbiAgICAgICAgICAvLyBBdm9pZCBwcm9wYWdhdGluZyBmYWlsdXJlcyB0byBQcm9taXNlcyByZXR1cm5lZCBieSBsYXRlclxuICAgICAgICAgIC8vIGludm9jYXRpb25zIG9mIHRoZSBpdGVyYXRvci5cbiAgICAgICAgICBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZ1xuICAgICAgICApIDogY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmcoKTtcbiAgICB9XG5cbiAgICAvLyBEZWZpbmUgdGhlIHVuaWZpZWQgaGVscGVyIG1ldGhvZCB0aGF0IGlzIHVzZWQgdG8gaW1wbGVtZW50IC5uZXh0LFxuICAgIC8vIC50aHJvdywgYW5kIC5yZXR1cm4gKHNlZSBkZWZpbmVJdGVyYXRvck1ldGhvZHMpLlxuICAgIHRoaXMuX2ludm9rZSA9IGVucXVldWU7XG4gIH1cblxuICBkZWZpbmVJdGVyYXRvck1ldGhvZHMoQXN5bmNJdGVyYXRvci5wcm90b3R5cGUpO1xuICBkZWZpbmUoQXN5bmNJdGVyYXRvci5wcm90b3R5cGUsIGFzeW5jSXRlcmF0b3JTeW1ib2wsIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcztcbiAgfSk7XG4gIGV4cG9ydHMuQXN5bmNJdGVyYXRvciA9IEFzeW5jSXRlcmF0b3I7XG5cbiAgLy8gTm90ZSB0aGF0IHNpbXBsZSBhc3luYyBmdW5jdGlvbnMgYXJlIGltcGxlbWVudGVkIG9uIHRvcCBvZlxuICAvLyBBc3luY0l0ZXJhdG9yIG9iamVjdHM7IHRoZXkganVzdCByZXR1cm4gYSBQcm9taXNlIGZvciB0aGUgdmFsdWUgb2ZcbiAgLy8gdGhlIGZpbmFsIHJlc3VsdCBwcm9kdWNlZCBieSB0aGUgaXRlcmF0b3IuXG4gIGV4cG9ydHMuYXN5bmMgPSBmdW5jdGlvbihpbm5lckZuLCBvdXRlckZuLCBzZWxmLCB0cnlMb2NzTGlzdCwgUHJvbWlzZUltcGwpIHtcbiAgICBpZiAoUHJvbWlzZUltcGwgPT09IHZvaWQgMCkgUHJvbWlzZUltcGwgPSBQcm9taXNlO1xuXG4gICAgdmFyIGl0ZXIgPSBuZXcgQXN5bmNJdGVyYXRvcihcbiAgICAgIHdyYXAoaW5uZXJGbiwgb3V0ZXJGbiwgc2VsZiwgdHJ5TG9jc0xpc3QpLFxuICAgICAgUHJvbWlzZUltcGxcbiAgICApO1xuXG4gICAgcmV0dXJuIGV4cG9ydHMuaXNHZW5lcmF0b3JGdW5jdGlvbihvdXRlckZuKVxuICAgICAgPyBpdGVyIC8vIElmIG91dGVyRm4gaXMgYSBnZW5lcmF0b3IsIHJldHVybiB0aGUgZnVsbCBpdGVyYXRvci5cbiAgICAgIDogaXRlci5uZXh0KCkudGhlbihmdW5jdGlvbihyZXN1bHQpIHtcbiAgICAgICAgICByZXR1cm4gcmVzdWx0LmRvbmUgPyByZXN1bHQudmFsdWUgOiBpdGVyLm5leHQoKTtcbiAgICAgICAgfSk7XG4gIH07XG5cbiAgZnVuY3Rpb24gbWFrZUludm9rZU1ldGhvZChpbm5lckZuLCBzZWxmLCBjb250ZXh0KSB7XG4gICAgdmFyIHN0YXRlID0gR2VuU3RhdGVTdXNwZW5kZWRTdGFydDtcblxuICAgIHJldHVybiBmdW5jdGlvbiBpbnZva2UobWV0aG9kLCBhcmcpIHtcbiAgICAgIGlmIChzdGF0ZSA9PT0gR2VuU3RhdGVFeGVjdXRpbmcpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiR2VuZXJhdG9yIGlzIGFscmVhZHkgcnVubmluZ1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHN0YXRlID09PSBHZW5TdGF0ZUNvbXBsZXRlZCkge1xuICAgICAgICBpZiAobWV0aG9kID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICB0aHJvdyBhcmc7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBCZSBmb3JnaXZpbmcsIHBlciAyNS4zLjMuMy4zIG9mIHRoZSBzcGVjOlxuICAgICAgICAvLyBodHRwczovL3Blb3BsZS5tb3ppbGxhLm9yZy9+am9yZW5kb3JmZi9lczYtZHJhZnQuaHRtbCNzZWMtZ2VuZXJhdG9ycmVzdW1lXG4gICAgICAgIHJldHVybiBkb25lUmVzdWx0KCk7XG4gICAgICB9XG5cbiAgICAgIGNvbnRleHQubWV0aG9kID0gbWV0aG9kO1xuICAgICAgY29udGV4dC5hcmcgPSBhcmc7XG5cbiAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgIHZhciBkZWxlZ2F0ZSA9IGNvbnRleHQuZGVsZWdhdGU7XG4gICAgICAgIGlmIChkZWxlZ2F0ZSkge1xuICAgICAgICAgIHZhciBkZWxlZ2F0ZVJlc3VsdCA9IG1heWJlSW52b2tlRGVsZWdhdGUoZGVsZWdhdGUsIGNvbnRleHQpO1xuICAgICAgICAgIGlmIChkZWxlZ2F0ZVJlc3VsdCkge1xuICAgICAgICAgICAgaWYgKGRlbGVnYXRlUmVzdWx0ID09PSBDb250aW51ZVNlbnRpbmVsKSBjb250aW51ZTtcbiAgICAgICAgICAgIHJldHVybiBkZWxlZ2F0ZVJlc3VsdDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY29udGV4dC5tZXRob2QgPT09IFwibmV4dFwiKSB7XG4gICAgICAgICAgLy8gU2V0dGluZyBjb250ZXh0Ll9zZW50IGZvciBsZWdhY3kgc3VwcG9ydCBvZiBCYWJlbCdzXG4gICAgICAgICAgLy8gZnVuY3Rpb24uc2VudCBpbXBsZW1lbnRhdGlvbi5cbiAgICAgICAgICBjb250ZXh0LnNlbnQgPSBjb250ZXh0Ll9zZW50ID0gY29udGV4dC5hcmc7XG5cbiAgICAgICAgfSBlbHNlIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgaWYgKHN0YXRlID09PSBHZW5TdGF0ZVN1c3BlbmRlZFN0YXJ0KSB7XG4gICAgICAgICAgICBzdGF0ZSA9IEdlblN0YXRlQ29tcGxldGVkO1xuICAgICAgICAgICAgdGhyb3cgY29udGV4dC5hcmc7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29udGV4dC5kaXNwYXRjaEV4Y2VwdGlvbihjb250ZXh0LmFyZyk7XG5cbiAgICAgICAgfSBlbHNlIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJyZXR1cm5cIikge1xuICAgICAgICAgIGNvbnRleHQuYWJydXB0KFwicmV0dXJuXCIsIGNvbnRleHQuYXJnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHN0YXRlID0gR2VuU3RhdGVFeGVjdXRpbmc7XG5cbiAgICAgICAgdmFyIHJlY29yZCA9IHRyeUNhdGNoKGlubmVyRm4sIHNlbGYsIGNvbnRleHQpO1xuICAgICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwibm9ybWFsXCIpIHtcbiAgICAgICAgICAvLyBJZiBhbiBleGNlcHRpb24gaXMgdGhyb3duIGZyb20gaW5uZXJGbiwgd2UgbGVhdmUgc3RhdGUgPT09XG4gICAgICAgICAgLy8gR2VuU3RhdGVFeGVjdXRpbmcgYW5kIGxvb3AgYmFjayBmb3IgYW5vdGhlciBpbnZvY2F0aW9uLlxuICAgICAgICAgIHN0YXRlID0gY29udGV4dC5kb25lXG4gICAgICAgICAgICA/IEdlblN0YXRlQ29tcGxldGVkXG4gICAgICAgICAgICA6IEdlblN0YXRlU3VzcGVuZGVkWWllbGQ7XG5cbiAgICAgICAgICBpZiAocmVjb3JkLmFyZyA9PT0gQ29udGludWVTZW50aW5lbCkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHZhbHVlOiByZWNvcmQuYXJnLFxuICAgICAgICAgICAgZG9uZTogY29udGV4dC5kb25lXG4gICAgICAgICAgfTtcblxuICAgICAgICB9IGVsc2UgaWYgKHJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICBzdGF0ZSA9IEdlblN0YXRlQ29tcGxldGVkO1xuICAgICAgICAgIC8vIERpc3BhdGNoIHRoZSBleGNlcHRpb24gYnkgbG9vcGluZyBiYWNrIGFyb3VuZCB0byB0aGVcbiAgICAgICAgICAvLyBjb250ZXh0LmRpc3BhdGNoRXhjZXB0aW9uKGNvbnRleHQuYXJnKSBjYWxsIGFib3ZlLlxuICAgICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiO1xuICAgICAgICAgIGNvbnRleHQuYXJnID0gcmVjb3JkLmFyZztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG4gIH1cblxuICAvLyBDYWxsIGRlbGVnYXRlLml0ZXJhdG9yW2NvbnRleHQubWV0aG9kXShjb250ZXh0LmFyZykgYW5kIGhhbmRsZSB0aGVcbiAgLy8gcmVzdWx0LCBlaXRoZXIgYnkgcmV0dXJuaW5nIGEgeyB2YWx1ZSwgZG9uZSB9IHJlc3VsdCBmcm9tIHRoZVxuICAvLyBkZWxlZ2F0ZSBpdGVyYXRvciwgb3IgYnkgbW9kaWZ5aW5nIGNvbnRleHQubWV0aG9kIGFuZCBjb250ZXh0LmFyZyxcbiAgLy8gc2V0dGluZyBjb250ZXh0LmRlbGVnYXRlIHRvIG51bGwsIGFuZCByZXR1cm5pbmcgdGhlIENvbnRpbnVlU2VudGluZWwuXG4gIGZ1bmN0aW9uIG1heWJlSW52b2tlRGVsZWdhdGUoZGVsZWdhdGUsIGNvbnRleHQpIHtcbiAgICB2YXIgbWV0aG9kID0gZGVsZWdhdGUuaXRlcmF0b3JbY29udGV4dC5tZXRob2RdO1xuICAgIGlmIChtZXRob2QgPT09IHVuZGVmaW5lZCkge1xuICAgICAgLy8gQSAudGhyb3cgb3IgLnJldHVybiB3aGVuIHRoZSBkZWxlZ2F0ZSBpdGVyYXRvciBoYXMgbm8gLnRocm93XG4gICAgICAvLyBtZXRob2QgYWx3YXlzIHRlcm1pbmF0ZXMgdGhlIHlpZWxkKiBsb29wLlxuICAgICAgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGw7XG5cbiAgICAgIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgIC8vIE5vdGU6IFtcInJldHVyblwiXSBtdXN0IGJlIHVzZWQgZm9yIEVTMyBwYXJzaW5nIGNvbXBhdGliaWxpdHkuXG4gICAgICAgIGlmIChkZWxlZ2F0ZS5pdGVyYXRvcltcInJldHVyblwiXSkge1xuICAgICAgICAgIC8vIElmIHRoZSBkZWxlZ2F0ZSBpdGVyYXRvciBoYXMgYSByZXR1cm4gbWV0aG9kLCBnaXZlIGl0IGFcbiAgICAgICAgICAvLyBjaGFuY2UgdG8gY2xlYW4gdXAuXG4gICAgICAgICAgY29udGV4dC5tZXRob2QgPSBcInJldHVyblwiO1xuICAgICAgICAgIGNvbnRleHQuYXJnID0gdW5kZWZpbmVkO1xuICAgICAgICAgIG1heWJlSW52b2tlRGVsZWdhdGUoZGVsZWdhdGUsIGNvbnRleHQpO1xuXG4gICAgICAgICAgaWYgKGNvbnRleHQubWV0aG9kID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICAgIC8vIElmIG1heWJlSW52b2tlRGVsZWdhdGUoY29udGV4dCkgY2hhbmdlZCBjb250ZXh0Lm1ldGhvZCBmcm9tXG4gICAgICAgICAgICAvLyBcInJldHVyblwiIHRvIFwidGhyb3dcIiwgbGV0IHRoYXQgb3ZlcnJpZGUgdGhlIFR5cGVFcnJvciBiZWxvdy5cbiAgICAgICAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiO1xuICAgICAgICBjb250ZXh0LmFyZyA9IG5ldyBUeXBlRXJyb3IoXG4gICAgICAgICAgXCJUaGUgaXRlcmF0b3IgZG9lcyBub3QgcHJvdmlkZSBhICd0aHJvdycgbWV0aG9kXCIpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9XG5cbiAgICB2YXIgcmVjb3JkID0gdHJ5Q2F0Y2gobWV0aG9kLCBkZWxlZ2F0ZS5pdGVyYXRvciwgY29udGV4dC5hcmcpO1xuXG4gICAgaWYgKHJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiO1xuICAgICAgY29udGV4dC5hcmcgPSByZWNvcmQuYXJnO1xuICAgICAgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGw7XG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9XG5cbiAgICB2YXIgaW5mbyA9IHJlY29yZC5hcmc7XG5cbiAgICBpZiAoISBpbmZvKSB7XG4gICAgICBjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIjtcbiAgICAgIGNvbnRleHQuYXJnID0gbmV3IFR5cGVFcnJvcihcIml0ZXJhdG9yIHJlc3VsdCBpcyBub3QgYW4gb2JqZWN0XCIpO1xuICAgICAgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGw7XG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9XG5cbiAgICBpZiAoaW5mby5kb25lKSB7XG4gICAgICAvLyBBc3NpZ24gdGhlIHJlc3VsdCBvZiB0aGUgZmluaXNoZWQgZGVsZWdhdGUgdG8gdGhlIHRlbXBvcmFyeVxuICAgICAgLy8gdmFyaWFibGUgc3BlY2lmaWVkIGJ5IGRlbGVnYXRlLnJlc3VsdE5hbWUgKHNlZSBkZWxlZ2F0ZVlpZWxkKS5cbiAgICAgIGNvbnRleHRbZGVsZWdhdGUucmVzdWx0TmFtZV0gPSBpbmZvLnZhbHVlO1xuXG4gICAgICAvLyBSZXN1bWUgZXhlY3V0aW9uIGF0IHRoZSBkZXNpcmVkIGxvY2F0aW9uIChzZWUgZGVsZWdhdGVZaWVsZCkuXG4gICAgICBjb250ZXh0Lm5leHQgPSBkZWxlZ2F0ZS5uZXh0TG9jO1xuXG4gICAgICAvLyBJZiBjb250ZXh0Lm1ldGhvZCB3YXMgXCJ0aHJvd1wiIGJ1dCB0aGUgZGVsZWdhdGUgaGFuZGxlZCB0aGVcbiAgICAgIC8vIGV4Y2VwdGlvbiwgbGV0IHRoZSBvdXRlciBnZW5lcmF0b3IgcHJvY2VlZCBub3JtYWxseS4gSWZcbiAgICAgIC8vIGNvbnRleHQubWV0aG9kIHdhcyBcIm5leHRcIiwgZm9yZ2V0IGNvbnRleHQuYXJnIHNpbmNlIGl0IGhhcyBiZWVuXG4gICAgICAvLyBcImNvbnN1bWVkXCIgYnkgdGhlIGRlbGVnYXRlIGl0ZXJhdG9yLiBJZiBjb250ZXh0Lm1ldGhvZCB3YXNcbiAgICAgIC8vIFwicmV0dXJuXCIsIGFsbG93IHRoZSBvcmlnaW5hbCAucmV0dXJuIGNhbGwgdG8gY29udGludWUgaW4gdGhlXG4gICAgICAvLyBvdXRlciBnZW5lcmF0b3IuXG4gICAgICBpZiAoY29udGV4dC5tZXRob2QgIT09IFwicmV0dXJuXCIpIHtcbiAgICAgICAgY29udGV4dC5tZXRob2QgPSBcIm5leHRcIjtcbiAgICAgICAgY29udGV4dC5hcmcgPSB1bmRlZmluZWQ7XG4gICAgICB9XG5cbiAgICB9IGVsc2Uge1xuICAgICAgLy8gUmUteWllbGQgdGhlIHJlc3VsdCByZXR1cm5lZCBieSB0aGUgZGVsZWdhdGUgbWV0aG9kLlxuICAgICAgcmV0dXJuIGluZm87XG4gICAgfVxuXG4gICAgLy8gVGhlIGRlbGVnYXRlIGl0ZXJhdG9yIGlzIGZpbmlzaGVkLCBzbyBmb3JnZXQgaXQgYW5kIGNvbnRpbnVlIHdpdGhcbiAgICAvLyB0aGUgb3V0ZXIgZ2VuZXJhdG9yLlxuICAgIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsO1xuICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICB9XG5cbiAgLy8gRGVmaW5lIEdlbmVyYXRvci5wcm90b3R5cGUue25leHQsdGhyb3cscmV0dXJufSBpbiB0ZXJtcyBvZiB0aGVcbiAgLy8gdW5pZmllZCAuX2ludm9rZSBoZWxwZXIgbWV0aG9kLlxuICBkZWZpbmVJdGVyYXRvck1ldGhvZHMoR3ApO1xuXG4gIGRlZmluZShHcCwgdG9TdHJpbmdUYWdTeW1ib2wsIFwiR2VuZXJhdG9yXCIpO1xuXG4gIC8vIEEgR2VuZXJhdG9yIHNob3VsZCBhbHdheXMgcmV0dXJuIGl0c2VsZiBhcyB0aGUgaXRlcmF0b3Igb2JqZWN0IHdoZW4gdGhlXG4gIC8vIEBAaXRlcmF0b3IgZnVuY3Rpb24gaXMgY2FsbGVkIG9uIGl0LiBTb21lIGJyb3dzZXJzJyBpbXBsZW1lbnRhdGlvbnMgb2YgdGhlXG4gIC8vIGl0ZXJhdG9yIHByb3RvdHlwZSBjaGFpbiBpbmNvcnJlY3RseSBpbXBsZW1lbnQgdGhpcywgY2F1c2luZyB0aGUgR2VuZXJhdG9yXG4gIC8vIG9iamVjdCB0byBub3QgYmUgcmV0dXJuZWQgZnJvbSB0aGlzIGNhbGwuIFRoaXMgZW5zdXJlcyB0aGF0IGRvZXNuJ3QgaGFwcGVuLlxuICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlZ2VuZXJhdG9yL2lzc3Vlcy8yNzQgZm9yIG1vcmUgZGV0YWlscy5cbiAgZGVmaW5lKEdwLCBpdGVyYXRvclN5bWJvbCwgZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH0pO1xuXG4gIGRlZmluZShHcCwgXCJ0b1N0cmluZ1wiLCBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gXCJbb2JqZWN0IEdlbmVyYXRvcl1cIjtcbiAgfSk7XG5cbiAgZnVuY3Rpb24gcHVzaFRyeUVudHJ5KGxvY3MpIHtcbiAgICB2YXIgZW50cnkgPSB7IHRyeUxvYzogbG9jc1swXSB9O1xuXG4gICAgaWYgKDEgaW4gbG9jcykge1xuICAgICAgZW50cnkuY2F0Y2hMb2MgPSBsb2NzWzFdO1xuICAgIH1cblxuICAgIGlmICgyIGluIGxvY3MpIHtcbiAgICAgIGVudHJ5LmZpbmFsbHlMb2MgPSBsb2NzWzJdO1xuICAgICAgZW50cnkuYWZ0ZXJMb2MgPSBsb2NzWzNdO1xuICAgIH1cblxuICAgIHRoaXMudHJ5RW50cmllcy5wdXNoKGVudHJ5KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlc2V0VHJ5RW50cnkoZW50cnkpIHtcbiAgICB2YXIgcmVjb3JkID0gZW50cnkuY29tcGxldGlvbiB8fCB7fTtcbiAgICByZWNvcmQudHlwZSA9IFwibm9ybWFsXCI7XG4gICAgZGVsZXRlIHJlY29yZC5hcmc7XG4gICAgZW50cnkuY29tcGxldGlvbiA9IHJlY29yZDtcbiAgfVxuXG4gIGZ1bmN0aW9uIENvbnRleHQodHJ5TG9jc0xpc3QpIHtcbiAgICAvLyBUaGUgcm9vdCBlbnRyeSBvYmplY3QgKGVmZmVjdGl2ZWx5IGEgdHJ5IHN0YXRlbWVudCB3aXRob3V0IGEgY2F0Y2hcbiAgICAvLyBvciBhIGZpbmFsbHkgYmxvY2spIGdpdmVzIHVzIGEgcGxhY2UgdG8gc3RvcmUgdmFsdWVzIHRocm93biBmcm9tXG4gICAgLy8gbG9jYXRpb25zIHdoZXJlIHRoZXJlIGlzIG5vIGVuY2xvc2luZyB0cnkgc3RhdGVtZW50LlxuICAgIHRoaXMudHJ5RW50cmllcyA9IFt7IHRyeUxvYzogXCJyb290XCIgfV07XG4gICAgdHJ5TG9jc0xpc3QuZm9yRWFjaChwdXNoVHJ5RW50cnksIHRoaXMpO1xuICAgIHRoaXMucmVzZXQodHJ1ZSk7XG4gIH1cblxuICBleHBvcnRzLmtleXMgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICB2YXIga2V5cyA9IFtdO1xuICAgIGZvciAodmFyIGtleSBpbiBvYmplY3QpIHtcbiAgICAgIGtleXMucHVzaChrZXkpO1xuICAgIH1cbiAgICBrZXlzLnJldmVyc2UoKTtcblxuICAgIC8vIFJhdGhlciB0aGFuIHJldHVybmluZyBhbiBvYmplY3Qgd2l0aCBhIG5leHQgbWV0aG9kLCB3ZSBrZWVwXG4gICAgLy8gdGhpbmdzIHNpbXBsZSBhbmQgcmV0dXJuIHRoZSBuZXh0IGZ1bmN0aW9uIGl0c2VsZi5cbiAgICByZXR1cm4gZnVuY3Rpb24gbmV4dCgpIHtcbiAgICAgIHdoaWxlIChrZXlzLmxlbmd0aCkge1xuICAgICAgICB2YXIga2V5ID0ga2V5cy5wb3AoKTtcbiAgICAgICAgaWYgKGtleSBpbiBvYmplY3QpIHtcbiAgICAgICAgICBuZXh0LnZhbHVlID0ga2V5O1xuICAgICAgICAgIG5leHQuZG9uZSA9IGZhbHNlO1xuICAgICAgICAgIHJldHVybiBuZXh0O1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIFRvIGF2b2lkIGNyZWF0aW5nIGFuIGFkZGl0aW9uYWwgb2JqZWN0LCB3ZSBqdXN0IGhhbmcgdGhlIC52YWx1ZVxuICAgICAgLy8gYW5kIC5kb25lIHByb3BlcnRpZXMgb2ZmIHRoZSBuZXh0IGZ1bmN0aW9uIG9iamVjdCBpdHNlbGYuIFRoaXNcbiAgICAgIC8vIGFsc28gZW5zdXJlcyB0aGF0IHRoZSBtaW5pZmllciB3aWxsIG5vdCBhbm9ueW1pemUgdGhlIGZ1bmN0aW9uLlxuICAgICAgbmV4dC5kb25lID0gdHJ1ZTtcbiAgICAgIHJldHVybiBuZXh0O1xuICAgIH07XG4gIH07XG5cbiAgZnVuY3Rpb24gdmFsdWVzKGl0ZXJhYmxlKSB7XG4gICAgaWYgKGl0ZXJhYmxlKSB7XG4gICAgICB2YXIgaXRlcmF0b3JNZXRob2QgPSBpdGVyYWJsZVtpdGVyYXRvclN5bWJvbF07XG4gICAgICBpZiAoaXRlcmF0b3JNZXRob2QpIHtcbiAgICAgICAgcmV0dXJuIGl0ZXJhdG9yTWV0aG9kLmNhbGwoaXRlcmFibGUpO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGl0ZXJhYmxlLm5leHQgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICByZXR1cm4gaXRlcmFibGU7XG4gICAgICB9XG5cbiAgICAgIGlmICghaXNOYU4oaXRlcmFibGUubGVuZ3RoKSkge1xuICAgICAgICB2YXIgaSA9IC0xLCBuZXh0ID0gZnVuY3Rpb24gbmV4dCgpIHtcbiAgICAgICAgICB3aGlsZSAoKytpIDwgaXRlcmFibGUubGVuZ3RoKSB7XG4gICAgICAgICAgICBpZiAoaGFzT3duLmNhbGwoaXRlcmFibGUsIGkpKSB7XG4gICAgICAgICAgICAgIG5leHQudmFsdWUgPSBpdGVyYWJsZVtpXTtcbiAgICAgICAgICAgICAgbmV4dC5kb25lID0gZmFsc2U7XG4gICAgICAgICAgICAgIHJldHVybiBuZXh0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIG5leHQudmFsdWUgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgbmV4dC5kb25lID0gdHJ1ZTtcblxuICAgICAgICAgIHJldHVybiBuZXh0O1xuICAgICAgICB9O1xuXG4gICAgICAgIHJldHVybiBuZXh0Lm5leHQgPSBuZXh0O1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFJldHVybiBhbiBpdGVyYXRvciB3aXRoIG5vIHZhbHVlcy5cbiAgICByZXR1cm4geyBuZXh0OiBkb25lUmVzdWx0IH07XG4gIH1cbiAgZXhwb3J0cy52YWx1ZXMgPSB2YWx1ZXM7XG5cbiAgZnVuY3Rpb24gZG9uZVJlc3VsdCgpIHtcbiAgICByZXR1cm4geyB2YWx1ZTogdW5kZWZpbmVkLCBkb25lOiB0cnVlIH07XG4gIH1cblxuICBDb250ZXh0LnByb3RvdHlwZSA9IHtcbiAgICBjb25zdHJ1Y3RvcjogQ29udGV4dCxcblxuICAgIHJlc2V0OiBmdW5jdGlvbihza2lwVGVtcFJlc2V0KSB7XG4gICAgICB0aGlzLnByZXYgPSAwO1xuICAgICAgdGhpcy5uZXh0ID0gMDtcbiAgICAgIC8vIFJlc2V0dGluZyBjb250ZXh0Ll9zZW50IGZvciBsZWdhY3kgc3VwcG9ydCBvZiBCYWJlbCdzXG4gICAgICAvLyBmdW5jdGlvbi5zZW50IGltcGxlbWVudGF0aW9uLlxuICAgICAgdGhpcy5zZW50ID0gdGhpcy5fc2VudCA9IHVuZGVmaW5lZDtcbiAgICAgIHRoaXMuZG9uZSA9IGZhbHNlO1xuICAgICAgdGhpcy5kZWxlZ2F0ZSA9IG51bGw7XG5cbiAgICAgIHRoaXMubWV0aG9kID0gXCJuZXh0XCI7XG4gICAgICB0aGlzLmFyZyA9IHVuZGVmaW5lZDtcblxuICAgICAgdGhpcy50cnlFbnRyaWVzLmZvckVhY2gocmVzZXRUcnlFbnRyeSk7XG5cbiAgICAgIGlmICghc2tpcFRlbXBSZXNldCkge1xuICAgICAgICBmb3IgKHZhciBuYW1lIGluIHRoaXMpIHtcbiAgICAgICAgICAvLyBOb3Qgc3VyZSBhYm91dCB0aGUgb3B0aW1hbCBvcmRlciBvZiB0aGVzZSBjb25kaXRpb25zOlxuICAgICAgICAgIGlmIChuYW1lLmNoYXJBdCgwKSA9PT0gXCJ0XCIgJiZcbiAgICAgICAgICAgICAgaGFzT3duLmNhbGwodGhpcywgbmFtZSkgJiZcbiAgICAgICAgICAgICAgIWlzTmFOKCtuYW1lLnNsaWNlKDEpKSkge1xuICAgICAgICAgICAgdGhpc1tuYW1lXSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuXG4gICAgc3RvcDogZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLmRvbmUgPSB0cnVlO1xuXG4gICAgICB2YXIgcm9vdEVudHJ5ID0gdGhpcy50cnlFbnRyaWVzWzBdO1xuICAgICAgdmFyIHJvb3RSZWNvcmQgPSByb290RW50cnkuY29tcGxldGlvbjtcbiAgICAgIGlmIChyb290UmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgICB0aHJvdyByb290UmVjb3JkLmFyZztcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMucnZhbDtcbiAgICB9LFxuXG4gICAgZGlzcGF0Y2hFeGNlcHRpb246IGZ1bmN0aW9uKGV4Y2VwdGlvbikge1xuICAgICAgaWYgKHRoaXMuZG9uZSkge1xuICAgICAgICB0aHJvdyBleGNlcHRpb247XG4gICAgICB9XG5cbiAgICAgIHZhciBjb250ZXh0ID0gdGhpcztcbiAgICAgIGZ1bmN0aW9uIGhhbmRsZShsb2MsIGNhdWdodCkge1xuICAgICAgICByZWNvcmQudHlwZSA9IFwidGhyb3dcIjtcbiAgICAgICAgcmVjb3JkLmFyZyA9IGV4Y2VwdGlvbjtcbiAgICAgICAgY29udGV4dC5uZXh0ID0gbG9jO1xuXG4gICAgICAgIGlmIChjYXVnaHQpIHtcbiAgICAgICAgICAvLyBJZiB0aGUgZGlzcGF0Y2hlZCBleGNlcHRpb24gd2FzIGNhdWdodCBieSBhIGNhdGNoIGJsb2NrLFxuICAgICAgICAgIC8vIHRoZW4gbGV0IHRoYXQgY2F0Y2ggYmxvY2sgaGFuZGxlIHRoZSBleGNlcHRpb24gbm9ybWFsbHkuXG4gICAgICAgICAgY29udGV4dC5tZXRob2QgPSBcIm5leHRcIjtcbiAgICAgICAgICBjb250ZXh0LmFyZyA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiAhISBjYXVnaHQ7XG4gICAgICB9XG5cbiAgICAgIGZvciAodmFyIGkgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy50cnlFbnRyaWVzW2ldO1xuICAgICAgICB2YXIgcmVjb3JkID0gZW50cnkuY29tcGxldGlvbjtcblxuICAgICAgICBpZiAoZW50cnkudHJ5TG9jID09PSBcInJvb3RcIikge1xuICAgICAgICAgIC8vIEV4Y2VwdGlvbiB0aHJvd24gb3V0c2lkZSBvZiBhbnkgdHJ5IGJsb2NrIHRoYXQgY291bGQgaGFuZGxlXG4gICAgICAgICAgLy8gaXQsIHNvIHNldCB0aGUgY29tcGxldGlvbiB2YWx1ZSBvZiB0aGUgZW50aXJlIGZ1bmN0aW9uIHRvXG4gICAgICAgICAgLy8gdGhyb3cgdGhlIGV4Y2VwdGlvbi5cbiAgICAgICAgICByZXR1cm4gaGFuZGxlKFwiZW5kXCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGVudHJ5LnRyeUxvYyA8PSB0aGlzLnByZXYpIHtcbiAgICAgICAgICB2YXIgaGFzQ2F0Y2ggPSBoYXNPd24uY2FsbChlbnRyeSwgXCJjYXRjaExvY1wiKTtcbiAgICAgICAgICB2YXIgaGFzRmluYWxseSA9IGhhc093bi5jYWxsKGVudHJ5LCBcImZpbmFsbHlMb2NcIik7XG5cbiAgICAgICAgICBpZiAoaGFzQ2F0Y2ggJiYgaGFzRmluYWxseSkge1xuICAgICAgICAgICAgaWYgKHRoaXMucHJldiA8IGVudHJ5LmNhdGNoTG9jKSB7XG4gICAgICAgICAgICAgIHJldHVybiBoYW5kbGUoZW50cnkuY2F0Y2hMb2MsIHRydWUpO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLnByZXYgPCBlbnRyeS5maW5hbGx5TG9jKSB7XG4gICAgICAgICAgICAgIHJldHVybiBoYW5kbGUoZW50cnkuZmluYWxseUxvYyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICB9IGVsc2UgaWYgKGhhc0NhdGNoKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wcmV2IDwgZW50cnkuY2F0Y2hMb2MpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZShlbnRyeS5jYXRjaExvYywgdHJ1ZSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICB9IGVsc2UgaWYgKGhhc0ZpbmFsbHkpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnByZXYgPCBlbnRyeS5maW5hbGx5TG9jKSB7XG4gICAgICAgICAgICAgIHJldHVybiBoYW5kbGUoZW50cnkuZmluYWxseUxvYyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwidHJ5IHN0YXRlbWVudCB3aXRob3V0IGNhdGNoIG9yIGZpbmFsbHlcIik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIGFicnVwdDogZnVuY3Rpb24odHlwZSwgYXJnKSB7XG4gICAgICBmb3IgKHZhciBpID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBlbnRyeSA9IHRoaXMudHJ5RW50cmllc1tpXTtcbiAgICAgICAgaWYgKGVudHJ5LnRyeUxvYyA8PSB0aGlzLnByZXYgJiZcbiAgICAgICAgICAgIGhhc093bi5jYWxsKGVudHJ5LCBcImZpbmFsbHlMb2NcIikgJiZcbiAgICAgICAgICAgIHRoaXMucHJldiA8IGVudHJ5LmZpbmFsbHlMb2MpIHtcbiAgICAgICAgICB2YXIgZmluYWxseUVudHJ5ID0gZW50cnk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGZpbmFsbHlFbnRyeSAmJlxuICAgICAgICAgICh0eXBlID09PSBcImJyZWFrXCIgfHxcbiAgICAgICAgICAgdHlwZSA9PT0gXCJjb250aW51ZVwiKSAmJlxuICAgICAgICAgIGZpbmFsbHlFbnRyeS50cnlMb2MgPD0gYXJnICYmXG4gICAgICAgICAgYXJnIDw9IGZpbmFsbHlFbnRyeS5maW5hbGx5TG9jKSB7XG4gICAgICAgIC8vIElnbm9yZSB0aGUgZmluYWxseSBlbnRyeSBpZiBjb250cm9sIGlzIG5vdCBqdW1waW5nIHRvIGFcbiAgICAgICAgLy8gbG9jYXRpb24gb3V0c2lkZSB0aGUgdHJ5L2NhdGNoIGJsb2NrLlxuICAgICAgICBmaW5hbGx5RW50cnkgPSBudWxsO1xuICAgICAgfVxuXG4gICAgICB2YXIgcmVjb3JkID0gZmluYWxseUVudHJ5ID8gZmluYWxseUVudHJ5LmNvbXBsZXRpb24gOiB7fTtcbiAgICAgIHJlY29yZC50eXBlID0gdHlwZTtcbiAgICAgIHJlY29yZC5hcmcgPSBhcmc7XG5cbiAgICAgIGlmIChmaW5hbGx5RW50cnkpIHtcbiAgICAgICAgdGhpcy5tZXRob2QgPSBcIm5leHRcIjtcbiAgICAgICAgdGhpcy5uZXh0ID0gZmluYWxseUVudHJ5LmZpbmFsbHlMb2M7XG4gICAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5jb21wbGV0ZShyZWNvcmQpO1xuICAgIH0sXG5cbiAgICBjb21wbGV0ZTogZnVuY3Rpb24ocmVjb3JkLCBhZnRlckxvYykge1xuICAgICAgaWYgKHJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgICAgdGhyb3cgcmVjb3JkLmFyZztcbiAgICAgIH1cblxuICAgICAgaWYgKHJlY29yZC50eXBlID09PSBcImJyZWFrXCIgfHxcbiAgICAgICAgICByZWNvcmQudHlwZSA9PT0gXCJjb250aW51ZVwiKSB7XG4gICAgICAgIHRoaXMubmV4dCA9IHJlY29yZC5hcmc7XG4gICAgICB9IGVsc2UgaWYgKHJlY29yZC50eXBlID09PSBcInJldHVyblwiKSB7XG4gICAgICAgIHRoaXMucnZhbCA9IHRoaXMuYXJnID0gcmVjb3JkLmFyZztcbiAgICAgICAgdGhpcy5tZXRob2QgPSBcInJldHVyblwiO1xuICAgICAgICB0aGlzLm5leHQgPSBcImVuZFwiO1xuICAgICAgfSBlbHNlIGlmIChyZWNvcmQudHlwZSA9PT0gXCJub3JtYWxcIiAmJiBhZnRlckxvYykge1xuICAgICAgICB0aGlzLm5leHQgPSBhZnRlckxvYztcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfSxcblxuICAgIGZpbmlzaDogZnVuY3Rpb24oZmluYWxseUxvYykge1xuICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07XG4gICAgICAgIGlmIChlbnRyeS5maW5hbGx5TG9jID09PSBmaW5hbGx5TG9jKSB7XG4gICAgICAgICAgdGhpcy5jb21wbGV0ZShlbnRyeS5jb21wbGV0aW9uLCBlbnRyeS5hZnRlckxvYyk7XG4gICAgICAgICAgcmVzZXRUcnlFbnRyeShlbnRyeSk7XG4gICAgICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuXG4gICAgXCJjYXRjaFwiOiBmdW5jdGlvbih0cnlMb2MpIHtcbiAgICAgIGZvciAodmFyIGkgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy50cnlFbnRyaWVzW2ldO1xuICAgICAgICBpZiAoZW50cnkudHJ5TG9jID09PSB0cnlMb2MpIHtcbiAgICAgICAgICB2YXIgcmVjb3JkID0gZW50cnkuY29tcGxldGlvbjtcbiAgICAgICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgICAgICAgdmFyIHRocm93biA9IHJlY29yZC5hcmc7XG4gICAgICAgICAgICByZXNldFRyeUVudHJ5KGVudHJ5KTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHRocm93bjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBUaGUgY29udGV4dC5jYXRjaCBtZXRob2QgbXVzdCBvbmx5IGJlIGNhbGxlZCB3aXRoIGEgbG9jYXRpb25cbiAgICAgIC8vIGFyZ3VtZW50IHRoYXQgY29ycmVzcG9uZHMgdG8gYSBrbm93biBjYXRjaCBibG9jay5cbiAgICAgIHRocm93IG5ldyBFcnJvcihcImlsbGVnYWwgY2F0Y2ggYXR0ZW1wdFwiKTtcbiAgICB9LFxuXG4gICAgZGVsZWdhdGVZaWVsZDogZnVuY3Rpb24oaXRlcmFibGUsIHJlc3VsdE5hbWUsIG5leHRMb2MpIHtcbiAgICAgIHRoaXMuZGVsZWdhdGUgPSB7XG4gICAgICAgIGl0ZXJhdG9yOiB2YWx1ZXMoaXRlcmFibGUpLFxuICAgICAgICByZXN1bHROYW1lOiByZXN1bHROYW1lLFxuICAgICAgICBuZXh0TG9jOiBuZXh0TG9jXG4gICAgICB9O1xuXG4gICAgICBpZiAodGhpcy5tZXRob2QgPT09IFwibmV4dFwiKSB7XG4gICAgICAgIC8vIERlbGliZXJhdGVseSBmb3JnZXQgdGhlIGxhc3Qgc2VudCB2YWx1ZSBzbyB0aGF0IHdlIGRvbid0XG4gICAgICAgIC8vIGFjY2lkZW50YWxseSBwYXNzIGl0IG9uIHRvIHRoZSBkZWxlZ2F0ZS5cbiAgICAgICAgdGhpcy5hcmcgPSB1bmRlZmluZWQ7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgIH1cbiAgfTtcblxuICAvLyBSZWdhcmRsZXNzIG9mIHdoZXRoZXIgdGhpcyBzY3JpcHQgaXMgZXhlY3V0aW5nIGFzIGEgQ29tbW9uSlMgbW9kdWxlXG4gIC8vIG9yIG5vdCwgcmV0dXJuIHRoZSBydW50aW1lIG9iamVjdCBzbyB0aGF0IHdlIGNhbiBkZWNsYXJlIHRoZSB2YXJpYWJsZVxuICAvLyByZWdlbmVyYXRvclJ1bnRpbWUgaW4gdGhlIG91dGVyIHNjb3BlLCB3aGljaCBhbGxvd3MgdGhpcyBtb2R1bGUgdG8gYmVcbiAgLy8gaW5qZWN0ZWQgZWFzaWx5IGJ5IGBiaW4vcmVnZW5lcmF0b3IgLS1pbmNsdWRlLXJ1bnRpbWUgc2NyaXB0LmpzYC5cbiAgcmV0dXJuIGV4cG9ydHM7XG5cbn0oXG4gIC8vIElmIHRoaXMgc2NyaXB0IGlzIGV4ZWN1dGluZyBhcyBhIENvbW1vbkpTIG1vZHVsZSwgdXNlIG1vZHVsZS5leHBvcnRzXG4gIC8vIGFzIHRoZSByZWdlbmVyYXRvclJ1bnRpbWUgbmFtZXNwYWNlLiBPdGhlcndpc2UgY3JlYXRlIGEgbmV3IGVtcHR5XG4gIC8vIG9iamVjdC4gRWl0aGVyIHdheSwgdGhlIHJlc3VsdGluZyBvYmplY3Qgd2lsbCBiZSB1c2VkIHRvIGluaXRpYWxpemVcbiAgLy8gdGhlIHJlZ2VuZXJhdG9yUnVudGltZSB2YXJpYWJsZSBhdCB0aGUgdG9wIG9mIHRoaXMgZmlsZS5cbiAgdHlwZW9mIG1vZHVsZSA9PT0gXCJvYmplY3RcIiA/IG1vZHVsZS5leHBvcnRzIDoge31cbikpO1xuXG50cnkge1xuICByZWdlbmVyYXRvclJ1bnRpbWUgPSBydW50aW1lO1xufSBjYXRjaCAoYWNjaWRlbnRhbFN0cmljdE1vZGUpIHtcbiAgLy8gVGhpcyBtb2R1bGUgc2hvdWxkIG5vdCBiZSBydW5uaW5nIGluIHN0cmljdCBtb2RlLCBzbyB0aGUgYWJvdmVcbiAgLy8gYXNzaWdubWVudCBzaG91bGQgYWx3YXlzIHdvcmsgdW5sZXNzIHNvbWV0aGluZyBpcyBtaXNjb25maWd1cmVkLiBKdXN0XG4gIC8vIGluIGNhc2UgcnVudGltZS5qcyBhY2NpZGVudGFsbHkgcnVucyBpbiBzdHJpY3QgbW9kZSwgaW4gbW9kZXJuIGVuZ2luZXNcbiAgLy8gd2UgY2FuIGV4cGxpY2l0bHkgYWNjZXNzIGdsb2JhbFRoaXMuIEluIG9sZGVyIGVuZ2luZXMgd2UgY2FuIGVzY2FwZVxuICAvLyBzdHJpY3QgbW9kZSB1c2luZyBhIGdsb2JhbCBGdW5jdGlvbiBjYWxsLiBUaGlzIGNvdWxkIGNvbmNlaXZhYmx5IGZhaWxcbiAgLy8gaWYgYSBDb250ZW50IFNlY3VyaXR5IFBvbGljeSBmb3JiaWRzIHVzaW5nIEZ1bmN0aW9uLCBidXQgaW4gdGhhdCBjYXNlXG4gIC8vIHRoZSBwcm9wZXIgc29sdXRpb24gaXMgdG8gZml4IHRoZSBhY2NpZGVudGFsIHN0cmljdCBtb2RlIHByb2JsZW0uIElmXG4gIC8vIHlvdSd2ZSBtaXNjb25maWd1cmVkIHlvdXIgYnVuZGxlciB0byBmb3JjZSBzdHJpY3QgbW9kZSBhbmQgYXBwbGllZCBhXG4gIC8vIENTUCB0byBmb3JiaWQgRnVuY3Rpb24sIGFuZCB5b3UncmUgbm90IHdpbGxpbmcgdG8gZml4IGVpdGhlciBvZiB0aG9zZVxuICAvLyBwcm9ibGVtcywgcGxlYXNlIGRldGFpbCB5b3VyIHVuaXF1ZSBwcmVkaWNhbWVudCBpbiBhIEdpdEh1YiBpc3N1ZS5cbiAgaWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSBcIm9iamVjdFwiKSB7XG4gICAgZ2xvYmFsVGhpcy5yZWdlbmVyYXRvclJ1bnRpbWUgPSBydW50aW1lO1xuICB9IGVsc2Uge1xuICAgIEZ1bmN0aW9uKFwiclwiLCBcInJlZ2VuZXJhdG9yUnVudGltZSA9IHJcIikocnVudGltZSk7XG4gIH1cbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MC4yMC4yXG4gKiBzY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuJ3VzZSBzdHJpY3QnO3ZhciBmLGcsaCxrO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgcGVyZm9ybWFuY2UmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBwZXJmb3JtYW5jZS5ub3cpe3ZhciBsPXBlcmZvcm1hbmNlO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIGwubm93KCl9fWVsc2V7dmFyIHA9RGF0ZSxxPXAubm93KCk7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gcC5ub3coKS1xfX1cbmlmKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgTWVzc2FnZUNoYW5uZWwpe3ZhciB0PW51bGwsdT1udWxsLHc9ZnVuY3Rpb24oKXtpZihudWxsIT09dCl0cnl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTt0KCEwLGEpO3Q9bnVsbH1jYXRjaChiKXt0aHJvdyBzZXRUaW1lb3V0KHcsMCksYjt9fTtmPWZ1bmN0aW9uKGEpe251bGwhPT10P3NldFRpbWVvdXQoZiwwLGEpOih0PWEsc2V0VGltZW91dCh3LDApKX07Zz1mdW5jdGlvbihhLGIpe3U9c2V0VGltZW91dChhLGIpfTtoPWZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KHUpfTtleHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7cmV0dXJuITF9O2s9ZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbigpe319ZWxzZXt2YXIgeD13aW5kb3cuc2V0VGltZW91dCx5PXdpbmRvdy5jbGVhclRpbWVvdXQ7aWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjb25zb2xlKXt2YXIgej1cbndpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZTtcImZ1bmN0aW9uXCIhPT10eXBlb2Ygd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgcmVxdWVzdEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL3JlYWN0anMub3JnL2xpbmsvcmVhY3QtcG9seWZpbGxzXCIpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiB6JiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBjYW5jZWxBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9yZWFjdGpzLm9yZy9saW5rL3JlYWN0LXBvbHlmaWxsc1wiKX12YXIgQT0hMSxCPW51bGwsQz0tMSxEPTUsRT0wO2V4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9ZnVuY3Rpb24oKXtyZXR1cm4gZXhwb3J0cy51bnN0YWJsZV9ub3coKT49XG5FfTtrPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKGEpezA+YXx8MTI1PGE/Y29uc29sZS5lcnJvcihcImZvcmNlRnJhbWVSYXRlIHRha2VzIGEgcG9zaXRpdmUgaW50IGJldHdlZW4gMCBhbmQgMTI1LCBmb3JjaW5nIGZyYW1lIHJhdGVzIGhpZ2hlciB0aGFuIDEyNSBmcHMgaXMgbm90IHN1cHBvcnRlZFwiKTpEPTA8YT9NYXRoLmZsb29yKDFFMy9hKTo1fTt2YXIgRj1uZXcgTWVzc2FnZUNoYW5uZWwsRz1GLnBvcnQyO0YucG9ydDEub25tZXNzYWdlPWZ1bmN0aW9uKCl7aWYobnVsbCE9PUIpe3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7RT1hK0Q7dHJ5e0IoITAsYSk/Ry5wb3N0TWVzc2FnZShudWxsKTooQT0hMSxCPW51bGwpfWNhdGNoKGIpe3Rocm93IEcucG9zdE1lc3NhZ2UobnVsbCksYjt9fWVsc2UgQT0hMX07Zj1mdW5jdGlvbihhKXtCPWE7QXx8KEE9ITAsRy5wb3N0TWVzc2FnZShudWxsKSl9O2c9ZnVuY3Rpb24oYSxiKXtDPVxueChmdW5jdGlvbigpe2EoZXhwb3J0cy51bnN0YWJsZV9ub3coKSl9LGIpfTtoPWZ1bmN0aW9uKCl7eShDKTtDPS0xfX1mdW5jdGlvbiBIKGEsYil7dmFyIGM9YS5sZW5ndGg7YS5wdXNoKGIpO2E6Zm9yKDs7KXt2YXIgZD1jLTE+Pj4xLGU9YVtkXTtpZih2b2lkIDAhPT1lJiYwPEkoZSxiKSlhW2RdPWIsYVtjXT1lLGM9ZDtlbHNlIGJyZWFrIGF9fWZ1bmN0aW9uIEooYSl7YT1hWzBdO3JldHVybiB2b2lkIDA9PT1hP251bGw6YX1cbmZ1bmN0aW9uIEsoYSl7dmFyIGI9YVswXTtpZih2b2lkIDAhPT1iKXt2YXIgYz1hLnBvcCgpO2lmKGMhPT1iKXthWzBdPWM7YTpmb3IodmFyIGQ9MCxlPWEubGVuZ3RoO2Q8ZTspe3ZhciBtPTIqKGQrMSktMSxuPWFbbV0sdj1tKzEscj1hW3ZdO2lmKHZvaWQgMCE9PW4mJjA+SShuLGMpKXZvaWQgMCE9PXImJjA+SShyLG4pPyhhW2RdPXIsYVt2XT1jLGQ9dik6KGFbZF09bixhW21dPWMsZD1tKTtlbHNlIGlmKHZvaWQgMCE9PXImJjA+SShyLGMpKWFbZF09cixhW3ZdPWMsZD12O2Vsc2UgYnJlYWsgYX19cmV0dXJuIGJ9cmV0dXJuIG51bGx9ZnVuY3Rpb24gSShhLGIpe3ZhciBjPWEuc29ydEluZGV4LWIuc29ydEluZGV4O3JldHVybiAwIT09Yz9jOmEuaWQtYi5pZH12YXIgTD1bXSxNPVtdLE49MSxPPW51bGwsUD0zLFE9ITEsUj0hMSxTPSExO1xuZnVuY3Rpb24gVChhKXtmb3IodmFyIGI9SihNKTtudWxsIT09Yjspe2lmKG51bGw9PT1iLmNhbGxiYWNrKUsoTSk7ZWxzZSBpZihiLnN0YXJ0VGltZTw9YSlLKE0pLGIuc29ydEluZGV4PWIuZXhwaXJhdGlvblRpbWUsSChMLGIpO2Vsc2UgYnJlYWs7Yj1KKE0pfX1mdW5jdGlvbiBVKGEpe1M9ITE7VChhKTtpZighUilpZihudWxsIT09SihMKSlSPSEwLGYoVik7ZWxzZXt2YXIgYj1KKE0pO251bGwhPT1iJiZnKFUsYi5zdGFydFRpbWUtYSl9fVxuZnVuY3Rpb24gVihhLGIpe1I9ITE7UyYmKFM9ITEsaCgpKTtRPSEwO3ZhciBjPVA7dHJ5e1QoYik7Zm9yKE89SihMKTtudWxsIT09TyYmKCEoTy5leHBpcmF0aW9uVGltZT5iKXx8YSYmIWV4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQoKSk7KXt2YXIgZD1PLmNhbGxiYWNrO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXtPLmNhbGxiYWNrPW51bGw7UD1PLnByaW9yaXR5TGV2ZWw7dmFyIGU9ZChPLmV4cGlyYXRpb25UaW1lPD1iKTtiPWV4cG9ydHMudW5zdGFibGVfbm93KCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGU/Ty5jYWxsYmFjaz1lOk89PT1KKEwpJiZLKEwpO1QoYil9ZWxzZSBLKEwpO089SihMKX1pZihudWxsIT09Tyl2YXIgbT0hMDtlbHNle3ZhciBuPUooTSk7bnVsbCE9PW4mJmcoVSxuLnN0YXJ0VGltZS1iKTttPSExfXJldHVybiBtfWZpbmFsbHl7Tz1udWxsLFA9YyxRPSExfX12YXIgVz1rO2V4cG9ydHMudW5zdGFibGVfSWRsZVByaW9yaXR5PTU7XG5leHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Mb3dQcmlvcml0eT00O2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX1Byb2ZpbGluZz1udWxsO2V4cG9ydHMudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHk9MjtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe2EuY2FsbGJhY2s9bnVsbH07ZXhwb3J0cy51bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbj1mdW5jdGlvbigpe1J8fFF8fChSPSEwLGYoVikpfTtleHBvcnRzLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsPWZ1bmN0aW9uKCl7cmV0dXJuIFB9O2V4cG9ydHMudW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGU9ZnVuY3Rpb24oKXtyZXR1cm4gSihMKX07XG5leHBvcnRzLnVuc3RhYmxlX25leHQ9ZnVuY3Rpb24oYSl7c3dpdGNoKFApe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOnZhciBiPTM7YnJlYWs7ZGVmYXVsdDpiPVB9dmFyIGM9UDtQPWI7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtQPWN9fTtleHBvcnRzLnVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX3JlcXVlc3RQYWludD1XO2V4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGM9UDtQPWE7dHJ5e3JldHVybiBiKCl9ZmluYWxseXtQPWN9fTtcbmV4cG9ydHMudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjaz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jPyhjPWMuZGVsYXksYz1cIm51bWJlclwiPT09dHlwZW9mIGMmJjA8Yz9kK2M6ZCk6Yz1kO3N3aXRjaChhKXtjYXNlIDE6dmFyIGU9LTE7YnJlYWs7Y2FzZSAyOmU9MjUwO2JyZWFrO2Nhc2UgNTplPTEwNzM3NDE4MjM7YnJlYWs7Y2FzZSA0OmU9MUU0O2JyZWFrO2RlZmF1bHQ6ZT01RTN9ZT1jK2U7YT17aWQ6TisrLGNhbGxiYWNrOmIscHJpb3JpdHlMZXZlbDphLHN0YXJ0VGltZTpjLGV4cGlyYXRpb25UaW1lOmUsc29ydEluZGV4Oi0xfTtjPmQ/KGEuc29ydEluZGV4PWMsSChNLGEpLG51bGw9PT1KKEwpJiZhPT09SihNKSYmKFM/aCgpOlM9ITAsZyhVLGMtZCkpKTooYS5zb3J0SW5kZXg9ZSxIKEwsYSksUnx8UXx8KFI9ITAsZihWKSkpO3JldHVybiBhfTtcbmV4cG9ydHMudW5zdGFibGVfd3JhcENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPVA7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGM9UDtQPWI7dHJ5e3JldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1maW5hbGx5e1A9Y319fTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuXG4vKipcclxuICogQWN0aW9ucyByZXByZXNlbnQgdGhlIHR5cGUgb2YgY2hhbmdlIHRvIGEgbG9jYXRpb24gdmFsdWUuXHJcbiAqXHJcbiAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3JlbWl4LXJ1bi9oaXN0b3J5L3RyZWUvbWFpbi9kb2NzL2FwaS1yZWZlcmVuY2UubWQjYWN0aW9uXHJcbiAqL1xudmFyIEFjdGlvbjtcblxuKGZ1bmN0aW9uIChBY3Rpb24pIHtcbiAgLyoqXHJcbiAgICogQSBQT1AgaW5kaWNhdGVzIGEgY2hhbmdlIHRvIGFuIGFyYml0cmFyeSBpbmRleCBpbiB0aGUgaGlzdG9yeSBzdGFjaywgc3VjaFxyXG4gICAqIGFzIGEgYmFjayBvciBmb3J3YXJkIG5hdmlnYXRpb24uIEl0IGRvZXMgbm90IGRlc2NyaWJlIHRoZSBkaXJlY3Rpb24gb2YgdGhlXHJcbiAgICogbmF2aWdhdGlvbiwgb25seSB0aGF0IHRoZSBjdXJyZW50IGluZGV4IGNoYW5nZWQuXHJcbiAgICpcclxuICAgKiBOb3RlOiBUaGlzIGlzIHRoZSBkZWZhdWx0IGFjdGlvbiBmb3IgbmV3bHkgY3JlYXRlZCBoaXN0b3J5IG9iamVjdHMuXHJcbiAgICovXG4gIEFjdGlvbltcIlBvcFwiXSA9IFwiUE9QXCI7XG4gIC8qKlxyXG4gICAqIEEgUFVTSCBpbmRpY2F0ZXMgYSBuZXcgZW50cnkgYmVpbmcgYWRkZWQgdG8gdGhlIGhpc3Rvcnkgc3RhY2ssIHN1Y2ggYXMgd2hlblxyXG4gICAqIGEgbGluayBpcyBjbGlja2VkIGFuZCBhIG5ldyBwYWdlIGxvYWRzLiBXaGVuIHRoaXMgaGFwcGVucywgYWxsIHN1YnNlcXVlbnRcclxuICAgKiBlbnRyaWVzIGluIHRoZSBzdGFjayBhcmUgbG9zdC5cclxuICAgKi9cblxuICBBY3Rpb25bXCJQdXNoXCJdID0gXCJQVVNIXCI7XG4gIC8qKlxyXG4gICAqIEEgUkVQTEFDRSBpbmRpY2F0ZXMgdGhlIGVudHJ5IGF0IHRoZSBjdXJyZW50IGluZGV4IGluIHRoZSBoaXN0b3J5IHN0YWNrXHJcbiAgICogYmVpbmcgcmVwbGFjZWQgYnkgYSBuZXcgb25lLlxyXG4gICAqL1xuXG4gIEFjdGlvbltcIlJlcGxhY2VcIl0gPSBcIlJFUExBQ0VcIjtcbn0pKEFjdGlvbiB8fCAoQWN0aW9uID0ge30pKTtcblxudmFyIHJlYWRPbmx5ID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gZnVuY3Rpb24gKG9iaikge1xuICByZXR1cm4gT2JqZWN0LmZyZWV6ZShvYmopO1xufSA6IGZ1bmN0aW9uIChvYmopIHtcbiAgcmV0dXJuIG9iajtcbn07XG5cbmZ1bmN0aW9uIHdhcm5pbmcoY29uZCwgbWVzc2FnZSkge1xuICBpZiAoIWNvbmQpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIGNvbnNvbGUud2FybihtZXNzYWdlKTtcblxuICAgIHRyeSB7XG4gICAgICAvLyBXZWxjb21lIHRvIGRlYnVnZ2luZyBoaXN0b3J5IVxuICAgICAgLy9cbiAgICAgIC8vIFRoaXMgZXJyb3IgaXMgdGhyb3duIGFzIGEgY29udmVuaWVuY2Ugc28geW91IGNhbiBtb3JlIGVhc2lseVxuICAgICAgLy8gZmluZCB0aGUgc291cmNlIGZvciBhIHdhcm5pbmcgdGhhdCBhcHBlYXJzIGluIHRoZSBjb25zb2xlIGJ5XG4gICAgICAvLyBlbmFibGluZyBcInBhdXNlIG9uIGV4Y2VwdGlvbnNcIiBpbiB5b3VyIEphdmFTY3JpcHQgZGVidWdnZXIuXG4gICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1lbXB0eVxuICAgIH0gY2F0Y2ggKGUpIHt9XG4gIH1cbn1cblxudmFyIEJlZm9yZVVubG9hZEV2ZW50VHlwZSA9ICdiZWZvcmV1bmxvYWQnO1xudmFyIEhhc2hDaGFuZ2VFdmVudFR5cGUgPSAnaGFzaGNoYW5nZSc7XG52YXIgUG9wU3RhdGVFdmVudFR5cGUgPSAncG9wc3RhdGUnO1xuLyoqXHJcbiAqIEJyb3dzZXIgaGlzdG9yeSBzdG9yZXMgdGhlIGxvY2F0aW9uIGluIHJlZ3VsYXIgVVJMcy4gVGhpcyBpcyB0aGUgc3RhbmRhcmQgZm9yXHJcbiAqIG1vc3Qgd2ViIGFwcHMsIGJ1dCBpdCByZXF1aXJlcyBzb21lIGNvbmZpZ3VyYXRpb24gb24gdGhlIHNlcnZlciB0byBlbnN1cmUgeW91XHJcbiAqIHNlcnZlIHRoZSBzYW1lIGFwcCBhdCBtdWx0aXBsZSBVUkxzLlxyXG4gKlxyXG4gKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9yZW1peC1ydW4vaGlzdG9yeS90cmVlL21haW4vZG9jcy9hcGktcmVmZXJlbmNlLm1kI2NyZWF0ZWJyb3dzZXJoaXN0b3J5XHJcbiAqL1xuXG5mdW5jdGlvbiBjcmVhdGVCcm93c2VySGlzdG9yeShvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cblxuICB2YXIgX29wdGlvbnMgPSBvcHRpb25zLFxuICAgICAgX29wdGlvbnMkd2luZG93ID0gX29wdGlvbnMud2luZG93LFxuICAgICAgd2luZG93ID0gX29wdGlvbnMkd2luZG93ID09PSB2b2lkIDAgPyBkb2N1bWVudC5kZWZhdWx0VmlldyA6IF9vcHRpb25zJHdpbmRvdztcbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcblxuICBmdW5jdGlvbiBnZXRJbmRleEFuZExvY2F0aW9uKCkge1xuICAgIHZhciBfd2luZG93JGxvY2F0aW9uID0gd2luZG93LmxvY2F0aW9uLFxuICAgICAgICBwYXRobmFtZSA9IF93aW5kb3ckbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICAgIHNlYXJjaCA9IF93aW5kb3ckbG9jYXRpb24uc2VhcmNoLFxuICAgICAgICBoYXNoID0gX3dpbmRvdyRsb2NhdGlvbi5oYXNoO1xuICAgIHZhciBzdGF0ZSA9IGdsb2JhbEhpc3Rvcnkuc3RhdGUgfHwge307XG4gICAgcmV0dXJuIFtzdGF0ZS5pZHgsIHJlYWRPbmx5KHtcbiAgICAgIHBhdGhuYW1lOiBwYXRobmFtZSxcbiAgICAgIHNlYXJjaDogc2VhcmNoLFxuICAgICAgaGFzaDogaGFzaCxcbiAgICAgIHN0YXRlOiBzdGF0ZS51c3IgfHwgbnVsbCxcbiAgICAgIGtleTogc3RhdGUua2V5IHx8ICdkZWZhdWx0J1xuICAgIH0pXTtcbiAgfVxuXG4gIHZhciBibG9ja2VkUG9wVHggPSBudWxsO1xuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcCgpIHtcbiAgICBpZiAoYmxvY2tlZFBvcFR4KSB7XG4gICAgICBibG9ja2Vycy5jYWxsKGJsb2NrZWRQb3BUeCk7XG4gICAgICBibG9ja2VkUG9wVHggPSBudWxsO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgbmV4dEFjdGlvbiA9IEFjdGlvbi5Qb3A7XG5cbiAgICAgIHZhciBfZ2V0SW5kZXhBbmRMb2NhdGlvbiA9IGdldEluZGV4QW5kTG9jYXRpb24oKSxcbiAgICAgICAgICBuZXh0SW5kZXggPSBfZ2V0SW5kZXhBbmRMb2NhdGlvblswXSxcbiAgICAgICAgICBuZXh0TG9jYXRpb24gPSBfZ2V0SW5kZXhBbmRMb2NhdGlvblsxXTtcblxuICAgICAgaWYgKGJsb2NrZXJzLmxlbmd0aCkge1xuICAgICAgICBpZiAobmV4dEluZGV4ICE9IG51bGwpIHtcbiAgICAgICAgICB2YXIgZGVsdGEgPSBpbmRleCAtIG5leHRJbmRleDtcblxuICAgICAgICAgIGlmIChkZWx0YSkge1xuICAgICAgICAgICAgLy8gUmV2ZXJ0IHRoZSBQT1BcbiAgICAgICAgICAgIGJsb2NrZWRQb3BUeCA9IHtcbiAgICAgICAgICAgICAgYWN0aW9uOiBuZXh0QWN0aW9uLFxuICAgICAgICAgICAgICBsb2NhdGlvbjogbmV4dExvY2F0aW9uLFxuICAgICAgICAgICAgICByZXRyeTogZnVuY3Rpb24gcmV0cnkoKSB7XG4gICAgICAgICAgICAgICAgZ28oZGVsdGEgKiAtMSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBnbyhkZWx0YSk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIFRyeWluZyB0byBQT1AgdG8gYSBsb2NhdGlvbiB3aXRoIG5vIGluZGV4LiBXZSBkaWQgbm90IGNyZWF0ZVxuICAgICAgICAgIC8vIHRoaXMgbG9jYXRpb24sIHNvIHdlIGNhbid0IGVmZmVjdGl2ZWx5IGJsb2NrIHRoZSBuYXZpZ2F0aW9uLlxuICAgICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsIC8vIFRPRE86IFdyaXRlIHVwIGEgZG9jIHRoYXQgZXhwbGFpbnMgb3VyIGJsb2NraW5nIHN0cmF0ZWd5IGluXG4gICAgICAgICAgLy8gZGV0YWlsIGFuZCBsaW5rIHRvIGl0IGhlcmUgc28gcGVvcGxlIGNhbiB1bmRlcnN0YW5kIGJldHRlciB3aGF0XG4gICAgICAgICAgLy8gaXMgZ29pbmcgb24gYW5kIGhvdyB0byBhdm9pZCBpdC5cbiAgICAgICAgICBcIllvdSBhcmUgdHJ5aW5nIHRvIGJsb2NrIGEgUE9QIG5hdmlnYXRpb24gdG8gYSBsb2NhdGlvbiB0aGF0IHdhcyBub3QgXCIgKyBcImNyZWF0ZWQgYnkgdGhlIGhpc3RvcnkgbGlicmFyeS4gVGhlIGJsb2NrIHdpbGwgZmFpbCBzaWxlbnRseSBpbiBcIiArIFwicHJvZHVjdGlvbiwgYnV0IGluIGdlbmVyYWwgeW91IHNob3VsZCBkbyBhbGwgbmF2aWdhdGlvbiB3aXRoIHRoZSBcIiArIFwiaGlzdG9yeSBsaWJyYXJ5IChpbnN0ZWFkIG9mIHVzaW5nIHdpbmRvdy5oaXN0b3J5LnB1c2hTdGF0ZSBkaXJlY3RseSkgXCIgKyBcInRvIGF2b2lkIHRoaXMgc2l0dWF0aW9uLlwiKSA6IHZvaWQgMDtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYXBwbHlUeChuZXh0QWN0aW9uKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihQb3BTdGF0ZUV2ZW50VHlwZSwgaGFuZGxlUG9wKTtcbiAgdmFyIGFjdGlvbiA9IEFjdGlvbi5Qb3A7XG5cbiAgdmFyIF9nZXRJbmRleEFuZExvY2F0aW9uMiA9IGdldEluZGV4QW5kTG9jYXRpb24oKSxcbiAgICAgIGluZGV4ID0gX2dldEluZGV4QW5kTG9jYXRpb24yWzBdLFxuICAgICAgbG9jYXRpb24gPSBfZ2V0SW5kZXhBbmRMb2NhdGlvbjJbMV07XG5cbiAgdmFyIGxpc3RlbmVycyA9IGNyZWF0ZUV2ZW50cygpO1xuICB2YXIgYmxvY2tlcnMgPSBjcmVhdGVFdmVudHMoKTtcblxuICBpZiAoaW5kZXggPT0gbnVsbCkge1xuICAgIGluZGV4ID0gMDtcbiAgICBnbG9iYWxIaXN0b3J5LnJlcGxhY2VTdGF0ZShfZXh0ZW5kcyh7fSwgZ2xvYmFsSGlzdG9yeS5zdGF0ZSwge1xuICAgICAgaWR4OiBpbmRleFxuICAgIH0pLCAnJyk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVIcmVmKHRvKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB0byA9PT0gJ3N0cmluZycgPyB0byA6IGNyZWF0ZVBhdGgodG8pO1xuICB9IC8vIHN0YXRlIGRlZmF1bHRzIHRvIGBudWxsYCBiZWNhdXNlIGB3aW5kb3cuaGlzdG9yeS5zdGF0ZWAgZG9lc1xuXG5cbiAgZnVuY3Rpb24gZ2V0TmV4dExvY2F0aW9uKHRvLCBzdGF0ZSkge1xuICAgIGlmIChzdGF0ZSA9PT0gdm9pZCAwKSB7XG4gICAgICBzdGF0ZSA9IG51bGw7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlYWRPbmx5KF9leHRlbmRzKHtcbiAgICAgIHBhdGhuYW1lOiBsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgIGhhc2g6ICcnLFxuICAgICAgc2VhcmNoOiAnJ1xuICAgIH0sIHR5cGVvZiB0byA9PT0gJ3N0cmluZycgPyBwYXJzZVBhdGgodG8pIDogdG8sIHtcbiAgICAgIHN0YXRlOiBzdGF0ZSxcbiAgICAgIGtleTogY3JlYXRlS2V5KClcbiAgICB9KSk7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRIaXN0b3J5U3RhdGVBbmRVcmwobmV4dExvY2F0aW9uLCBpbmRleCkge1xuICAgIHJldHVybiBbe1xuICAgICAgdXNyOiBuZXh0TG9jYXRpb24uc3RhdGUsXG4gICAgICBrZXk6IG5leHRMb2NhdGlvbi5rZXksXG4gICAgICBpZHg6IGluZGV4XG4gICAgfSwgY3JlYXRlSHJlZihuZXh0TG9jYXRpb24pXTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGFsbG93VHgoYWN0aW9uLCBsb2NhdGlvbiwgcmV0cnkpIHtcbiAgICByZXR1cm4gIWJsb2NrZXJzLmxlbmd0aCB8fCAoYmxvY2tlcnMuY2FsbCh7XG4gICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgIHJldHJ5OiByZXRyeVxuICAgIH0pLCBmYWxzZSk7XG4gIH1cblxuICBmdW5jdGlvbiBhcHBseVR4KG5leHRBY3Rpb24pIHtcbiAgICBhY3Rpb24gPSBuZXh0QWN0aW9uO1xuXG4gICAgdmFyIF9nZXRJbmRleEFuZExvY2F0aW9uMyA9IGdldEluZGV4QW5kTG9jYXRpb24oKTtcblxuICAgIGluZGV4ID0gX2dldEluZGV4QW5kTG9jYXRpb24zWzBdO1xuICAgIGxvY2F0aW9uID0gX2dldEluZGV4QW5kTG9jYXRpb24zWzFdO1xuICAgIGxpc3RlbmVycy5jYWxsKHtcbiAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBwdXNoKHRvLCBzdGF0ZSkge1xuICAgIHZhciBuZXh0QWN0aW9uID0gQWN0aW9uLlB1c2g7XG4gICAgdmFyIG5leHRMb2NhdGlvbiA9IGdldE5leHRMb2NhdGlvbih0bywgc3RhdGUpO1xuXG4gICAgZnVuY3Rpb24gcmV0cnkoKSB7XG4gICAgICBwdXNoKHRvLCBzdGF0ZSk7XG4gICAgfVxuXG4gICAgaWYgKGFsbG93VHgobmV4dEFjdGlvbiwgbmV4dExvY2F0aW9uLCByZXRyeSkpIHtcbiAgICAgIHZhciBfZ2V0SGlzdG9yeVN0YXRlQW5kVXIgPSBnZXRIaXN0b3J5U3RhdGVBbmRVcmwobmV4dExvY2F0aW9uLCBpbmRleCArIDEpLFxuICAgICAgICAgIGhpc3RvcnlTdGF0ZSA9IF9nZXRIaXN0b3J5U3RhdGVBbmRVclswXSxcbiAgICAgICAgICB1cmwgPSBfZ2V0SGlzdG9yeVN0YXRlQW5kVXJbMV07IC8vIFRPRE86IFN1cHBvcnQgZm9yY2VkIHJlbG9hZGluZ1xuICAgICAgLy8gdHJ5Li4uY2F0Y2ggYmVjYXVzZSBpT1MgbGltaXRzIHVzIHRvIDEwMCBwdXNoU3RhdGUgY2FsbHMgOi9cblxuXG4gICAgICB0cnkge1xuICAgICAgICBnbG9iYWxIaXN0b3J5LnB1c2hTdGF0ZShoaXN0b3J5U3RhdGUsICcnLCB1cmwpO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgLy8gVGhleSBhcmUgZ29pbmcgdG8gbG9zZSBzdGF0ZSBoZXJlLCBidXQgdGhlcmUgaXMgbm8gcmVhbFxuICAgICAgICAvLyB3YXkgdG8gd2FybiB0aGVtIGFib3V0IGl0IHNpbmNlIHRoZSBwYWdlIHdpbGwgcmVmcmVzaC4uLlxuICAgICAgICB3aW5kb3cubG9jYXRpb24uYXNzaWduKHVybCk7XG4gICAgICB9XG5cbiAgICAgIGFwcGx5VHgobmV4dEFjdGlvbik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZSh0bywgc3RhdGUpIHtcbiAgICB2YXIgbmV4dEFjdGlvbiA9IEFjdGlvbi5SZXBsYWNlO1xuICAgIHZhciBuZXh0TG9jYXRpb24gPSBnZXROZXh0TG9jYXRpb24odG8sIHN0YXRlKTtcblxuICAgIGZ1bmN0aW9uIHJldHJ5KCkge1xuICAgICAgcmVwbGFjZSh0bywgc3RhdGUpO1xuICAgIH1cblxuICAgIGlmIChhbGxvd1R4KG5leHRBY3Rpb24sIG5leHRMb2NhdGlvbiwgcmV0cnkpKSB7XG4gICAgICB2YXIgX2dldEhpc3RvcnlTdGF0ZUFuZFVyMiA9IGdldEhpc3RvcnlTdGF0ZUFuZFVybChuZXh0TG9jYXRpb24sIGluZGV4KSxcbiAgICAgICAgICBoaXN0b3J5U3RhdGUgPSBfZ2V0SGlzdG9yeVN0YXRlQW5kVXIyWzBdLFxuICAgICAgICAgIHVybCA9IF9nZXRIaXN0b3J5U3RhdGVBbmRVcjJbMV07IC8vIFRPRE86IFN1cHBvcnQgZm9yY2VkIHJlbG9hZGluZ1xuXG5cbiAgICAgIGdsb2JhbEhpc3RvcnkucmVwbGFjZVN0YXRlKGhpc3RvcnlTdGF0ZSwgJycsIHVybCk7XG4gICAgICBhcHBseVR4KG5leHRBY3Rpb24pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKGRlbHRhKSB7XG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhkZWx0YSk7XG4gIH1cblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBnZXQgYWN0aW9uKCkge1xuICAgICAgcmV0dXJuIGFjdGlvbjtcbiAgICB9LFxuXG4gICAgZ2V0IGxvY2F0aW9uKCkge1xuICAgICAgcmV0dXJuIGxvY2F0aW9uO1xuICAgIH0sXG5cbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgYmFjazogZnVuY3Rpb24gYmFjaygpIHtcbiAgICAgIGdvKC0xKTtcbiAgICB9LFxuICAgIGZvcndhcmQ6IGZ1bmN0aW9uIGZvcndhcmQoKSB7XG4gICAgICBnbygxKTtcbiAgICB9LFxuICAgIGxpc3RlbjogZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgICByZXR1cm4gbGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuICAgIH0sXG4gICAgYmxvY2s6IGZ1bmN0aW9uIGJsb2NrKGJsb2NrZXIpIHtcbiAgICAgIHZhciB1bmJsb2NrID0gYmxvY2tlcnMucHVzaChibG9ja2VyKTtcblxuICAgICAgaWYgKGJsb2NrZXJzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihCZWZvcmVVbmxvYWRFdmVudFR5cGUsIHByb21wdEJlZm9yZVVubG9hZCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHVuYmxvY2soKTsgLy8gUmVtb3ZlIHRoZSBiZWZvcmV1bmxvYWQgbGlzdGVuZXIgc28gdGhlIGRvY3VtZW50IG1heVxuICAgICAgICAvLyBzdGlsbCBiZSBzYWx2YWdlYWJsZSBpbiB0aGUgcGFnZWhpZGUgZXZlbnQuXG4gICAgICAgIC8vIFNlZSBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnLyN1bmxvYWRpbmctZG9jdW1lbnRzXG5cbiAgICAgICAgaWYgKCFibG9ja2Vycy5sZW5ndGgpIHtcbiAgICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihCZWZvcmVVbmxvYWRFdmVudFR5cGUsIHByb21wdEJlZm9yZVVubG9hZCk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cbi8qKlxyXG4gKiBIYXNoIGhpc3Rvcnkgc3RvcmVzIHRoZSBsb2NhdGlvbiBpbiB3aW5kb3cubG9jYXRpb24uaGFzaC4gVGhpcyBtYWtlcyBpdCBpZGVhbFxyXG4gKiBmb3Igc2l0dWF0aW9ucyB3aGVyZSB5b3UgZG9uJ3Qgd2FudCB0byBzZW5kIHRoZSBsb2NhdGlvbiB0byB0aGUgc2VydmVyIGZvclxyXG4gKiBzb21lIHJlYXNvbiwgZWl0aGVyIGJlY2F1c2UgeW91IGRvIGNhbm5vdCBjb25maWd1cmUgaXQgb3IgdGhlIFVSTCBzcGFjZSBpc1xyXG4gKiByZXNlcnZlZCBmb3Igc29tZXRoaW5nIGVsc2UuXHJcbiAqXHJcbiAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3JlbWl4LXJ1bi9oaXN0b3J5L3RyZWUvbWFpbi9kb2NzL2FwaS1yZWZlcmVuY2UubWQjY3JlYXRlaGFzaGhpc3RvcnlcclxuICovXG5cbmZ1bmN0aW9uIGNyZWF0ZUhhc2hIaXN0b3J5KG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuXG4gIHZhciBfb3B0aW9uczIgPSBvcHRpb25zLFxuICAgICAgX29wdGlvbnMyJHdpbmRvdyA9IF9vcHRpb25zMi53aW5kb3csXG4gICAgICB3aW5kb3cgPSBfb3B0aW9uczIkd2luZG93ID09PSB2b2lkIDAgPyBkb2N1bWVudC5kZWZhdWx0VmlldyA6IF9vcHRpb25zMiR3aW5kb3c7XG4gIHZhciBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XG5cbiAgZnVuY3Rpb24gZ2V0SW5kZXhBbmRMb2NhdGlvbigpIHtcbiAgICB2YXIgX3BhcnNlUGF0aCA9IHBhcnNlUGF0aCh3aW5kb3cubG9jYXRpb24uaGFzaC5zdWJzdHIoMSkpLFxuICAgICAgICBfcGFyc2VQYXRoJHBhdGhuYW1lID0gX3BhcnNlUGF0aC5wYXRobmFtZSxcbiAgICAgICAgcGF0aG5hbWUgPSBfcGFyc2VQYXRoJHBhdGhuYW1lID09PSB2b2lkIDAgPyAnLycgOiBfcGFyc2VQYXRoJHBhdGhuYW1lLFxuICAgICAgICBfcGFyc2VQYXRoJHNlYXJjaCA9IF9wYXJzZVBhdGguc2VhcmNoLFxuICAgICAgICBzZWFyY2ggPSBfcGFyc2VQYXRoJHNlYXJjaCA9PT0gdm9pZCAwID8gJycgOiBfcGFyc2VQYXRoJHNlYXJjaCxcbiAgICAgICAgX3BhcnNlUGF0aCRoYXNoID0gX3BhcnNlUGF0aC5oYXNoLFxuICAgICAgICBoYXNoID0gX3BhcnNlUGF0aCRoYXNoID09PSB2b2lkIDAgPyAnJyA6IF9wYXJzZVBhdGgkaGFzaDtcblxuICAgIHZhciBzdGF0ZSA9IGdsb2JhbEhpc3Rvcnkuc3RhdGUgfHwge307XG4gICAgcmV0dXJuIFtzdGF0ZS5pZHgsIHJlYWRPbmx5KHtcbiAgICAgIHBhdGhuYW1lOiBwYXRobmFtZSxcbiAgICAgIHNlYXJjaDogc2VhcmNoLFxuICAgICAgaGFzaDogaGFzaCxcbiAgICAgIHN0YXRlOiBzdGF0ZS51c3IgfHwgbnVsbCxcbiAgICAgIGtleTogc3RhdGUua2V5IHx8ICdkZWZhdWx0J1xuICAgIH0pXTtcbiAgfVxuXG4gIHZhciBibG9ja2VkUG9wVHggPSBudWxsO1xuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcCgpIHtcbiAgICBpZiAoYmxvY2tlZFBvcFR4KSB7XG4gICAgICBibG9ja2Vycy5jYWxsKGJsb2NrZWRQb3BUeCk7XG4gICAgICBibG9ja2VkUG9wVHggPSBudWxsO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgbmV4dEFjdGlvbiA9IEFjdGlvbi5Qb3A7XG5cbiAgICAgIHZhciBfZ2V0SW5kZXhBbmRMb2NhdGlvbjQgPSBnZXRJbmRleEFuZExvY2F0aW9uKCksXG4gICAgICAgICAgbmV4dEluZGV4ID0gX2dldEluZGV4QW5kTG9jYXRpb240WzBdLFxuICAgICAgICAgIG5leHRMb2NhdGlvbiA9IF9nZXRJbmRleEFuZExvY2F0aW9uNFsxXTtcblxuICAgICAgaWYgKGJsb2NrZXJzLmxlbmd0aCkge1xuICAgICAgICBpZiAobmV4dEluZGV4ICE9IG51bGwpIHtcbiAgICAgICAgICB2YXIgZGVsdGEgPSBpbmRleCAtIG5leHRJbmRleDtcblxuICAgICAgICAgIGlmIChkZWx0YSkge1xuICAgICAgICAgICAgLy8gUmV2ZXJ0IHRoZSBQT1BcbiAgICAgICAgICAgIGJsb2NrZWRQb3BUeCA9IHtcbiAgICAgICAgICAgICAgYWN0aW9uOiBuZXh0QWN0aW9uLFxuICAgICAgICAgICAgICBsb2NhdGlvbjogbmV4dExvY2F0aW9uLFxuICAgICAgICAgICAgICByZXRyeTogZnVuY3Rpb24gcmV0cnkoKSB7XG4gICAgICAgICAgICAgICAgZ28oZGVsdGEgKiAtMSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBnbyhkZWx0YSk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIFRyeWluZyB0byBQT1AgdG8gYSBsb2NhdGlvbiB3aXRoIG5vIGluZGV4LiBXZSBkaWQgbm90IGNyZWF0ZVxuICAgICAgICAgIC8vIHRoaXMgbG9jYXRpb24sIHNvIHdlIGNhbid0IGVmZmVjdGl2ZWx5IGJsb2NrIHRoZSBuYXZpZ2F0aW9uLlxuICAgICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsIC8vIFRPRE86IFdyaXRlIHVwIGEgZG9jIHRoYXQgZXhwbGFpbnMgb3VyIGJsb2NraW5nIHN0cmF0ZWd5IGluXG4gICAgICAgICAgLy8gZGV0YWlsIGFuZCBsaW5rIHRvIGl0IGhlcmUgc28gcGVvcGxlIGNhbiB1bmRlcnN0YW5kIGJldHRlclxuICAgICAgICAgIC8vIHdoYXQgaXMgZ29pbmcgb24gYW5kIGhvdyB0byBhdm9pZCBpdC5cbiAgICAgICAgICBcIllvdSBhcmUgdHJ5aW5nIHRvIGJsb2NrIGEgUE9QIG5hdmlnYXRpb24gdG8gYSBsb2NhdGlvbiB0aGF0IHdhcyBub3QgXCIgKyBcImNyZWF0ZWQgYnkgdGhlIGhpc3RvcnkgbGlicmFyeS4gVGhlIGJsb2NrIHdpbGwgZmFpbCBzaWxlbnRseSBpbiBcIiArIFwicHJvZHVjdGlvbiwgYnV0IGluIGdlbmVyYWwgeW91IHNob3VsZCBkbyBhbGwgbmF2aWdhdGlvbiB3aXRoIHRoZSBcIiArIFwiaGlzdG9yeSBsaWJyYXJ5IChpbnN0ZWFkIG9mIHVzaW5nIHdpbmRvdy5oaXN0b3J5LnB1c2hTdGF0ZSBkaXJlY3RseSkgXCIgKyBcInRvIGF2b2lkIHRoaXMgc2l0dWF0aW9uLlwiKSA6IHZvaWQgMDtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYXBwbHlUeChuZXh0QWN0aW9uKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihQb3BTdGF0ZUV2ZW50VHlwZSwgaGFuZGxlUG9wKTsgLy8gcG9wc3RhdGUgZG9lcyBub3QgZmlyZSBvbiBoYXNoY2hhbmdlIGluIElFIDExIGFuZCBvbGQgKHRyaWRlbnQpIEVkZ2VcbiAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZGUvZG9jcy9XZWIvQVBJL1dpbmRvdy9wb3BzdGF0ZV9ldmVudFxuXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudFR5cGUsIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgX2dldEluZGV4QW5kTG9jYXRpb241ID0gZ2V0SW5kZXhBbmRMb2NhdGlvbigpLFxuICAgICAgICBuZXh0TG9jYXRpb24gPSBfZ2V0SW5kZXhBbmRMb2NhdGlvbjVbMV07IC8vIElnbm9yZSBleHRyYW5lb3VzIGhhc2hjaGFuZ2UgZXZlbnRzLlxuXG5cbiAgICBpZiAoY3JlYXRlUGF0aChuZXh0TG9jYXRpb24pICE9PSBjcmVhdGVQYXRoKGxvY2F0aW9uKSkge1xuICAgICAgaGFuZGxlUG9wKCk7XG4gICAgfVxuICB9KTtcbiAgdmFyIGFjdGlvbiA9IEFjdGlvbi5Qb3A7XG5cbiAgdmFyIF9nZXRJbmRleEFuZExvY2F0aW9uNiA9IGdldEluZGV4QW5kTG9jYXRpb24oKSxcbiAgICAgIGluZGV4ID0gX2dldEluZGV4QW5kTG9jYXRpb242WzBdLFxuICAgICAgbG9jYXRpb24gPSBfZ2V0SW5kZXhBbmRMb2NhdGlvbjZbMV07XG5cbiAgdmFyIGxpc3RlbmVycyA9IGNyZWF0ZUV2ZW50cygpO1xuICB2YXIgYmxvY2tlcnMgPSBjcmVhdGVFdmVudHMoKTtcblxuICBpZiAoaW5kZXggPT0gbnVsbCkge1xuICAgIGluZGV4ID0gMDtcbiAgICBnbG9iYWxIaXN0b3J5LnJlcGxhY2VTdGF0ZShfZXh0ZW5kcyh7fSwgZ2xvYmFsSGlzdG9yeS5zdGF0ZSwge1xuICAgICAgaWR4OiBpbmRleFxuICAgIH0pLCAnJyk7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRCYXNlSHJlZigpIHtcbiAgICB2YXIgYmFzZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2Jhc2UnKTtcbiAgICB2YXIgaHJlZiA9ICcnO1xuXG4gICAgaWYgKGJhc2UgJiYgYmFzZS5nZXRBdHRyaWJ1dGUoJ2hyZWYnKSkge1xuICAgICAgdmFyIHVybCA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xuICAgICAgdmFyIGhhc2hJbmRleCA9IHVybC5pbmRleE9mKCcjJyk7XG4gICAgICBocmVmID0gaGFzaEluZGV4ID09PSAtMSA/IHVybCA6IHVybC5zbGljZSgwLCBoYXNoSW5kZXgpO1xuICAgIH1cblxuICAgIHJldHVybiBocmVmO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlSHJlZih0bykge1xuICAgIHJldHVybiBnZXRCYXNlSHJlZigpICsgJyMnICsgKHR5cGVvZiB0byA9PT0gJ3N0cmluZycgPyB0byA6IGNyZWF0ZVBhdGgodG8pKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldE5leHRMb2NhdGlvbih0bywgc3RhdGUpIHtcbiAgICBpZiAoc3RhdGUgPT09IHZvaWQgMCkge1xuICAgICAgc3RhdGUgPSBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiByZWFkT25seShfZXh0ZW5kcyh7XG4gICAgICBwYXRobmFtZTogbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICBoYXNoOiAnJyxcbiAgICAgIHNlYXJjaDogJydcbiAgICB9LCB0eXBlb2YgdG8gPT09ICdzdHJpbmcnID8gcGFyc2VQYXRoKHRvKSA6IHRvLCB7XG4gICAgICBzdGF0ZTogc3RhdGUsXG4gICAgICBrZXk6IGNyZWF0ZUtleSgpXG4gICAgfSkpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0SGlzdG9yeVN0YXRlQW5kVXJsKG5leHRMb2NhdGlvbiwgaW5kZXgpIHtcbiAgICByZXR1cm4gW3tcbiAgICAgIHVzcjogbmV4dExvY2F0aW9uLnN0YXRlLFxuICAgICAga2V5OiBuZXh0TG9jYXRpb24ua2V5LFxuICAgICAgaWR4OiBpbmRleFxuICAgIH0sIGNyZWF0ZUhyZWYobmV4dExvY2F0aW9uKV07XG4gIH1cblxuICBmdW5jdGlvbiBhbGxvd1R4KGFjdGlvbiwgbG9jYXRpb24sIHJldHJ5KSB7XG4gICAgcmV0dXJuICFibG9ja2Vycy5sZW5ndGggfHwgKGJsb2NrZXJzLmNhbGwoe1xuICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICByZXRyeTogcmV0cnlcbiAgICB9KSwgZmFsc2UpO1xuICB9XG5cbiAgZnVuY3Rpb24gYXBwbHlUeChuZXh0QWN0aW9uKSB7XG4gICAgYWN0aW9uID0gbmV4dEFjdGlvbjtcblxuICAgIHZhciBfZ2V0SW5kZXhBbmRMb2NhdGlvbjcgPSBnZXRJbmRleEFuZExvY2F0aW9uKCk7XG5cbiAgICBpbmRleCA9IF9nZXRJbmRleEFuZExvY2F0aW9uN1swXTtcbiAgICBsb2NhdGlvbiA9IF9nZXRJbmRleEFuZExvY2F0aW9uN1sxXTtcbiAgICBsaXN0ZW5lcnMuY2FsbCh7XG4gICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcHVzaCh0bywgc3RhdGUpIHtcbiAgICB2YXIgbmV4dEFjdGlvbiA9IEFjdGlvbi5QdXNoO1xuICAgIHZhciBuZXh0TG9jYXRpb24gPSBnZXROZXh0TG9jYXRpb24odG8sIHN0YXRlKTtcblxuICAgIGZ1bmN0aW9uIHJldHJ5KCkge1xuICAgICAgcHVzaCh0bywgc3RhdGUpO1xuICAgIH1cblxuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcobmV4dExvY2F0aW9uLnBhdGhuYW1lLmNoYXJBdCgwKSA9PT0gJy8nLCBcIlJlbGF0aXZlIHBhdGhuYW1lcyBhcmUgbm90IHN1cHBvcnRlZCBpbiBoYXNoIGhpc3RvcnkucHVzaChcIiArIEpTT04uc3RyaW5naWZ5KHRvKSArIFwiKVwiKSA6IHZvaWQgMDtcblxuICAgIGlmIChhbGxvd1R4KG5leHRBY3Rpb24sIG5leHRMb2NhdGlvbiwgcmV0cnkpKSB7XG4gICAgICB2YXIgX2dldEhpc3RvcnlTdGF0ZUFuZFVyMyA9IGdldEhpc3RvcnlTdGF0ZUFuZFVybChuZXh0TG9jYXRpb24sIGluZGV4ICsgMSksXG4gICAgICAgICAgaGlzdG9yeVN0YXRlID0gX2dldEhpc3RvcnlTdGF0ZUFuZFVyM1swXSxcbiAgICAgICAgICB1cmwgPSBfZ2V0SGlzdG9yeVN0YXRlQW5kVXIzWzFdOyAvLyBUT0RPOiBTdXBwb3J0IGZvcmNlZCByZWxvYWRpbmdcbiAgICAgIC8vIHRyeS4uLmNhdGNoIGJlY2F1c2UgaU9TIGxpbWl0cyB1cyB0byAxMDAgcHVzaFN0YXRlIGNhbGxzIDovXG5cblxuICAgICAgdHJ5IHtcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5wdXNoU3RhdGUoaGlzdG9yeVN0YXRlLCAnJywgdXJsKTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIC8vIFRoZXkgYXJlIGdvaW5nIHRvIGxvc2Ugc3RhdGUgaGVyZSwgYnV0IHRoZXJlIGlzIG5vIHJlYWxcbiAgICAgICAgLy8gd2F5IHRvIHdhcm4gdGhlbSBhYm91dCBpdCBzaW5jZSB0aGUgcGFnZSB3aWxsIHJlZnJlc2guLi5cbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmFzc2lnbih1cmwpO1xuICAgICAgfVxuXG4gICAgICBhcHBseVR4KG5leHRBY3Rpb24pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UodG8sIHN0YXRlKSB7XG4gICAgdmFyIG5leHRBY3Rpb24gPSBBY3Rpb24uUmVwbGFjZTtcbiAgICB2YXIgbmV4dExvY2F0aW9uID0gZ2V0TmV4dExvY2F0aW9uKHRvLCBzdGF0ZSk7XG5cbiAgICBmdW5jdGlvbiByZXRyeSgpIHtcbiAgICAgIHJlcGxhY2UodG8sIHN0YXRlKTtcbiAgICB9XG5cbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKG5leHRMb2NhdGlvbi5wYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJywgXCJSZWxhdGl2ZSBwYXRobmFtZXMgYXJlIG5vdCBzdXBwb3J0ZWQgaW4gaGFzaCBoaXN0b3J5LnJlcGxhY2UoXCIgKyBKU09OLnN0cmluZ2lmeSh0bykgKyBcIilcIikgOiB2b2lkIDA7XG5cbiAgICBpZiAoYWxsb3dUeChuZXh0QWN0aW9uLCBuZXh0TG9jYXRpb24sIHJldHJ5KSkge1xuICAgICAgdmFyIF9nZXRIaXN0b3J5U3RhdGVBbmRVcjQgPSBnZXRIaXN0b3J5U3RhdGVBbmRVcmwobmV4dExvY2F0aW9uLCBpbmRleCksXG4gICAgICAgICAgaGlzdG9yeVN0YXRlID0gX2dldEhpc3RvcnlTdGF0ZUFuZFVyNFswXSxcbiAgICAgICAgICB1cmwgPSBfZ2V0SGlzdG9yeVN0YXRlQW5kVXI0WzFdOyAvLyBUT0RPOiBTdXBwb3J0IGZvcmNlZCByZWxvYWRpbmdcblxuXG4gICAgICBnbG9iYWxIaXN0b3J5LnJlcGxhY2VTdGF0ZShoaXN0b3J5U3RhdGUsICcnLCB1cmwpO1xuICAgICAgYXBwbHlUeChuZXh0QWN0aW9uKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBnbyhkZWx0YSkge1xuICAgIGdsb2JhbEhpc3RvcnkuZ28oZGVsdGEpO1xuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgZ2V0IGFjdGlvbigpIHtcbiAgICAgIHJldHVybiBhY3Rpb247XG4gICAgfSxcblxuICAgIGdldCBsb2NhdGlvbigpIHtcbiAgICAgIHJldHVybiBsb2NhdGlvbjtcbiAgICB9LFxuXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGJhY2s6IGZ1bmN0aW9uIGJhY2soKSB7XG4gICAgICBnbygtMSk7XG4gICAgfSxcbiAgICBmb3J3YXJkOiBmdW5jdGlvbiBmb3J3YXJkKCkge1xuICAgICAgZ28oMSk7XG4gICAgfSxcbiAgICBsaXN0ZW46IGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgICAgcmV0dXJuIGxpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcbiAgICB9LFxuICAgIGJsb2NrOiBmdW5jdGlvbiBibG9jayhibG9ja2VyKSB7XG4gICAgICB2YXIgdW5ibG9jayA9IGJsb2NrZXJzLnB1c2goYmxvY2tlcik7XG5cbiAgICAgIGlmIChibG9ja2Vycy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoQmVmb3JlVW5sb2FkRXZlbnRUeXBlLCBwcm9tcHRCZWZvcmVVbmxvYWQpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICB1bmJsb2NrKCk7IC8vIFJlbW92ZSB0aGUgYmVmb3JldW5sb2FkIGxpc3RlbmVyIHNvIHRoZSBkb2N1bWVudCBtYXlcbiAgICAgICAgLy8gc3RpbGwgYmUgc2FsdmFnZWFibGUgaW4gdGhlIHBhZ2VoaWRlIGV2ZW50LlxuICAgICAgICAvLyBTZWUgaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy8jdW5sb2FkaW5nLWRvY3VtZW50c1xuXG4gICAgICAgIGlmICghYmxvY2tlcnMubGVuZ3RoKSB7XG4gICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoQmVmb3JlVW5sb2FkRXZlbnRUeXBlLCBwcm9tcHRCZWZvcmVVbmxvYWQpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG4vKipcclxuICogTWVtb3J5IGhpc3Rvcnkgc3RvcmVzIHRoZSBjdXJyZW50IGxvY2F0aW9uIGluIG1lbW9yeS4gSXQgaXMgZGVzaWduZWQgZm9yIHVzZVxyXG4gKiBpbiBzdGF0ZWZ1bCBub24tYnJvd3NlciBlbnZpcm9ubWVudHMgbGlrZSB0ZXN0cyBhbmQgUmVhY3QgTmF0aXZlLlxyXG4gKlxyXG4gKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9yZW1peC1ydW4vaGlzdG9yeS90cmVlL21haW4vZG9jcy9hcGktcmVmZXJlbmNlLm1kI2NyZWF0ZW1lbW9yeWhpc3RvcnlcclxuICovXG5cbmZ1bmN0aW9uIGNyZWF0ZU1lbW9yeUhpc3Rvcnkob3B0aW9ucykge1xuICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG5cbiAgdmFyIF9vcHRpb25zMyA9IG9wdGlvbnMsXG4gICAgICBfb3B0aW9uczMkaW5pdGlhbEVudHIgPSBfb3B0aW9uczMuaW5pdGlhbEVudHJpZXMsXG4gICAgICBpbml0aWFsRW50cmllcyA9IF9vcHRpb25zMyRpbml0aWFsRW50ciA9PT0gdm9pZCAwID8gWycvJ10gOiBfb3B0aW9uczMkaW5pdGlhbEVudHIsXG4gICAgICBpbml0aWFsSW5kZXggPSBfb3B0aW9uczMuaW5pdGlhbEluZGV4O1xuICB2YXIgZW50cmllcyA9IGluaXRpYWxFbnRyaWVzLm1hcChmdW5jdGlvbiAoZW50cnkpIHtcbiAgICB2YXIgbG9jYXRpb24gPSByZWFkT25seShfZXh0ZW5kcyh7XG4gICAgICBwYXRobmFtZTogJy8nLFxuICAgICAgc2VhcmNoOiAnJyxcbiAgICAgIGhhc2g6ICcnLFxuICAgICAgc3RhdGU6IG51bGwsXG4gICAgICBrZXk6IGNyZWF0ZUtleSgpXG4gICAgfSwgdHlwZW9mIGVudHJ5ID09PSAnc3RyaW5nJyA/IHBhcnNlUGF0aChlbnRyeSkgOiBlbnRyeSkpO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcobG9jYXRpb24ucGF0aG5hbWUuY2hhckF0KDApID09PSAnLycsIFwiUmVsYXRpdmUgcGF0aG5hbWVzIGFyZSBub3Qgc3VwcG9ydGVkIGluIGNyZWF0ZU1lbW9yeUhpc3RvcnkoeyBpbml0aWFsRW50cmllcyB9KSAoaW52YWxpZCBlbnRyeTogXCIgKyBKU09OLnN0cmluZ2lmeShlbnRyeSkgKyBcIilcIikgOiB2b2lkIDA7XG4gICAgcmV0dXJuIGxvY2F0aW9uO1xuICB9KTtcbiAgdmFyIGluZGV4ID0gY2xhbXAoaW5pdGlhbEluZGV4ID09IG51bGwgPyBlbnRyaWVzLmxlbmd0aCAtIDEgOiBpbml0aWFsSW5kZXgsIDAsIGVudHJpZXMubGVuZ3RoIC0gMSk7XG4gIHZhciBhY3Rpb24gPSBBY3Rpb24uUG9wO1xuICB2YXIgbG9jYXRpb24gPSBlbnRyaWVzW2luZGV4XTtcbiAgdmFyIGxpc3RlbmVycyA9IGNyZWF0ZUV2ZW50cygpO1xuICB2YXIgYmxvY2tlcnMgPSBjcmVhdGVFdmVudHMoKTtcblxuICBmdW5jdGlvbiBjcmVhdGVIcmVmKHRvKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB0byA9PT0gJ3N0cmluZycgPyB0byA6IGNyZWF0ZVBhdGgodG8pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0TmV4dExvY2F0aW9uKHRvLCBzdGF0ZSkge1xuICAgIGlmIChzdGF0ZSA9PT0gdm9pZCAwKSB7XG4gICAgICBzdGF0ZSA9IG51bGw7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlYWRPbmx5KF9leHRlbmRzKHtcbiAgICAgIHBhdGhuYW1lOiBsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgIHNlYXJjaDogJycsXG4gICAgICBoYXNoOiAnJ1xuICAgIH0sIHR5cGVvZiB0byA9PT0gJ3N0cmluZycgPyBwYXJzZVBhdGgodG8pIDogdG8sIHtcbiAgICAgIHN0YXRlOiBzdGF0ZSxcbiAgICAgIGtleTogY3JlYXRlS2V5KClcbiAgICB9KSk7XG4gIH1cblxuICBmdW5jdGlvbiBhbGxvd1R4KGFjdGlvbiwgbG9jYXRpb24sIHJldHJ5KSB7XG4gICAgcmV0dXJuICFibG9ja2Vycy5sZW5ndGggfHwgKGJsb2NrZXJzLmNhbGwoe1xuICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICByZXRyeTogcmV0cnlcbiAgICB9KSwgZmFsc2UpO1xuICB9XG5cbiAgZnVuY3Rpb24gYXBwbHlUeChuZXh0QWN0aW9uLCBuZXh0TG9jYXRpb24pIHtcbiAgICBhY3Rpb24gPSBuZXh0QWN0aW9uO1xuICAgIGxvY2F0aW9uID0gbmV4dExvY2F0aW9uO1xuICAgIGxpc3RlbmVycy5jYWxsKHtcbiAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBwdXNoKHRvLCBzdGF0ZSkge1xuICAgIHZhciBuZXh0QWN0aW9uID0gQWN0aW9uLlB1c2g7XG4gICAgdmFyIG5leHRMb2NhdGlvbiA9IGdldE5leHRMb2NhdGlvbih0bywgc3RhdGUpO1xuXG4gICAgZnVuY3Rpb24gcmV0cnkoKSB7XG4gICAgICBwdXNoKHRvLCBzdGF0ZSk7XG4gICAgfVxuXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhsb2NhdGlvbi5wYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJywgXCJSZWxhdGl2ZSBwYXRobmFtZXMgYXJlIG5vdCBzdXBwb3J0ZWQgaW4gbWVtb3J5IGhpc3RvcnkucHVzaChcIiArIEpTT04uc3RyaW5naWZ5KHRvKSArIFwiKVwiKSA6IHZvaWQgMDtcblxuICAgIGlmIChhbGxvd1R4KG5leHRBY3Rpb24sIG5leHRMb2NhdGlvbiwgcmV0cnkpKSB7XG4gICAgICBpbmRleCArPSAxO1xuICAgICAgZW50cmllcy5zcGxpY2UoaW5kZXgsIGVudHJpZXMubGVuZ3RoLCBuZXh0TG9jYXRpb24pO1xuICAgICAgYXBwbHlUeChuZXh0QWN0aW9uLCBuZXh0TG9jYXRpb24pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UodG8sIHN0YXRlKSB7XG4gICAgdmFyIG5leHRBY3Rpb24gPSBBY3Rpb24uUmVwbGFjZTtcbiAgICB2YXIgbmV4dExvY2F0aW9uID0gZ2V0TmV4dExvY2F0aW9uKHRvLCBzdGF0ZSk7XG5cbiAgICBmdW5jdGlvbiByZXRyeSgpIHtcbiAgICAgIHJlcGxhY2UodG8sIHN0YXRlKTtcbiAgICB9XG5cbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGxvY2F0aW9uLnBhdGhuYW1lLmNoYXJBdCgwKSA9PT0gJy8nLCBcIlJlbGF0aXZlIHBhdGhuYW1lcyBhcmUgbm90IHN1cHBvcnRlZCBpbiBtZW1vcnkgaGlzdG9yeS5yZXBsYWNlKFwiICsgSlNPTi5zdHJpbmdpZnkodG8pICsgXCIpXCIpIDogdm9pZCAwO1xuXG4gICAgaWYgKGFsbG93VHgobmV4dEFjdGlvbiwgbmV4dExvY2F0aW9uLCByZXRyeSkpIHtcbiAgICAgIGVudHJpZXNbaW5kZXhdID0gbmV4dExvY2F0aW9uO1xuICAgICAgYXBwbHlUeChuZXh0QWN0aW9uLCBuZXh0TG9jYXRpb24pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKGRlbHRhKSB7XG4gICAgdmFyIG5leHRJbmRleCA9IGNsYW1wKGluZGV4ICsgZGVsdGEsIDAsIGVudHJpZXMubGVuZ3RoIC0gMSk7XG4gICAgdmFyIG5leHRBY3Rpb24gPSBBY3Rpb24uUG9wO1xuICAgIHZhciBuZXh0TG9jYXRpb24gPSBlbnRyaWVzW25leHRJbmRleF07XG5cbiAgICBmdW5jdGlvbiByZXRyeSgpIHtcbiAgICAgIGdvKGRlbHRhKTtcbiAgICB9XG5cbiAgICBpZiAoYWxsb3dUeChuZXh0QWN0aW9uLCBuZXh0TG9jYXRpb24sIHJldHJ5KSkge1xuICAgICAgaW5kZXggPSBuZXh0SW5kZXg7XG4gICAgICBhcHBseVR4KG5leHRBY3Rpb24sIG5leHRMb2NhdGlvbik7XG4gICAgfVxuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgZ2V0IGluZGV4KCkge1xuICAgICAgcmV0dXJuIGluZGV4O1xuICAgIH0sXG5cbiAgICBnZXQgYWN0aW9uKCkge1xuICAgICAgcmV0dXJuIGFjdGlvbjtcbiAgICB9LFxuXG4gICAgZ2V0IGxvY2F0aW9uKCkge1xuICAgICAgcmV0dXJuIGxvY2F0aW9uO1xuICAgIH0sXG5cbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgYmFjazogZnVuY3Rpb24gYmFjaygpIHtcbiAgICAgIGdvKC0xKTtcbiAgICB9LFxuICAgIGZvcndhcmQ6IGZ1bmN0aW9uIGZvcndhcmQoKSB7XG4gICAgICBnbygxKTtcbiAgICB9LFxuICAgIGxpc3RlbjogZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgICByZXR1cm4gbGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuICAgIH0sXG4gICAgYmxvY2s6IGZ1bmN0aW9uIGJsb2NrKGJsb2NrZXIpIHtcbiAgICAgIHJldHVybiBibG9ja2Vycy5wdXNoKGJsb2NrZXIpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59IC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBVVElMU1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuZnVuY3Rpb24gY2xhbXAobiwgbG93ZXJCb3VuZCwgdXBwZXJCb3VuZCkge1xuICByZXR1cm4gTWF0aC5taW4oTWF0aC5tYXgobiwgbG93ZXJCb3VuZCksIHVwcGVyQm91bmQpO1xufVxuXG5mdW5jdGlvbiBwcm9tcHRCZWZvcmVVbmxvYWQoZXZlbnQpIHtcbiAgLy8gQ2FuY2VsIHRoZSBldmVudC5cbiAgZXZlbnQucHJldmVudERlZmF1bHQoKTsgLy8gQ2hyb21lIChhbmQgbGVnYWN5IElFKSByZXF1aXJlcyByZXR1cm5WYWx1ZSB0byBiZSBzZXQuXG5cbiAgZXZlbnQucmV0dXJuVmFsdWUgPSAnJztcbn1cblxuZnVuY3Rpb24gY3JlYXRlRXZlbnRzKCkge1xuICB2YXIgaGFuZGxlcnMgPSBbXTtcbiAgcmV0dXJuIHtcbiAgICBnZXQgbGVuZ3RoKCkge1xuICAgICAgcmV0dXJuIGhhbmRsZXJzLmxlbmd0aDtcbiAgICB9LFxuXG4gICAgcHVzaDogZnVuY3Rpb24gcHVzaChmbikge1xuICAgICAgaGFuZGxlcnMucHVzaChmbik7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICBoYW5kbGVycyA9IGhhbmRsZXJzLmZpbHRlcihmdW5jdGlvbiAoaGFuZGxlcikge1xuICAgICAgICAgIHJldHVybiBoYW5kbGVyICE9PSBmbjtcbiAgICAgICAgfSk7XG4gICAgICB9O1xuICAgIH0sXG4gICAgY2FsbDogZnVuY3Rpb24gY2FsbChhcmcpIHtcbiAgICAgIGhhbmRsZXJzLmZvckVhY2goZnVuY3Rpb24gKGZuKSB7XG4gICAgICAgIHJldHVybiBmbiAmJiBmbihhcmcpO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwgOCk7XG59XG4vKipcclxuICogQ3JlYXRlcyBhIHN0cmluZyBVUkwgcGF0aCBmcm9tIHRoZSBnaXZlbiBwYXRobmFtZSwgc2VhcmNoLCBhbmQgaGFzaCBjb21wb25lbnRzLlxyXG4gKlxyXG4gKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9yZW1peC1ydW4vaGlzdG9yeS90cmVlL21haW4vZG9jcy9hcGktcmVmZXJlbmNlLm1kI2NyZWF0ZXBhdGhcclxuICovXG5cblxuZnVuY3Rpb24gY3JlYXRlUGF0aChfcmVmKSB7XG4gIHZhciBfcmVmJHBhdGhuYW1lID0gX3JlZi5wYXRobmFtZSxcbiAgICAgIHBhdGhuYW1lID0gX3JlZiRwYXRobmFtZSA9PT0gdm9pZCAwID8gJy8nIDogX3JlZiRwYXRobmFtZSxcbiAgICAgIF9yZWYkc2VhcmNoID0gX3JlZi5zZWFyY2gsXG4gICAgICBzZWFyY2ggPSBfcmVmJHNlYXJjaCA9PT0gdm9pZCAwID8gJycgOiBfcmVmJHNlYXJjaCxcbiAgICAgIF9yZWYkaGFzaCA9IF9yZWYuaGFzaCxcbiAgICAgIGhhc2ggPSBfcmVmJGhhc2ggPT09IHZvaWQgMCA/ICcnIDogX3JlZiRoYXNoO1xuICBpZiAoc2VhcmNoICYmIHNlYXJjaCAhPT0gJz8nKSBwYXRobmFtZSArPSBzZWFyY2guY2hhckF0KDApID09PSAnPycgPyBzZWFyY2ggOiAnPycgKyBzZWFyY2g7XG4gIGlmIChoYXNoICYmIGhhc2ggIT09ICcjJykgcGF0aG5hbWUgKz0gaGFzaC5jaGFyQXQoMCkgPT09ICcjJyA/IGhhc2ggOiAnIycgKyBoYXNoO1xuICByZXR1cm4gcGF0aG5hbWU7XG59XG4vKipcclxuICogUGFyc2VzIGEgc3RyaW5nIFVSTCBwYXRoIGludG8gaXRzIHNlcGFyYXRlIHBhdGhuYW1lLCBzZWFyY2gsIGFuZCBoYXNoIGNvbXBvbmVudHMuXHJcbiAqXHJcbiAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3JlbWl4LXJ1bi9oaXN0b3J5L3RyZWUvbWFpbi9kb2NzL2FwaS1yZWZlcmVuY2UubWQjcGFyc2VwYXRoXHJcbiAqL1xuXG5mdW5jdGlvbiBwYXJzZVBhdGgocGF0aCkge1xuICB2YXIgcGFyc2VkUGF0aCA9IHt9O1xuXG4gIGlmIChwYXRoKSB7XG4gICAgdmFyIGhhc2hJbmRleCA9IHBhdGguaW5kZXhPZignIycpO1xuXG4gICAgaWYgKGhhc2hJbmRleCA+PSAwKSB7XG4gICAgICBwYXJzZWRQYXRoLmhhc2ggPSBwYXRoLnN1YnN0cihoYXNoSW5kZXgpO1xuICAgICAgcGF0aCA9IHBhdGguc3Vic3RyKDAsIGhhc2hJbmRleCk7XG4gICAgfVxuXG4gICAgdmFyIHNlYXJjaEluZGV4ID0gcGF0aC5pbmRleE9mKCc/Jyk7XG5cbiAgICBpZiAoc2VhcmNoSW5kZXggPj0gMCkge1xuICAgICAgcGFyc2VkUGF0aC5zZWFyY2ggPSBwYXRoLnN1YnN0cihzZWFyY2hJbmRleCk7XG4gICAgICBwYXRoID0gcGF0aC5zdWJzdHIoMCwgc2VhcmNoSW5kZXgpO1xuICAgIH1cblxuICAgIGlmIChwYXRoKSB7XG4gICAgICBwYXJzZWRQYXRoLnBhdGhuYW1lID0gcGF0aDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcGFyc2VkUGF0aDtcbn1cblxuZXhwb3J0IHsgQWN0aW9uLCBjcmVhdGVCcm93c2VySGlzdG9yeSwgY3JlYXRlSGFzaEhpc3RvcnksIGNyZWF0ZU1lbW9yeUhpc3RvcnksIGNyZWF0ZVBhdGgsIHBhcnNlUGF0aCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfZXh0ZW5kcygpIHtcbiAgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcblxuICAgICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9O1xuXG4gIHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufSIsIi8qKlxuICogUmVhY3QgUm91dGVyIHY2LjMuMFxuICpcbiAqIENvcHlyaWdodCAoYykgUmVtaXggU29mdHdhcmUgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRS5tZCBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBsaWNlbnNlIE1JVFxuICovXG5pbXBvcnQgeyBwYXJzZVBhdGgsIGNyZWF0ZU1lbW9yeUhpc3RvcnksIEFjdGlvbiB9IGZyb20gJ2hpc3RvcnknO1xuZXhwb3J0IHsgQWN0aW9uIGFzIE5hdmlnYXRpb25UeXBlLCBjcmVhdGVQYXRoLCBwYXJzZVBhdGggfSBmcm9tICdoaXN0b3J5JztcbmltcG9ydCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQsIHVzZU1lbW8sIHVzZVJlZiwgdXNlRWZmZWN0LCB1c2VDYWxsYmFjaywgY3JlYXRlRWxlbWVudCwgdXNlU3RhdGUsIHVzZUxheW91dEVmZmVjdCwgQ2hpbGRyZW4sIGlzVmFsaWRFbGVtZW50LCBGcmFnbWVudCB9IGZyb20gJ3JlYWN0JztcblxuY29uc3QgTmF2aWdhdGlvbkNvbnRleHQgPSAvKiNfX1BVUkVfXyovY3JlYXRlQ29udGV4dChudWxsKTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBOYXZpZ2F0aW9uQ29udGV4dC5kaXNwbGF5TmFtZSA9IFwiTmF2aWdhdGlvblwiO1xufVxuXG5jb25zdCBMb2NhdGlvbkNvbnRleHQgPSAvKiNfX1BVUkVfXyovY3JlYXRlQ29udGV4dChudWxsKTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBMb2NhdGlvbkNvbnRleHQuZGlzcGxheU5hbWUgPSBcIkxvY2F0aW9uXCI7XG59XG5cbmNvbnN0IFJvdXRlQ29udGV4dCA9IC8qI19fUFVSRV9fKi9jcmVhdGVDb250ZXh0KHtcbiAgb3V0bGV0OiBudWxsLFxuICBtYXRjaGVzOiBbXVxufSk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgUm91dGVDb250ZXh0LmRpc3BsYXlOYW1lID0gXCJSb3V0ZVwiO1xufVxuXG5mdW5jdGlvbiBpbnZhcmlhbnQoY29uZCwgbWVzc2FnZSkge1xuICBpZiAoIWNvbmQpIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbn1cbmZ1bmN0aW9uIHdhcm5pbmcoY29uZCwgbWVzc2FnZSkge1xuICBpZiAoIWNvbmQpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gXCJ1bmRlZmluZWRcIikgY29uc29sZS53YXJuKG1lc3NhZ2UpO1xuXG4gICAgdHJ5IHtcbiAgICAgIC8vIFdlbGNvbWUgdG8gZGVidWdnaW5nIFJlYWN0IFJvdXRlciFcbiAgICAgIC8vXG4gICAgICAvLyBUaGlzIGVycm9yIGlzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHlvdSBjYW4gbW9yZSBlYXNpbHlcbiAgICAgIC8vIGZpbmQgdGhlIHNvdXJjZSBmb3IgYSB3YXJuaW5nIHRoYXQgYXBwZWFycyBpbiB0aGUgY29uc29sZSBieVxuICAgICAgLy8gZW5hYmxpbmcgXCJwYXVzZSBvbiBleGNlcHRpb25zXCIgaW4geW91ciBKYXZhU2NyaXB0IGRlYnVnZ2VyLlxuICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tZW1wdHlcbiAgICB9IGNhdGNoIChlKSB7fVxuICB9XG59XG5jb25zdCBhbHJlYWR5V2FybmVkID0ge307XG5mdW5jdGlvbiB3YXJuaW5nT25jZShrZXksIGNvbmQsIG1lc3NhZ2UpIHtcbiAgaWYgKCFjb25kICYmICFhbHJlYWR5V2FybmVkW2tleV0pIHtcbiAgICBhbHJlYWR5V2FybmVkW2tleV0gPSB0cnVlO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsIG1lc3NhZ2UpIDogdm9pZCAwO1xuICB9XG59XG5cbi8qKlxuICogUmV0dXJucyBhIHBhdGggd2l0aCBwYXJhbXMgaW50ZXJwb2xhdGVkLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjZ2VuZXJhdGVwYXRoXG4gKi9cbmZ1bmN0aW9uIGdlbmVyYXRlUGF0aChwYXRoLCBwYXJhbXMpIHtcbiAgaWYgKHBhcmFtcyA9PT0gdm9pZCAwKSB7XG4gICAgcGFyYW1zID0ge307XG4gIH1cblxuICByZXR1cm4gcGF0aC5yZXBsYWNlKC86KFxcdyspL2csIChfLCBrZXkpID0+IHtcbiAgICAhKHBhcmFtc1trZXldICE9IG51bGwpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIk1pc3NpbmcgXFxcIjpcIiArIGtleSArIFwiXFxcIiBwYXJhbVwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgcmV0dXJuIHBhcmFtc1trZXldO1xuICB9KS5yZXBsYWNlKC9cXC8qXFwqJC8sIF8gPT4gcGFyYW1zW1wiKlwiXSA9PSBudWxsID8gXCJcIiA6IHBhcmFtc1tcIipcIl0ucmVwbGFjZSgvXlxcLyovLCBcIi9cIikpO1xufVxuLyoqXG4gKiBBIFJvdXRlTWF0Y2ggY29udGFpbnMgaW5mbyBhYm91dCBob3cgYSByb3V0ZSBtYXRjaGVkIGEgVVJMLlxuICovXG5cbi8qKlxuICogTWF0Y2hlcyB0aGUgZ2l2ZW4gcm91dGVzIHRvIGEgbG9jYXRpb24gYW5kIHJldHVybnMgdGhlIG1hdGNoIGRhdGEuXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSNtYXRjaHJvdXRlc1xuICovXG5mdW5jdGlvbiBtYXRjaFJvdXRlcyhyb3V0ZXMsIGxvY2F0aW9uQXJnLCBiYXNlbmFtZSkge1xuICBpZiAoYmFzZW5hbWUgPT09IHZvaWQgMCkge1xuICAgIGJhc2VuYW1lID0gXCIvXCI7XG4gIH1cblxuICBsZXQgbG9jYXRpb24gPSB0eXBlb2YgbG9jYXRpb25BcmcgPT09IFwic3RyaW5nXCIgPyBwYXJzZVBhdGgobG9jYXRpb25BcmcpIDogbG9jYXRpb25Bcmc7XG4gIGxldCBwYXRobmFtZSA9IHN0cmlwQmFzZW5hbWUobG9jYXRpb24ucGF0aG5hbWUgfHwgXCIvXCIsIGJhc2VuYW1lKTtcblxuICBpZiAocGF0aG5hbWUgPT0gbnVsbCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgbGV0IGJyYW5jaGVzID0gZmxhdHRlblJvdXRlcyhyb3V0ZXMpO1xuICByYW5rUm91dGVCcmFuY2hlcyhicmFuY2hlcyk7XG4gIGxldCBtYXRjaGVzID0gbnVsbDtcblxuICBmb3IgKGxldCBpID0gMDsgbWF0Y2hlcyA9PSBudWxsICYmIGkgPCBicmFuY2hlcy5sZW5ndGg7ICsraSkge1xuICAgIG1hdGNoZXMgPSBtYXRjaFJvdXRlQnJhbmNoKGJyYW5jaGVzW2ldLCBwYXRobmFtZSk7XG4gIH1cblxuICByZXR1cm4gbWF0Y2hlcztcbn1cblxuZnVuY3Rpb24gZmxhdHRlblJvdXRlcyhyb3V0ZXMsIGJyYW5jaGVzLCBwYXJlbnRzTWV0YSwgcGFyZW50UGF0aCkge1xuICBpZiAoYnJhbmNoZXMgPT09IHZvaWQgMCkge1xuICAgIGJyYW5jaGVzID0gW107XG4gIH1cblxuICBpZiAocGFyZW50c01ldGEgPT09IHZvaWQgMCkge1xuICAgIHBhcmVudHNNZXRhID0gW107XG4gIH1cblxuICBpZiAocGFyZW50UGF0aCA9PT0gdm9pZCAwKSB7XG4gICAgcGFyZW50UGF0aCA9IFwiXCI7XG4gIH1cblxuICByb3V0ZXMuZm9yRWFjaCgocm91dGUsIGluZGV4KSA9PiB7XG4gICAgbGV0IG1ldGEgPSB7XG4gICAgICByZWxhdGl2ZVBhdGg6IHJvdXRlLnBhdGggfHwgXCJcIixcbiAgICAgIGNhc2VTZW5zaXRpdmU6IHJvdXRlLmNhc2VTZW5zaXRpdmUgPT09IHRydWUsXG4gICAgICBjaGlsZHJlbkluZGV4OiBpbmRleCxcbiAgICAgIHJvdXRlXG4gICAgfTtcblxuICAgIGlmIChtZXRhLnJlbGF0aXZlUGF0aC5zdGFydHNXaXRoKFwiL1wiKSkge1xuICAgICAgIW1ldGEucmVsYXRpdmVQYXRoLnN0YXJ0c1dpdGgocGFyZW50UGF0aCkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiQWJzb2x1dGUgcm91dGUgcGF0aCBcXFwiXCIgKyBtZXRhLnJlbGF0aXZlUGF0aCArIFwiXFxcIiBuZXN0ZWQgdW5kZXIgcGF0aCBcIiArIChcIlxcXCJcIiArIHBhcmVudFBhdGggKyBcIlxcXCIgaXMgbm90IHZhbGlkLiBBbiBhYnNvbHV0ZSBjaGlsZCByb3V0ZSBwYXRoIFwiKSArIFwibXVzdCBzdGFydCB3aXRoIHRoZSBjb21iaW5lZCBwYXRoIG9mIGFsbCBpdHMgcGFyZW50IHJvdXRlcy5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgICAgbWV0YS5yZWxhdGl2ZVBhdGggPSBtZXRhLnJlbGF0aXZlUGF0aC5zbGljZShwYXJlbnRQYXRoLmxlbmd0aCk7XG4gICAgfVxuXG4gICAgbGV0IHBhdGggPSBqb2luUGF0aHMoW3BhcmVudFBhdGgsIG1ldGEucmVsYXRpdmVQYXRoXSk7XG4gICAgbGV0IHJvdXRlc01ldGEgPSBwYXJlbnRzTWV0YS5jb25jYXQobWV0YSk7IC8vIEFkZCB0aGUgY2hpbGRyZW4gYmVmb3JlIGFkZGluZyB0aGlzIHJvdXRlIHRvIHRoZSBhcnJheSBzbyB3ZSB0cmF2ZXJzZSB0aGVcbiAgICAvLyByb3V0ZSB0cmVlIGRlcHRoLWZpcnN0IGFuZCBjaGlsZCByb3V0ZXMgYXBwZWFyIGJlZm9yZSB0aGVpciBwYXJlbnRzIGluXG4gICAgLy8gdGhlIFwiZmxhdHRlbmVkXCIgdmVyc2lvbi5cblxuICAgIGlmIChyb3V0ZS5jaGlsZHJlbiAmJiByb3V0ZS5jaGlsZHJlbi5sZW5ndGggPiAwKSB7XG4gICAgICAhKHJvdXRlLmluZGV4ICE9PSB0cnVlKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJJbmRleCByb3V0ZXMgbXVzdCBub3QgaGF2ZSBjaGlsZCByb3V0ZXMuIFBsZWFzZSByZW1vdmUgXCIgKyAoXCJhbGwgY2hpbGQgcm91dGVzIGZyb20gcm91dGUgcGF0aCBcXFwiXCIgKyBwYXRoICsgXCJcXFwiLlwiKSkgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgICAgZmxhdHRlblJvdXRlcyhyb3V0ZS5jaGlsZHJlbiwgYnJhbmNoZXMsIHJvdXRlc01ldGEsIHBhdGgpO1xuICAgIH0gLy8gUm91dGVzIHdpdGhvdXQgYSBwYXRoIHNob3VsZG4ndCBldmVyIG1hdGNoIGJ5IHRoZW1zZWx2ZXMgdW5sZXNzIHRoZXkgYXJlXG4gICAgLy8gaW5kZXggcm91dGVzLCBzbyBkb24ndCBhZGQgdGhlbSB0byB0aGUgbGlzdCBvZiBwb3NzaWJsZSBicmFuY2hlcy5cblxuXG4gICAgaWYgKHJvdXRlLnBhdGggPT0gbnVsbCAmJiAhcm91dGUuaW5kZXgpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBicmFuY2hlcy5wdXNoKHtcbiAgICAgIHBhdGgsXG4gICAgICBzY29yZTogY29tcHV0ZVNjb3JlKHBhdGgsIHJvdXRlLmluZGV4KSxcbiAgICAgIHJvdXRlc01ldGFcbiAgICB9KTtcbiAgfSk7XG4gIHJldHVybiBicmFuY2hlcztcbn1cblxuZnVuY3Rpb24gcmFua1JvdXRlQnJhbmNoZXMoYnJhbmNoZXMpIHtcbiAgYnJhbmNoZXMuc29ydCgoYSwgYikgPT4gYS5zY29yZSAhPT0gYi5zY29yZSA/IGIuc2NvcmUgLSBhLnNjb3JlIC8vIEhpZ2hlciBzY29yZSBmaXJzdFxuICA6IGNvbXBhcmVJbmRleGVzKGEucm91dGVzTWV0YS5tYXAobWV0YSA9PiBtZXRhLmNoaWxkcmVuSW5kZXgpLCBiLnJvdXRlc01ldGEubWFwKG1ldGEgPT4gbWV0YS5jaGlsZHJlbkluZGV4KSkpO1xufVxuXG5jb25zdCBwYXJhbVJlID0gL146XFx3KyQvO1xuY29uc3QgZHluYW1pY1NlZ21lbnRWYWx1ZSA9IDM7XG5jb25zdCBpbmRleFJvdXRlVmFsdWUgPSAyO1xuY29uc3QgZW1wdHlTZWdtZW50VmFsdWUgPSAxO1xuY29uc3Qgc3RhdGljU2VnbWVudFZhbHVlID0gMTA7XG5jb25zdCBzcGxhdFBlbmFsdHkgPSAtMjtcblxuY29uc3QgaXNTcGxhdCA9IHMgPT4gcyA9PT0gXCIqXCI7XG5cbmZ1bmN0aW9uIGNvbXB1dGVTY29yZShwYXRoLCBpbmRleCkge1xuICBsZXQgc2VnbWVudHMgPSBwYXRoLnNwbGl0KFwiL1wiKTtcbiAgbGV0IGluaXRpYWxTY29yZSA9IHNlZ21lbnRzLmxlbmd0aDtcblxuICBpZiAoc2VnbWVudHMuc29tZShpc1NwbGF0KSkge1xuICAgIGluaXRpYWxTY29yZSArPSBzcGxhdFBlbmFsdHk7XG4gIH1cblxuICBpZiAoaW5kZXgpIHtcbiAgICBpbml0aWFsU2NvcmUgKz0gaW5kZXhSb3V0ZVZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIHNlZ21lbnRzLmZpbHRlcihzID0+ICFpc1NwbGF0KHMpKS5yZWR1Y2UoKHNjb3JlLCBzZWdtZW50KSA9PiBzY29yZSArIChwYXJhbVJlLnRlc3Qoc2VnbWVudCkgPyBkeW5hbWljU2VnbWVudFZhbHVlIDogc2VnbWVudCA9PT0gXCJcIiA/IGVtcHR5U2VnbWVudFZhbHVlIDogc3RhdGljU2VnbWVudFZhbHVlKSwgaW5pdGlhbFNjb3JlKTtcbn1cblxuZnVuY3Rpb24gY29tcGFyZUluZGV4ZXMoYSwgYikge1xuICBsZXQgc2libGluZ3MgPSBhLmxlbmd0aCA9PT0gYi5sZW5ndGggJiYgYS5zbGljZSgwLCAtMSkuZXZlcnkoKG4sIGkpID0+IG4gPT09IGJbaV0pO1xuICByZXR1cm4gc2libGluZ3MgPyAvLyBJZiB0d28gcm91dGVzIGFyZSBzaWJsaW5ncywgd2Ugc2hvdWxkIHRyeSB0byBtYXRjaCB0aGUgZWFybGllciBzaWJsaW5nXG4gIC8vIGZpcnN0LiBUaGlzIGFsbG93cyBwZW9wbGUgdG8gaGF2ZSBmaW5lLWdyYWluZWQgY29udHJvbCBvdmVyIHRoZSBtYXRjaGluZ1xuICAvLyBiZWhhdmlvciBieSBzaW1wbHkgcHV0dGluZyByb3V0ZXMgd2l0aCBpZGVudGljYWwgcGF0aHMgaW4gdGhlIG9yZGVyIHRoZXlcbiAgLy8gd2FudCB0aGVtIHRyaWVkLlxuICBhW2EubGVuZ3RoIC0gMV0gLSBiW2IubGVuZ3RoIC0gMV0gOiAvLyBPdGhlcndpc2UsIGl0IGRvZXNuJ3QgcmVhbGx5IG1ha2Ugc2Vuc2UgdG8gcmFuayBub24tc2libGluZ3MgYnkgaW5kZXgsXG4gIC8vIHNvIHRoZXkgc29ydCBlcXVhbGx5LlxuICAwO1xufVxuXG5mdW5jdGlvbiBtYXRjaFJvdXRlQnJhbmNoKGJyYW5jaCwgcGF0aG5hbWUpIHtcbiAgbGV0IHtcbiAgICByb3V0ZXNNZXRhXG4gIH0gPSBicmFuY2g7XG4gIGxldCBtYXRjaGVkUGFyYW1zID0ge307XG4gIGxldCBtYXRjaGVkUGF0aG5hbWUgPSBcIi9cIjtcbiAgbGV0IG1hdGNoZXMgPSBbXTtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IHJvdXRlc01ldGEubGVuZ3RoOyArK2kpIHtcbiAgICBsZXQgbWV0YSA9IHJvdXRlc01ldGFbaV07XG4gICAgbGV0IGVuZCA9IGkgPT09IHJvdXRlc01ldGEubGVuZ3RoIC0gMTtcbiAgICBsZXQgcmVtYWluaW5nUGF0aG5hbWUgPSBtYXRjaGVkUGF0aG5hbWUgPT09IFwiL1wiID8gcGF0aG5hbWUgOiBwYXRobmFtZS5zbGljZShtYXRjaGVkUGF0aG5hbWUubGVuZ3RoKSB8fCBcIi9cIjtcbiAgICBsZXQgbWF0Y2ggPSBtYXRjaFBhdGgoe1xuICAgICAgcGF0aDogbWV0YS5yZWxhdGl2ZVBhdGgsXG4gICAgICBjYXNlU2Vuc2l0aXZlOiBtZXRhLmNhc2VTZW5zaXRpdmUsXG4gICAgICBlbmRcbiAgICB9LCByZW1haW5pbmdQYXRobmFtZSk7XG4gICAgaWYgKCFtYXRjaCkgcmV0dXJuIG51bGw7XG4gICAgT2JqZWN0LmFzc2lnbihtYXRjaGVkUGFyYW1zLCBtYXRjaC5wYXJhbXMpO1xuICAgIGxldCByb3V0ZSA9IG1ldGEucm91dGU7XG4gICAgbWF0Y2hlcy5wdXNoKHtcbiAgICAgIHBhcmFtczogbWF0Y2hlZFBhcmFtcyxcbiAgICAgIHBhdGhuYW1lOiBqb2luUGF0aHMoW21hdGNoZWRQYXRobmFtZSwgbWF0Y2gucGF0aG5hbWVdKSxcbiAgICAgIHBhdGhuYW1lQmFzZTogbm9ybWFsaXplUGF0aG5hbWUoam9pblBhdGhzKFttYXRjaGVkUGF0aG5hbWUsIG1hdGNoLnBhdGhuYW1lQmFzZV0pKSxcbiAgICAgIHJvdXRlXG4gICAgfSk7XG5cbiAgICBpZiAobWF0Y2gucGF0aG5hbWVCYXNlICE9PSBcIi9cIikge1xuICAgICAgbWF0Y2hlZFBhdGhuYW1lID0gam9pblBhdGhzKFttYXRjaGVkUGF0aG5hbWUsIG1hdGNoLnBhdGhuYW1lQmFzZV0pO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBtYXRjaGVzO1xufVxuLyoqXG4gKiBBIFBhdGhQYXR0ZXJuIGlzIHVzZWQgdG8gbWF0Y2ggb24gc29tZSBwb3J0aW9uIG9mIGEgVVJMIHBhdGhuYW1lLlxuICovXG5cblxuLyoqXG4gKiBQZXJmb3JtcyBwYXR0ZXJuIG1hdGNoaW5nIG9uIGEgVVJMIHBhdGhuYW1lIGFuZCByZXR1cm5zIGluZm9ybWF0aW9uIGFib3V0XG4gKiB0aGUgbWF0Y2guXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSNtYXRjaHBhdGhcbiAqL1xuZnVuY3Rpb24gbWF0Y2hQYXRoKHBhdHRlcm4sIHBhdGhuYW1lKSB7XG4gIGlmICh0eXBlb2YgcGF0dGVybiA9PT0gXCJzdHJpbmdcIikge1xuICAgIHBhdHRlcm4gPSB7XG4gICAgICBwYXRoOiBwYXR0ZXJuLFxuICAgICAgY2FzZVNlbnNpdGl2ZTogZmFsc2UsXG4gICAgICBlbmQ6IHRydWVcbiAgICB9O1xuICB9XG5cbiAgbGV0IFttYXRjaGVyLCBwYXJhbU5hbWVzXSA9IGNvbXBpbGVQYXRoKHBhdHRlcm4ucGF0aCwgcGF0dGVybi5jYXNlU2Vuc2l0aXZlLCBwYXR0ZXJuLmVuZCk7XG4gIGxldCBtYXRjaCA9IHBhdGhuYW1lLm1hdGNoKG1hdGNoZXIpO1xuICBpZiAoIW1hdGNoKSByZXR1cm4gbnVsbDtcbiAgbGV0IG1hdGNoZWRQYXRobmFtZSA9IG1hdGNoWzBdO1xuICBsZXQgcGF0aG5hbWVCYXNlID0gbWF0Y2hlZFBhdGhuYW1lLnJlcGxhY2UoLyguKVxcLyskLywgXCIkMVwiKTtcbiAgbGV0IGNhcHR1cmVHcm91cHMgPSBtYXRjaC5zbGljZSgxKTtcbiAgbGV0IHBhcmFtcyA9IHBhcmFtTmFtZXMucmVkdWNlKChtZW1vLCBwYXJhbU5hbWUsIGluZGV4KSA9PiB7XG4gICAgLy8gV2UgbmVlZCB0byBjb21wdXRlIHRoZSBwYXRobmFtZUJhc2UgaGVyZSB1c2luZyB0aGUgcmF3IHNwbGF0IHZhbHVlXG4gICAgLy8gaW5zdGVhZCBvZiB1c2luZyBwYXJhbXNbXCIqXCJdIGxhdGVyIGJlY2F1c2UgaXQgd2lsbCBiZSBkZWNvZGVkIHRoZW5cbiAgICBpZiAocGFyYW1OYW1lID09PSBcIipcIikge1xuICAgICAgbGV0IHNwbGF0VmFsdWUgPSBjYXB0dXJlR3JvdXBzW2luZGV4XSB8fCBcIlwiO1xuICAgICAgcGF0aG5hbWVCYXNlID0gbWF0Y2hlZFBhdGhuYW1lLnNsaWNlKDAsIG1hdGNoZWRQYXRobmFtZS5sZW5ndGggLSBzcGxhdFZhbHVlLmxlbmd0aCkucmVwbGFjZSgvKC4pXFwvKyQvLCBcIiQxXCIpO1xuICAgIH1cblxuICAgIG1lbW9bcGFyYW1OYW1lXSA9IHNhZmVseURlY29kZVVSSUNvbXBvbmVudChjYXB0dXJlR3JvdXBzW2luZGV4XSB8fCBcIlwiLCBwYXJhbU5hbWUpO1xuICAgIHJldHVybiBtZW1vO1xuICB9LCB7fSk7XG4gIHJldHVybiB7XG4gICAgcGFyYW1zLFxuICAgIHBhdGhuYW1lOiBtYXRjaGVkUGF0aG5hbWUsXG4gICAgcGF0aG5hbWVCYXNlLFxuICAgIHBhdHRlcm5cbiAgfTtcbn1cblxuZnVuY3Rpb24gY29tcGlsZVBhdGgocGF0aCwgY2FzZVNlbnNpdGl2ZSwgZW5kKSB7XG4gIGlmIChjYXNlU2Vuc2l0aXZlID09PSB2b2lkIDApIHtcbiAgICBjYXNlU2Vuc2l0aXZlID0gZmFsc2U7XG4gIH1cblxuICBpZiAoZW5kID09PSB2b2lkIDApIHtcbiAgICBlbmQgPSB0cnVlO1xuICB9XG5cbiAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhwYXRoID09PSBcIipcIiB8fCAhcGF0aC5lbmRzV2l0aChcIipcIikgfHwgcGF0aC5lbmRzV2l0aChcIi8qXCIpLCBcIlJvdXRlIHBhdGggXFxcIlwiICsgcGF0aCArIFwiXFxcIiB3aWxsIGJlIHRyZWF0ZWQgYXMgaWYgaXQgd2VyZSBcIiArIChcIlxcXCJcIiArIHBhdGgucmVwbGFjZSgvXFwqJC8sIFwiLypcIikgKyBcIlxcXCIgYmVjYXVzZSB0aGUgYCpgIGNoYXJhY3RlciBtdXN0IFwiKSArIFwiYWx3YXlzIGZvbGxvdyBhIGAvYCBpbiB0aGUgcGF0dGVybi4gVG8gZ2V0IHJpZCBvZiB0aGlzIHdhcm5pbmcsIFwiICsgKFwicGxlYXNlIGNoYW5nZSB0aGUgcm91dGUgcGF0aCB0byBcXFwiXCIgKyBwYXRoLnJlcGxhY2UoL1xcKiQvLCBcIi8qXCIpICsgXCJcXFwiLlwiKSkgOiB2b2lkIDA7XG4gIGxldCBwYXJhbU5hbWVzID0gW107XG4gIGxldCByZWdleHBTb3VyY2UgPSBcIl5cIiArIHBhdGgucmVwbGFjZSgvXFwvKlxcKj8kLywgXCJcIikgLy8gSWdub3JlIHRyYWlsaW5nIC8gYW5kIC8qLCB3ZSdsbCBoYW5kbGUgaXQgYmVsb3dcbiAgLnJlcGxhY2UoL15cXC8qLywgXCIvXCIpIC8vIE1ha2Ugc3VyZSBpdCBoYXMgYSBsZWFkaW5nIC9cbiAgLnJlcGxhY2UoL1tcXFxcLiorXiQ/e318KClbXFxdXS9nLCBcIlxcXFwkJlwiKSAvLyBFc2NhcGUgc3BlY2lhbCByZWdleCBjaGFyc1xuICAucmVwbGFjZSgvOihcXHcrKS9nLCAoXywgcGFyYW1OYW1lKSA9PiB7XG4gICAgcGFyYW1OYW1lcy5wdXNoKHBhcmFtTmFtZSk7XG4gICAgcmV0dXJuIFwiKFteXFxcXC9dKylcIjtcbiAgfSk7XG5cbiAgaWYgKHBhdGguZW5kc1dpdGgoXCIqXCIpKSB7XG4gICAgcGFyYW1OYW1lcy5wdXNoKFwiKlwiKTtcbiAgICByZWdleHBTb3VyY2UgKz0gcGF0aCA9PT0gXCIqXCIgfHwgcGF0aCA9PT0gXCIvKlwiID8gXCIoLiopJFwiIC8vIEFscmVhZHkgbWF0Y2hlZCB0aGUgaW5pdGlhbCAvLCBqdXN0IG1hdGNoIHRoZSByZXN0XG4gICAgOiBcIig/OlxcXFwvKC4rKXxcXFxcLyopJFwiOyAvLyBEb24ndCBpbmNsdWRlIHRoZSAvIGluIHBhcmFtc1tcIipcIl1cbiAgfSBlbHNlIHtcbiAgICByZWdleHBTb3VyY2UgKz0gZW5kID8gXCJcXFxcLyokXCIgLy8gV2hlbiBtYXRjaGluZyB0byB0aGUgZW5kLCBpZ25vcmUgdHJhaWxpbmcgc2xhc2hlc1xuICAgIDogLy8gT3RoZXJ3aXNlLCBtYXRjaCBhIHdvcmQgYm91bmRhcnkgb3IgYSBwcm9jZWVkaW5nIC8uIFRoZSB3b3JkIGJvdW5kYXJ5IHJlc3RyaWN0c1xuICAgIC8vIHBhcmVudCByb3V0ZXMgdG8gbWF0Y2hpbmcgb25seSB0aGVpciBvd24gd29yZHMgYW5kIG5vdGhpbmcgbW9yZSwgZS5nLiBwYXJlbnRcbiAgICAvLyByb3V0ZSBcIi9ob21lXCIgc2hvdWxkIG5vdCBtYXRjaCBcIi9ob21lMlwiLlxuICAgIC8vIEFkZGl0aW9uYWxseSwgYWxsb3cgcGF0aHMgc3RhcnRpbmcgd2l0aCBgLmAsIGAtYCwgYH5gLCBhbmQgdXJsLWVuY29kZWQgZW50aXRpZXMsXG4gICAgLy8gYnV0IGRvIG5vdCBjb25zdW1lIHRoZSBjaGFyYWN0ZXIgaW4gdGhlIG1hdGNoZWQgcGF0aCBzbyB0aGV5IGNhbiBtYXRjaCBhZ2FpbnN0XG4gICAgLy8gbmVzdGVkIHBhdGhzLlxuICAgIFwiKD86KD89Wy5+LV18JVswLTlBLUZdezJ9KXxcXFxcYnxcXFxcL3wkKVwiO1xuICB9XG5cbiAgbGV0IG1hdGNoZXIgPSBuZXcgUmVnRXhwKHJlZ2V4cFNvdXJjZSwgY2FzZVNlbnNpdGl2ZSA/IHVuZGVmaW5lZCA6IFwiaVwiKTtcbiAgcmV0dXJuIFttYXRjaGVyLCBwYXJhbU5hbWVzXTtcbn1cblxuZnVuY3Rpb24gc2FmZWx5RGVjb2RlVVJJQ29tcG9uZW50KHZhbHVlLCBwYXJhbU5hbWUpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KHZhbHVlKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGZhbHNlLCBcIlRoZSB2YWx1ZSBmb3IgdGhlIFVSTCBwYXJhbSBcXFwiXCIgKyBwYXJhbU5hbWUgKyBcIlxcXCIgd2lsbCBub3QgYmUgZGVjb2RlZCBiZWNhdXNlXCIgKyAoXCIgdGhlIHN0cmluZyBcXFwiXCIgKyB2YWx1ZSArIFwiXFxcIiBpcyBhIG1hbGZvcm1lZCBVUkwgc2VnbWVudC4gVGhpcyBpcyBwcm9iYWJseVwiKSArIChcIiBkdWUgdG8gYSBiYWQgcGVyY2VudCBlbmNvZGluZyAoXCIgKyBlcnJvciArIFwiKS5cIikpIDogdm9pZCAwO1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxufVxuLyoqXG4gKiBSZXR1cm5zIGEgcmVzb2x2ZWQgcGF0aCBvYmplY3QgcmVsYXRpdmUgdG8gdGhlIGdpdmVuIHBhdGhuYW1lLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjcmVzb2x2ZXBhdGhcbiAqL1xuXG5cbmZ1bmN0aW9uIHJlc29sdmVQYXRoKHRvLCBmcm9tUGF0aG5hbWUpIHtcbiAgaWYgKGZyb21QYXRobmFtZSA9PT0gdm9pZCAwKSB7XG4gICAgZnJvbVBhdGhuYW1lID0gXCIvXCI7XG4gIH1cblxuICBsZXQge1xuICAgIHBhdGhuYW1lOiB0b1BhdGhuYW1lLFxuICAgIHNlYXJjaCA9IFwiXCIsXG4gICAgaGFzaCA9IFwiXCJcbiAgfSA9IHR5cGVvZiB0byA9PT0gXCJzdHJpbmdcIiA/IHBhcnNlUGF0aCh0bykgOiB0bztcbiAgbGV0IHBhdGhuYW1lID0gdG9QYXRobmFtZSA/IHRvUGF0aG5hbWUuc3RhcnRzV2l0aChcIi9cIikgPyB0b1BhdGhuYW1lIDogcmVzb2x2ZVBhdGhuYW1lKHRvUGF0aG5hbWUsIGZyb21QYXRobmFtZSkgOiBmcm9tUGF0aG5hbWU7XG4gIHJldHVybiB7XG4gICAgcGF0aG5hbWUsXG4gICAgc2VhcmNoOiBub3JtYWxpemVTZWFyY2goc2VhcmNoKSxcbiAgICBoYXNoOiBub3JtYWxpemVIYXNoKGhhc2gpXG4gIH07XG59XG5cbmZ1bmN0aW9uIHJlc29sdmVQYXRobmFtZShyZWxhdGl2ZVBhdGgsIGZyb21QYXRobmFtZSkge1xuICBsZXQgc2VnbWVudHMgPSBmcm9tUGF0aG5hbWUucmVwbGFjZSgvXFwvKyQvLCBcIlwiKS5zcGxpdChcIi9cIik7XG4gIGxldCByZWxhdGl2ZVNlZ21lbnRzID0gcmVsYXRpdmVQYXRoLnNwbGl0KFwiL1wiKTtcbiAgcmVsYXRpdmVTZWdtZW50cy5mb3JFYWNoKHNlZ21lbnQgPT4ge1xuICAgIGlmIChzZWdtZW50ID09PSBcIi4uXCIpIHtcbiAgICAgIC8vIEtlZXAgdGhlIHJvb3QgXCJcIiBzZWdtZW50IHNvIHRoZSBwYXRobmFtZSBzdGFydHMgYXQgL1xuICAgICAgaWYgKHNlZ21lbnRzLmxlbmd0aCA+IDEpIHNlZ21lbnRzLnBvcCgpO1xuICAgIH0gZWxzZSBpZiAoc2VnbWVudCAhPT0gXCIuXCIpIHtcbiAgICAgIHNlZ21lbnRzLnB1c2goc2VnbWVudCk7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIHNlZ21lbnRzLmxlbmd0aCA+IDEgPyBzZWdtZW50cy5qb2luKFwiL1wiKSA6IFwiL1wiO1xufVxuXG5mdW5jdGlvbiByZXNvbHZlVG8odG9BcmcsIHJvdXRlUGF0aG5hbWVzLCBsb2NhdGlvblBhdGhuYW1lKSB7XG4gIGxldCB0byA9IHR5cGVvZiB0b0FyZyA9PT0gXCJzdHJpbmdcIiA/IHBhcnNlUGF0aCh0b0FyZykgOiB0b0FyZztcbiAgbGV0IHRvUGF0aG5hbWUgPSB0b0FyZyA9PT0gXCJcIiB8fCB0by5wYXRobmFtZSA9PT0gXCJcIiA/IFwiL1wiIDogdG8ucGF0aG5hbWU7IC8vIElmIGEgcGF0aG5hbWUgaXMgZXhwbGljaXRseSBwcm92aWRlZCBpbiBgdG9gLCBpdCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gdGhlXG4gIC8vIHJvdXRlIGNvbnRleHQuIFRoaXMgaXMgZXhwbGFpbmVkIGluIGBOb3RlIG9uIGA8TGluayB0bz5gIHZhbHVlc2AgaW4gb3VyXG4gIC8vIG1pZ3JhdGlvbiBndWlkZSBmcm9tIHY1IGFzIGEgbWVhbnMgb2YgZGlzYW1iaWd1YXRpb24gYmV0d2VlbiBgdG9gIHZhbHVlc1xuICAvLyB0aGF0IGJlZ2luIHdpdGggYC9gIGFuZCB0aG9zZSB0aGF0IGRvIG5vdC4gSG93ZXZlciwgdGhpcyBpcyBwcm9ibGVtYXRpYyBmb3JcbiAgLy8gYHRvYCB2YWx1ZXMgdGhhdCBkbyBub3QgcHJvdmlkZSBhIHBhdGhuYW1lLiBgdG9gIGNhbiBzaW1wbHkgYmUgYSBzZWFyY2ggb3JcbiAgLy8gaGFzaCBzdHJpbmcsIGluIHdoaWNoIGNhc2Ugd2Ugc2hvdWxkIGFzc3VtZSB0aGF0IHRoZSBuYXZpZ2F0aW9uIGlzIHJlbGF0aXZlXG4gIC8vIHRvIHRoZSBjdXJyZW50IGxvY2F0aW9uJ3MgcGF0aG5hbWUgYW5kICpub3QqIHRoZSByb3V0ZSBwYXRobmFtZS5cblxuICBsZXQgZnJvbTtcblxuICBpZiAodG9QYXRobmFtZSA9PSBudWxsKSB7XG4gICAgZnJvbSA9IGxvY2F0aW9uUGF0aG5hbWU7XG4gIH0gZWxzZSB7XG4gICAgbGV0IHJvdXRlUGF0aG5hbWVJbmRleCA9IHJvdXRlUGF0aG5hbWVzLmxlbmd0aCAtIDE7XG5cbiAgICBpZiAodG9QYXRobmFtZS5zdGFydHNXaXRoKFwiLi5cIikpIHtcbiAgICAgIGxldCB0b1NlZ21lbnRzID0gdG9QYXRobmFtZS5zcGxpdChcIi9cIik7IC8vIEVhY2ggbGVhZGluZyAuLiBzZWdtZW50IG1lYW5zIFwiZ28gdXAgb25lIHJvdXRlXCIgaW5zdGVhZCBvZiBcImdvIHVwIG9uZVxuICAgICAgLy8gVVJMIHNlZ21lbnRcIi4gIFRoaXMgaXMgYSBrZXkgZGlmZmVyZW5jZSBmcm9tIGhvdyA8YSBocmVmPiB3b3JrcyBhbmQgYVxuICAgICAgLy8gbWFqb3IgcmVhc29uIHdlIGNhbGwgdGhpcyBhIFwidG9cIiB2YWx1ZSBpbnN0ZWFkIG9mIGEgXCJocmVmXCIuXG5cbiAgICAgIHdoaWxlICh0b1NlZ21lbnRzWzBdID09PSBcIi4uXCIpIHtcbiAgICAgICAgdG9TZWdtZW50cy5zaGlmdCgpO1xuICAgICAgICByb3V0ZVBhdGhuYW1lSW5kZXggLT0gMTtcbiAgICAgIH1cblxuICAgICAgdG8ucGF0aG5hbWUgPSB0b1NlZ21lbnRzLmpvaW4oXCIvXCIpO1xuICAgIH0gLy8gSWYgdGhlcmUgYXJlIG1vcmUgXCIuLlwiIHNlZ21lbnRzIHRoYW4gcGFyZW50IHJvdXRlcywgcmVzb2x2ZSByZWxhdGl2ZSB0b1xuICAgIC8vIHRoZSByb290IC8gVVJMLlxuXG5cbiAgICBmcm9tID0gcm91dGVQYXRobmFtZUluZGV4ID49IDAgPyByb3V0ZVBhdGhuYW1lc1tyb3V0ZVBhdGhuYW1lSW5kZXhdIDogXCIvXCI7XG4gIH1cblxuICBsZXQgcGF0aCA9IHJlc29sdmVQYXRoKHRvLCBmcm9tKTsgLy8gRW5zdXJlIHRoZSBwYXRobmFtZSBoYXMgYSB0cmFpbGluZyBzbGFzaCBpZiB0aGUgb3JpZ2luYWwgdG8gdmFsdWUgaGFkIG9uZS5cblxuICBpZiAodG9QYXRobmFtZSAmJiB0b1BhdGhuYW1lICE9PSBcIi9cIiAmJiB0b1BhdGhuYW1lLmVuZHNXaXRoKFwiL1wiKSAmJiAhcGF0aC5wYXRobmFtZS5lbmRzV2l0aChcIi9cIikpIHtcbiAgICBwYXRoLnBhdGhuYW1lICs9IFwiL1wiO1xuICB9XG5cbiAgcmV0dXJuIHBhdGg7XG59XG5mdW5jdGlvbiBnZXRUb1BhdGhuYW1lKHRvKSB7XG4gIC8vIEVtcHR5IHN0cmluZ3Mgc2hvdWxkIGJlIHRyZWF0ZWQgdGhlIHNhbWUgYXMgLyBwYXRoc1xuICByZXR1cm4gdG8gPT09IFwiXCIgfHwgdG8ucGF0aG5hbWUgPT09IFwiXCIgPyBcIi9cIiA6IHR5cGVvZiB0byA9PT0gXCJzdHJpbmdcIiA/IHBhcnNlUGF0aCh0bykucGF0aG5hbWUgOiB0by5wYXRobmFtZTtcbn1cbmZ1bmN0aW9uIHN0cmlwQmFzZW5hbWUocGF0aG5hbWUsIGJhc2VuYW1lKSB7XG4gIGlmIChiYXNlbmFtZSA9PT0gXCIvXCIpIHJldHVybiBwYXRobmFtZTtcblxuICBpZiAoIXBhdGhuYW1lLnRvTG93ZXJDYXNlKCkuc3RhcnRzV2l0aChiYXNlbmFtZS50b0xvd2VyQ2FzZSgpKSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgbGV0IG5leHRDaGFyID0gcGF0aG5hbWUuY2hhckF0KGJhc2VuYW1lLmxlbmd0aCk7XG5cbiAgaWYgKG5leHRDaGFyICYmIG5leHRDaGFyICE9PSBcIi9cIikge1xuICAgIC8vIHBhdGhuYW1lIGRvZXMgbm90IHN0YXJ0IHdpdGggYmFzZW5hbWUvXG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXR1cm4gcGF0aG5hbWUuc2xpY2UoYmFzZW5hbWUubGVuZ3RoKSB8fCBcIi9cIjtcbn1cbmNvbnN0IGpvaW5QYXRocyA9IHBhdGhzID0+IHBhdGhzLmpvaW4oXCIvXCIpLnJlcGxhY2UoL1xcL1xcLysvZywgXCIvXCIpO1xuY29uc3Qgbm9ybWFsaXplUGF0aG5hbWUgPSBwYXRobmFtZSA9PiBwYXRobmFtZS5yZXBsYWNlKC9cXC8rJC8sIFwiXCIpLnJlcGxhY2UoL15cXC8qLywgXCIvXCIpO1xuXG5jb25zdCBub3JtYWxpemVTZWFyY2ggPSBzZWFyY2ggPT4gIXNlYXJjaCB8fCBzZWFyY2ggPT09IFwiP1wiID8gXCJcIiA6IHNlYXJjaC5zdGFydHNXaXRoKFwiP1wiKSA/IHNlYXJjaCA6IFwiP1wiICsgc2VhcmNoO1xuXG5jb25zdCBub3JtYWxpemVIYXNoID0gaGFzaCA9PiAhaGFzaCB8fCBoYXNoID09PSBcIiNcIiA/IFwiXCIgOiBoYXNoLnN0YXJ0c1dpdGgoXCIjXCIpID8gaGFzaCA6IFwiI1wiICsgaGFzaDtcblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBmdWxsIGhyZWYgZm9yIHRoZSBnaXZlbiBcInRvXCIgdmFsdWUuIFRoaXMgaXMgdXNlZnVsIGZvciBidWlsZGluZ1xuICogY3VzdG9tIGxpbmtzIHRoYXQgYXJlIGFsc28gYWNjZXNzaWJsZSBhbmQgcHJlc2VydmUgcmlnaHQtY2xpY2sgYmVoYXZpb3IuXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSN1c2VocmVmXG4gKi9cblxuZnVuY3Rpb24gdXNlSHJlZih0bykge1xuICAhdXNlSW5Sb3V0ZXJDb250ZXh0KCkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIC8vIFRPRE86IFRoaXMgZXJyb3IgaXMgcHJvYmFibHkgYmVjYXVzZSB0aGV5IHNvbWVob3cgaGF2ZSAyIHZlcnNpb25zIG9mIHRoZVxuICAvLyByb3V0ZXIgbG9hZGVkLiBXZSBjYW4gaGVscCB0aGVtIHVuZGVyc3RhbmQgaG93IHRvIGF2b2lkIHRoYXQuXG4gIFwidXNlSHJlZigpIG1heSBiZSB1c2VkIG9ubHkgaW4gdGhlIGNvbnRleHQgb2YgYSA8Um91dGVyPiBjb21wb25lbnQuXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgbGV0IHtcbiAgICBiYXNlbmFtZSxcbiAgICBuYXZpZ2F0b3JcbiAgfSA9IHVzZUNvbnRleHQoTmF2aWdhdGlvbkNvbnRleHQpO1xuICBsZXQge1xuICAgIGhhc2gsXG4gICAgcGF0aG5hbWUsXG4gICAgc2VhcmNoXG4gIH0gPSB1c2VSZXNvbHZlZFBhdGgodG8pO1xuICBsZXQgam9pbmVkUGF0aG5hbWUgPSBwYXRobmFtZTtcblxuICBpZiAoYmFzZW5hbWUgIT09IFwiL1wiKSB7XG4gICAgbGV0IHRvUGF0aG5hbWUgPSBnZXRUb1BhdGhuYW1lKHRvKTtcbiAgICBsZXQgZW5kc1dpdGhTbGFzaCA9IHRvUGF0aG5hbWUgIT0gbnVsbCAmJiB0b1BhdGhuYW1lLmVuZHNXaXRoKFwiL1wiKTtcbiAgICBqb2luZWRQYXRobmFtZSA9IHBhdGhuYW1lID09PSBcIi9cIiA/IGJhc2VuYW1lICsgKGVuZHNXaXRoU2xhc2ggPyBcIi9cIiA6IFwiXCIpIDogam9pblBhdGhzKFtiYXNlbmFtZSwgcGF0aG5hbWVdKTtcbiAgfVxuXG4gIHJldHVybiBuYXZpZ2F0b3IuY3JlYXRlSHJlZih7XG4gICAgcGF0aG5hbWU6IGpvaW5lZFBhdGhuYW1lLFxuICAgIHNlYXJjaCxcbiAgICBoYXNoXG4gIH0pO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhpcyBjb21wb25lbnQgaXMgYSBkZXNjZW5kYW50IG9mIGEgPFJvdXRlcj4uXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSN1c2VpbnJvdXRlcmNvbnRleHRcbiAqL1xuXG5mdW5jdGlvbiB1c2VJblJvdXRlckNvbnRleHQoKSB7XG4gIHJldHVybiB1c2VDb250ZXh0KExvY2F0aW9uQ29udGV4dCkgIT0gbnVsbDtcbn1cbi8qKlxuICogUmV0dXJucyB0aGUgY3VycmVudCBsb2NhdGlvbiBvYmplY3QsIHdoaWNoIHJlcHJlc2VudHMgdGhlIGN1cnJlbnQgVVJMIGluIHdlYlxuICogYnJvd3NlcnMuXG4gKlxuICogTm90ZTogSWYgeW91J3JlIHVzaW5nIHRoaXMgaXQgbWF5IG1lYW4geW91J3JlIGRvaW5nIHNvbWUgb2YgeW91ciBvd25cbiAqIFwicm91dGluZ1wiIGluIHlvdXIgYXBwLCBhbmQgd2UnZCBsaWtlIHRvIGtub3cgd2hhdCB5b3VyIHVzZSBjYXNlIGlzLiBXZSBtYXlcbiAqIGJlIGFibGUgdG8gcHJvdmlkZSBzb21ldGhpbmcgaGlnaGVyLWxldmVsIHRvIGJldHRlciBzdWl0IHlvdXIgbmVlZHMuXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSN1c2Vsb2NhdGlvblxuICovXG5cbmZ1bmN0aW9uIHVzZUxvY2F0aW9uKCkge1xuICAhdXNlSW5Sb3V0ZXJDb250ZXh0KCkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIC8vIFRPRE86IFRoaXMgZXJyb3IgaXMgcHJvYmFibHkgYmVjYXVzZSB0aGV5IHNvbWVob3cgaGF2ZSAyIHZlcnNpb25zIG9mIHRoZVxuICAvLyByb3V0ZXIgbG9hZGVkLiBXZSBjYW4gaGVscCB0aGVtIHVuZGVyc3RhbmQgaG93IHRvIGF2b2lkIHRoYXQuXG4gIFwidXNlTG9jYXRpb24oKSBtYXkgYmUgdXNlZCBvbmx5IGluIHRoZSBjb250ZXh0IG9mIGEgPFJvdXRlcj4gY29tcG9uZW50LlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIHJldHVybiB1c2VDb250ZXh0KExvY2F0aW9uQ29udGV4dCkubG9jYXRpb247XG59XG4vKipcbiAqIFJldHVybnMgdGhlIGN1cnJlbnQgbmF2aWdhdGlvbiBhY3Rpb24gd2hpY2ggZGVzY3JpYmVzIGhvdyB0aGUgcm91dGVyIGNhbWUgdG9cbiAqIHRoZSBjdXJyZW50IGxvY2F0aW9uLCBlaXRoZXIgYnkgYSBwb3AsIHB1c2gsIG9yIHJlcGxhY2Ugb24gdGhlIGhpc3Rvcnkgc3RhY2suXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSN1c2VuYXZpZ2F0aW9udHlwZVxuICovXG5cbmZ1bmN0aW9uIHVzZU5hdmlnYXRpb25UeXBlKCkge1xuICByZXR1cm4gdXNlQ29udGV4dChMb2NhdGlvbkNvbnRleHQpLm5hdmlnYXRpb25UeXBlO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhlIFVSTCBmb3IgdGhlIGdpdmVuIFwidG9cIiB2YWx1ZSBtYXRjaGVzIHRoZSBjdXJyZW50IFVSTC5cbiAqIFRoaXMgaXMgdXNlZnVsIGZvciBjb21wb25lbnRzIHRoYXQgbmVlZCB0byBrbm93IFwiYWN0aXZlXCIgc3RhdGUsIGUuZy5cbiAqIDxOYXZMaW5rPi5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3Ryb3V0ZXIuY29tL2RvY3MvZW4vdjYvYXBpI3VzZW1hdGNoXG4gKi9cblxuZnVuY3Rpb24gdXNlTWF0Y2gocGF0dGVybikge1xuICAhdXNlSW5Sb3V0ZXJDb250ZXh0KCkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIC8vIFRPRE86IFRoaXMgZXJyb3IgaXMgcHJvYmFibHkgYmVjYXVzZSB0aGV5IHNvbWVob3cgaGF2ZSAyIHZlcnNpb25zIG9mIHRoZVxuICAvLyByb3V0ZXIgbG9hZGVkLiBXZSBjYW4gaGVscCB0aGVtIHVuZGVyc3RhbmQgaG93IHRvIGF2b2lkIHRoYXQuXG4gIFwidXNlTWF0Y2goKSBtYXkgYmUgdXNlZCBvbmx5IGluIHRoZSBjb250ZXh0IG9mIGEgPFJvdXRlcj4gY29tcG9uZW50LlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIGxldCB7XG4gICAgcGF0aG5hbWVcbiAgfSA9IHVzZUxvY2F0aW9uKCk7XG4gIHJldHVybiB1c2VNZW1vKCgpID0+IG1hdGNoUGF0aChwYXR0ZXJuLCBwYXRobmFtZSksIFtwYXRobmFtZSwgcGF0dGVybl0pO1xufVxuLyoqXG4gKiBUaGUgaW50ZXJmYWNlIGZvciB0aGUgbmF2aWdhdGUoKSBmdW5jdGlvbiByZXR1cm5lZCBmcm9tIHVzZU5hdmlnYXRlKCkuXG4gKi9cblxuLyoqXG4gKiBSZXR1cm5zIGFuIGltcGVyYXRpdmUgbWV0aG9kIGZvciBjaGFuZ2luZyB0aGUgbG9jYXRpb24uIFVzZWQgYnkgPExpbms+cywgYnV0XG4gKiBtYXkgYWxzbyBiZSB1c2VkIGJ5IG90aGVyIGVsZW1lbnRzIHRvIGNoYW5nZSB0aGUgbG9jYXRpb24uXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSN1c2VuYXZpZ2F0ZVxuICovXG5mdW5jdGlvbiB1c2VOYXZpZ2F0ZSgpIHtcbiAgIXVzZUluUm91dGVyQ29udGV4dCgpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAvLyBUT0RPOiBUaGlzIGVycm9yIGlzIHByb2JhYmx5IGJlY2F1c2UgdGhleSBzb21laG93IGhhdmUgMiB2ZXJzaW9ucyBvZiB0aGVcbiAgLy8gcm91dGVyIGxvYWRlZC4gV2UgY2FuIGhlbHAgdGhlbSB1bmRlcnN0YW5kIGhvdyB0byBhdm9pZCB0aGF0LlxuICBcInVzZU5hdmlnYXRlKCkgbWF5IGJlIHVzZWQgb25seSBpbiB0aGUgY29udGV4dCBvZiBhIDxSb3V0ZXI+IGNvbXBvbmVudC5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICBsZXQge1xuICAgIGJhc2VuYW1lLFxuICAgIG5hdmlnYXRvclxuICB9ID0gdXNlQ29udGV4dChOYXZpZ2F0aW9uQ29udGV4dCk7XG4gIGxldCB7XG4gICAgbWF0Y2hlc1xuICB9ID0gdXNlQ29udGV4dChSb3V0ZUNvbnRleHQpO1xuICBsZXQge1xuICAgIHBhdGhuYW1lOiBsb2NhdGlvblBhdGhuYW1lXG4gIH0gPSB1c2VMb2NhdGlvbigpO1xuICBsZXQgcm91dGVQYXRobmFtZXNKc29uID0gSlNPTi5zdHJpbmdpZnkobWF0Y2hlcy5tYXAobWF0Y2ggPT4gbWF0Y2gucGF0aG5hbWVCYXNlKSk7XG4gIGxldCBhY3RpdmVSZWYgPSB1c2VSZWYoZmFsc2UpO1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGFjdGl2ZVJlZi5jdXJyZW50ID0gdHJ1ZTtcbiAgfSk7XG4gIGxldCBuYXZpZ2F0ZSA9IHVzZUNhbGxiYWNrKGZ1bmN0aW9uICh0bywgb3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICAgIG9wdGlvbnMgPSB7fTtcbiAgICB9XG5cbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGFjdGl2ZVJlZi5jdXJyZW50LCBcIllvdSBzaG91bGQgY2FsbCBuYXZpZ2F0ZSgpIGluIGEgUmVhY3QudXNlRWZmZWN0KCksIG5vdCB3aGVuIFwiICsgXCJ5b3VyIGNvbXBvbmVudCBpcyBmaXJzdCByZW5kZXJlZC5cIikgOiB2b2lkIDA7XG4gICAgaWYgKCFhY3RpdmVSZWYuY3VycmVudCkgcmV0dXJuO1xuXG4gICAgaWYgKHR5cGVvZiB0byA9PT0gXCJudW1iZXJcIikge1xuICAgICAgbmF2aWdhdG9yLmdvKHRvKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBsZXQgcGF0aCA9IHJlc29sdmVUbyh0bywgSlNPTi5wYXJzZShyb3V0ZVBhdGhuYW1lc0pzb24pLCBsb2NhdGlvblBhdGhuYW1lKTtcblxuICAgIGlmIChiYXNlbmFtZSAhPT0gXCIvXCIpIHtcbiAgICAgIHBhdGgucGF0aG5hbWUgPSBqb2luUGF0aHMoW2Jhc2VuYW1lLCBwYXRoLnBhdGhuYW1lXSk7XG4gICAgfVxuXG4gICAgKCEhb3B0aW9ucy5yZXBsYWNlID8gbmF2aWdhdG9yLnJlcGxhY2UgOiBuYXZpZ2F0b3IucHVzaCkocGF0aCwgb3B0aW9ucy5zdGF0ZSk7XG4gIH0sIFtiYXNlbmFtZSwgbmF2aWdhdG9yLCByb3V0ZVBhdGhuYW1lc0pzb24sIGxvY2F0aW9uUGF0aG5hbWVdKTtcbiAgcmV0dXJuIG5hdmlnYXRlO1xufVxuY29uc3QgT3V0bGV0Q29udGV4dCA9IC8qI19fUFVSRV9fKi9jcmVhdGVDb250ZXh0KG51bGwpO1xuLyoqXG4gKiBSZXR1cm5zIHRoZSBjb250ZXh0IChpZiBwcm92aWRlZCkgZm9yIHRoZSBjaGlsZCByb3V0ZSBhdCB0aGlzIGxldmVsIG9mIHRoZSByb3V0ZVxuICogaGllcmFyY2h5LlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSN1c2VvdXRsZXRjb250ZXh0XG4gKi9cblxuZnVuY3Rpb24gdXNlT3V0bGV0Q29udGV4dCgpIHtcbiAgcmV0dXJuIHVzZUNvbnRleHQoT3V0bGV0Q29udGV4dCk7XG59XG4vKipcbiAqIFJldHVybnMgdGhlIGVsZW1lbnQgZm9yIHRoZSBjaGlsZCByb3V0ZSBhdCB0aGlzIGxldmVsIG9mIHRoZSByb3V0ZVxuICogaGllcmFyY2h5LiBVc2VkIGludGVybmFsbHkgYnkgPE91dGxldD4gdG8gcmVuZGVyIGNoaWxkIHJvdXRlcy5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3Ryb3V0ZXIuY29tL2RvY3MvZW4vdjYvYXBpI3VzZW91dGxldFxuICovXG5cbmZ1bmN0aW9uIHVzZU91dGxldChjb250ZXh0KSB7XG4gIGxldCBvdXRsZXQgPSB1c2VDb250ZXh0KFJvdXRlQ29udGV4dCkub3V0bGV0O1xuXG4gIGlmIChvdXRsZXQpIHtcbiAgICByZXR1cm4gLyojX19QVVJFX18qL2NyZWF0ZUVsZW1lbnQoT3V0bGV0Q29udGV4dC5Qcm92aWRlciwge1xuICAgICAgdmFsdWU6IGNvbnRleHRcbiAgICB9LCBvdXRsZXQpO1xuICB9XG5cbiAgcmV0dXJuIG91dGxldDtcbn1cbi8qKlxuICogUmV0dXJucyBhbiBvYmplY3Qgb2Yga2V5L3ZhbHVlIHBhaXJzIG9mIHRoZSBkeW5hbWljIHBhcmFtcyBmcm9tIHRoZSBjdXJyZW50XG4gKiBVUkwgdGhhdCB3ZXJlIG1hdGNoZWQgYnkgdGhlIHJvdXRlIHBhdGguXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSN1c2VwYXJhbXNcbiAqL1xuXG5mdW5jdGlvbiB1c2VQYXJhbXMoKSB7XG4gIGxldCB7XG4gICAgbWF0Y2hlc1xuICB9ID0gdXNlQ29udGV4dChSb3V0ZUNvbnRleHQpO1xuICBsZXQgcm91dGVNYXRjaCA9IG1hdGNoZXNbbWF0Y2hlcy5sZW5ndGggLSAxXTtcbiAgcmV0dXJuIHJvdXRlTWF0Y2ggPyByb3V0ZU1hdGNoLnBhcmFtcyA6IHt9O1xufVxuLyoqXG4gKiBSZXNvbHZlcyB0aGUgcGF0aG5hbWUgb2YgdGhlIGdpdmVuIGB0b2AgdmFsdWUgYWdhaW5zdCB0aGUgY3VycmVudCBsb2NhdGlvbi5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3Ryb3V0ZXIuY29tL2RvY3MvZW4vdjYvYXBpI3VzZXJlc29sdmVkcGF0aFxuICovXG5cbmZ1bmN0aW9uIHVzZVJlc29sdmVkUGF0aCh0bykge1xuICBsZXQge1xuICAgIG1hdGNoZXNcbiAgfSA9IHVzZUNvbnRleHQoUm91dGVDb250ZXh0KTtcbiAgbGV0IHtcbiAgICBwYXRobmFtZTogbG9jYXRpb25QYXRobmFtZVxuICB9ID0gdXNlTG9jYXRpb24oKTtcbiAgbGV0IHJvdXRlUGF0aG5hbWVzSnNvbiA9IEpTT04uc3RyaW5naWZ5KG1hdGNoZXMubWFwKG1hdGNoID0+IG1hdGNoLnBhdGhuYW1lQmFzZSkpO1xuICByZXR1cm4gdXNlTWVtbygoKSA9PiByZXNvbHZlVG8odG8sIEpTT04ucGFyc2Uocm91dGVQYXRobmFtZXNKc29uKSwgbG9jYXRpb25QYXRobmFtZSksIFt0bywgcm91dGVQYXRobmFtZXNKc29uLCBsb2NhdGlvblBhdGhuYW1lXSk7XG59XG4vKipcbiAqIFJldHVybnMgdGhlIGVsZW1lbnQgb2YgdGhlIHJvdXRlIHRoYXQgbWF0Y2hlZCB0aGUgY3VycmVudCBsb2NhdGlvbiwgcHJlcGFyZWRcbiAqIHdpdGggdGhlIGNvcnJlY3QgY29udGV4dCB0byByZW5kZXIgdGhlIHJlbWFpbmRlciBvZiB0aGUgcm91dGUgdHJlZS4gUm91dGVcbiAqIGVsZW1lbnRzIGluIHRoZSB0cmVlIG11c3QgcmVuZGVyIGFuIDxPdXRsZXQ+IHRvIHJlbmRlciB0aGVpciBjaGlsZCByb3V0ZSdzXG4gKiBlbGVtZW50LlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjdXNlcm91dGVzXG4gKi9cblxuZnVuY3Rpb24gdXNlUm91dGVzKHJvdXRlcywgbG9jYXRpb25BcmcpIHtcbiAgIXVzZUluUm91dGVyQ29udGV4dCgpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAvLyBUT0RPOiBUaGlzIGVycm9yIGlzIHByb2JhYmx5IGJlY2F1c2UgdGhleSBzb21laG93IGhhdmUgMiB2ZXJzaW9ucyBvZiB0aGVcbiAgLy8gcm91dGVyIGxvYWRlZC4gV2UgY2FuIGhlbHAgdGhlbSB1bmRlcnN0YW5kIGhvdyB0byBhdm9pZCB0aGF0LlxuICBcInVzZVJvdXRlcygpIG1heSBiZSB1c2VkIG9ubHkgaW4gdGhlIGNvbnRleHQgb2YgYSA8Um91dGVyPiBjb21wb25lbnQuXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgbGV0IHtcbiAgICBtYXRjaGVzOiBwYXJlbnRNYXRjaGVzXG4gIH0gPSB1c2VDb250ZXh0KFJvdXRlQ29udGV4dCk7XG4gIGxldCByb3V0ZU1hdGNoID0gcGFyZW50TWF0Y2hlc1twYXJlbnRNYXRjaGVzLmxlbmd0aCAtIDFdO1xuICBsZXQgcGFyZW50UGFyYW1zID0gcm91dGVNYXRjaCA/IHJvdXRlTWF0Y2gucGFyYW1zIDoge307XG4gIGxldCBwYXJlbnRQYXRobmFtZSA9IHJvdXRlTWF0Y2ggPyByb3V0ZU1hdGNoLnBhdGhuYW1lIDogXCIvXCI7XG4gIGxldCBwYXJlbnRQYXRobmFtZUJhc2UgPSByb3V0ZU1hdGNoID8gcm91dGVNYXRjaC5wYXRobmFtZUJhc2UgOiBcIi9cIjtcbiAgbGV0IHBhcmVudFJvdXRlID0gcm91dGVNYXRjaCAmJiByb3V0ZU1hdGNoLnJvdXRlO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAvLyBZb3Ugd29uJ3QgZ2V0IGEgd2FybmluZyBhYm91dCAyIGRpZmZlcmVudCA8Um91dGVzPiB1bmRlciBhIDxSb3V0ZT5cbiAgICAvLyB3aXRob3V0IGEgdHJhaWxpbmcgKiwgYnV0IHRoaXMgaXMgYSBiZXN0LWVmZm9ydCB3YXJuaW5nIGFueXdheSBzaW5jZSB3ZVxuICAgIC8vIGNhbm5vdCBldmVuIGdpdmUgdGhlIHdhcm5pbmcgdW5sZXNzIHRoZXkgbGFuZCBhdCB0aGUgcGFyZW50IHJvdXRlLlxuICAgIC8vXG4gICAgLy8gRXhhbXBsZTpcbiAgICAvL1xuICAgIC8vIDxSb3V0ZXM+XG4gICAgLy8gICB7LyogVGhpcyByb3V0ZSBwYXRoIE1VU1QgZW5kIHdpdGggLyogYmVjYXVzZSBvdGhlcndpc2VcbiAgICAvLyAgICAgICBpdCB3aWxsIG5ldmVyIG1hdGNoIC9ibG9nL3Bvc3QvMTIzICovfVxuICAgIC8vICAgPFJvdXRlIHBhdGg9XCJibG9nXCIgZWxlbWVudD17PEJsb2cgLz59IC8+XG4gICAgLy8gICA8Um91dGUgcGF0aD1cImJsb2cvZmVlZFwiIGVsZW1lbnQ9ezxCbG9nRmVlZCAvPn0gLz5cbiAgICAvLyA8L1JvdXRlcz5cbiAgICAvL1xuICAgIC8vIGZ1bmN0aW9uIEJsb2coKSB7XG4gICAgLy8gICByZXR1cm4gKFxuICAgIC8vICAgICA8Um91dGVzPlxuICAgIC8vICAgICAgIDxSb3V0ZSBwYXRoPVwicG9zdC86aWRcIiBlbGVtZW50PXs8UG9zdCAvPn0gLz5cbiAgICAvLyAgICAgPC9Sb3V0ZXM+XG4gICAgLy8gICApO1xuICAgIC8vIH1cbiAgICBsZXQgcGFyZW50UGF0aCA9IHBhcmVudFJvdXRlICYmIHBhcmVudFJvdXRlLnBhdGggfHwgXCJcIjtcbiAgICB3YXJuaW5nT25jZShwYXJlbnRQYXRobmFtZSwgIXBhcmVudFJvdXRlIHx8IHBhcmVudFBhdGguZW5kc1dpdGgoXCIqXCIpLCBcIllvdSByZW5kZXJlZCBkZXNjZW5kYW50IDxSb3V0ZXM+IChvciBjYWxsZWQgYHVzZVJvdXRlcygpYCkgYXQgXCIgKyAoXCJcXFwiXCIgKyBwYXJlbnRQYXRobmFtZSArIFwiXFxcIiAodW5kZXIgPFJvdXRlIHBhdGg9XFxcIlwiICsgcGFyZW50UGF0aCArIFwiXFxcIj4pIGJ1dCB0aGUgXCIpICsgXCJwYXJlbnQgcm91dGUgcGF0aCBoYXMgbm8gdHJhaWxpbmcgXFxcIipcXFwiLiBUaGlzIG1lYW5zIGlmIHlvdSBuYXZpZ2F0ZSBcIiArIFwiZGVlcGVyLCB0aGUgcGFyZW50IHdvbid0IG1hdGNoIGFueW1vcmUgYW5kIHRoZXJlZm9yZSB0aGUgY2hpbGQgXCIgKyBcInJvdXRlcyB3aWxsIG5ldmVyIHJlbmRlci5cXG5cXG5cIiArIChcIlBsZWFzZSBjaGFuZ2UgdGhlIHBhcmVudCA8Um91dGUgcGF0aD1cXFwiXCIgKyBwYXJlbnRQYXRoICsgXCJcXFwiPiB0byA8Um91dGUgXCIpICsgKFwicGF0aD1cXFwiXCIgKyAocGFyZW50UGF0aCA9PT0gXCIvXCIgPyBcIipcIiA6IHBhcmVudFBhdGggKyBcIi8qXCIpICsgXCJcXFwiPi5cIikpO1xuICB9XG5cbiAgbGV0IGxvY2F0aW9uRnJvbUNvbnRleHQgPSB1c2VMb2NhdGlvbigpO1xuICBsZXQgbG9jYXRpb247XG5cbiAgaWYgKGxvY2F0aW9uQXJnKSB7XG4gICAgdmFyIF9wYXJzZWRMb2NhdGlvbkFyZyRwYTtcblxuICAgIGxldCBwYXJzZWRMb2NhdGlvbkFyZyA9IHR5cGVvZiBsb2NhdGlvbkFyZyA9PT0gXCJzdHJpbmdcIiA/IHBhcnNlUGF0aChsb2NhdGlvbkFyZykgOiBsb2NhdGlvbkFyZztcbiAgICAhKHBhcmVudFBhdGhuYW1lQmFzZSA9PT0gXCIvXCIgfHwgKChfcGFyc2VkTG9jYXRpb25BcmckcGEgPSBwYXJzZWRMb2NhdGlvbkFyZy5wYXRobmFtZSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9wYXJzZWRMb2NhdGlvbkFyZyRwYS5zdGFydHNXaXRoKHBhcmVudFBhdGhuYW1lQmFzZSkpKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJXaGVuIG92ZXJyaWRpbmcgdGhlIGxvY2F0aW9uIHVzaW5nIGA8Um91dGVzIGxvY2F0aW9uPmAgb3IgYHVzZVJvdXRlcyhyb3V0ZXMsIGxvY2F0aW9uKWAsIFwiICsgXCJ0aGUgbG9jYXRpb24gcGF0aG5hbWUgbXVzdCBiZWdpbiB3aXRoIHRoZSBwb3J0aW9uIG9mIHRoZSBVUkwgcGF0aG5hbWUgdGhhdCB3YXMgXCIgKyAoXCJtYXRjaGVkIGJ5IGFsbCBwYXJlbnQgcm91dGVzLiBUaGUgY3VycmVudCBwYXRobmFtZSBiYXNlIGlzIFxcXCJcIiArIHBhcmVudFBhdGhuYW1lQmFzZSArIFwiXFxcIiBcIikgKyAoXCJidXQgcGF0aG5hbWUgXFxcIlwiICsgcGFyc2VkTG9jYXRpb25BcmcucGF0aG5hbWUgKyBcIlxcXCIgd2FzIGdpdmVuIGluIHRoZSBgbG9jYXRpb25gIHByb3AuXCIpKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgbG9jYXRpb24gPSBwYXJzZWRMb2NhdGlvbkFyZztcbiAgfSBlbHNlIHtcbiAgICBsb2NhdGlvbiA9IGxvY2F0aW9uRnJvbUNvbnRleHQ7XG4gIH1cblxuICBsZXQgcGF0aG5hbWUgPSBsb2NhdGlvbi5wYXRobmFtZSB8fCBcIi9cIjtcbiAgbGV0IHJlbWFpbmluZ1BhdGhuYW1lID0gcGFyZW50UGF0aG5hbWVCYXNlID09PSBcIi9cIiA/IHBhdGhuYW1lIDogcGF0aG5hbWUuc2xpY2UocGFyZW50UGF0aG5hbWVCYXNlLmxlbmd0aCkgfHwgXCIvXCI7XG4gIGxldCBtYXRjaGVzID0gbWF0Y2hSb3V0ZXMocm91dGVzLCB7XG4gICAgcGF0aG5hbWU6IHJlbWFpbmluZ1BhdGhuYW1lXG4gIH0pO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHBhcmVudFJvdXRlIHx8IG1hdGNoZXMgIT0gbnVsbCwgXCJObyByb3V0ZXMgbWF0Y2hlZCBsb2NhdGlvbiBcXFwiXCIgKyBsb2NhdGlvbi5wYXRobmFtZSArIGxvY2F0aW9uLnNlYXJjaCArIGxvY2F0aW9uLmhhc2ggKyBcIlxcXCIgXCIpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcobWF0Y2hlcyA9PSBudWxsIHx8IG1hdGNoZXNbbWF0Y2hlcy5sZW5ndGggLSAxXS5yb3V0ZS5lbGVtZW50ICE9PSB1bmRlZmluZWQsIFwiTWF0Y2hlZCBsZWFmIHJvdXRlIGF0IGxvY2F0aW9uIFxcXCJcIiArIGxvY2F0aW9uLnBhdGhuYW1lICsgbG9jYXRpb24uc2VhcmNoICsgbG9jYXRpb24uaGFzaCArIFwiXFxcIiBkb2VzIG5vdCBoYXZlIGFuIGVsZW1lbnQuIFwiICsgXCJUaGlzIG1lYW5zIGl0IHdpbGwgcmVuZGVyIGFuIDxPdXRsZXQgLz4gd2l0aCBhIG51bGwgdmFsdWUgYnkgZGVmYXVsdCByZXN1bHRpbmcgaW4gYW4gXFxcImVtcHR5XFxcIiBwYWdlLlwiKSA6IHZvaWQgMDtcbiAgfVxuXG4gIHJldHVybiBfcmVuZGVyTWF0Y2hlcyhtYXRjaGVzICYmIG1hdGNoZXMubWFwKG1hdGNoID0+IE9iamVjdC5hc3NpZ24oe30sIG1hdGNoLCB7XG4gICAgcGFyYW1zOiBPYmplY3QuYXNzaWduKHt9LCBwYXJlbnRQYXJhbXMsIG1hdGNoLnBhcmFtcyksXG4gICAgcGF0aG5hbWU6IGpvaW5QYXRocyhbcGFyZW50UGF0aG5hbWVCYXNlLCBtYXRjaC5wYXRobmFtZV0pLFxuICAgIHBhdGhuYW1lQmFzZTogbWF0Y2gucGF0aG5hbWVCYXNlID09PSBcIi9cIiA/IHBhcmVudFBhdGhuYW1lQmFzZSA6IGpvaW5QYXRocyhbcGFyZW50UGF0aG5hbWVCYXNlLCBtYXRjaC5wYXRobmFtZUJhc2VdKVxuICB9KSksIHBhcmVudE1hdGNoZXMpO1xufVxuZnVuY3Rpb24gX3JlbmRlck1hdGNoZXMobWF0Y2hlcywgcGFyZW50TWF0Y2hlcykge1xuICBpZiAocGFyZW50TWF0Y2hlcyA9PT0gdm9pZCAwKSB7XG4gICAgcGFyZW50TWF0Y2hlcyA9IFtdO1xuICB9XG5cbiAgaWYgKG1hdGNoZXMgPT0gbnVsbCkgcmV0dXJuIG51bGw7XG4gIHJldHVybiBtYXRjaGVzLnJlZHVjZVJpZ2h0KChvdXRsZXQsIG1hdGNoLCBpbmRleCkgPT4ge1xuICAgIHJldHVybiAvKiNfX1BVUkVfXyovY3JlYXRlRWxlbWVudChSb3V0ZUNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgIGNoaWxkcmVuOiBtYXRjaC5yb3V0ZS5lbGVtZW50ICE9PSB1bmRlZmluZWQgPyBtYXRjaC5yb3V0ZS5lbGVtZW50IDogb3V0bGV0LFxuICAgICAgdmFsdWU6IHtcbiAgICAgICAgb3V0bGV0LFxuICAgICAgICBtYXRjaGVzOiBwYXJlbnRNYXRjaGVzLmNvbmNhdChtYXRjaGVzLnNsaWNlKDAsIGluZGV4ICsgMSkpXG4gICAgICB9XG4gICAgfSk7XG4gIH0sIG51bGwpO1xufVxuXG4vKipcbiAqIEEgPFJvdXRlcj4gdGhhdCBzdG9yZXMgYWxsIGVudHJpZXMgaW4gbWVtb3J5LlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjbWVtb3J5cm91dGVyXG4gKi9cbmZ1bmN0aW9uIE1lbW9yeVJvdXRlcihfcmVmKSB7XG4gIGxldCB7XG4gICAgYmFzZW5hbWUsXG4gICAgY2hpbGRyZW4sXG4gICAgaW5pdGlhbEVudHJpZXMsXG4gICAgaW5pdGlhbEluZGV4XG4gIH0gPSBfcmVmO1xuICBsZXQgaGlzdG9yeVJlZiA9IHVzZVJlZigpO1xuXG4gIGlmIChoaXN0b3J5UmVmLmN1cnJlbnQgPT0gbnVsbCkge1xuICAgIGhpc3RvcnlSZWYuY3VycmVudCA9IGNyZWF0ZU1lbW9yeUhpc3Rvcnkoe1xuICAgICAgaW5pdGlhbEVudHJpZXMsXG4gICAgICBpbml0aWFsSW5kZXhcbiAgICB9KTtcbiAgfVxuXG4gIGxldCBoaXN0b3J5ID0gaGlzdG9yeVJlZi5jdXJyZW50O1xuICBsZXQgW3N0YXRlLCBzZXRTdGF0ZV0gPSB1c2VTdGF0ZSh7XG4gICAgYWN0aW9uOiBoaXN0b3J5LmFjdGlvbixcbiAgICBsb2NhdGlvbjogaGlzdG9yeS5sb2NhdGlvblxuICB9KTtcbiAgdXNlTGF5b3V0RWZmZWN0KCgpID0+IGhpc3RvcnkubGlzdGVuKHNldFN0YXRlKSwgW2hpc3RvcnldKTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9jcmVhdGVFbGVtZW50KFJvdXRlciwge1xuICAgIGJhc2VuYW1lOiBiYXNlbmFtZSxcbiAgICBjaGlsZHJlbjogY2hpbGRyZW4sXG4gICAgbG9jYXRpb246IHN0YXRlLmxvY2F0aW9uLFxuICAgIG5hdmlnYXRpb25UeXBlOiBzdGF0ZS5hY3Rpb24sXG4gICAgbmF2aWdhdG9yOiBoaXN0b3J5XG4gIH0pO1xufVxuXG4vKipcbiAqIENoYW5nZXMgdGhlIGN1cnJlbnQgbG9jYXRpb24uXG4gKlxuICogTm90ZTogVGhpcyBBUEkgaXMgbW9zdGx5IHVzZWZ1bCBpbiBSZWFjdC5Db21wb25lbnQgc3ViY2xhc3NlcyB0aGF0IGFyZSBub3RcbiAqIGFibGUgdG8gdXNlIGhvb2tzLiBJbiBmdW5jdGlvbmFsIGNvbXBvbmVudHMsIHdlIHJlY29tbWVuZCB5b3UgdXNlIHRoZVxuICogYHVzZU5hdmlnYXRlYCBob29rIGluc3RlYWQuXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSNuYXZpZ2F0ZVxuICovXG5mdW5jdGlvbiBOYXZpZ2F0ZShfcmVmMikge1xuICBsZXQge1xuICAgIHRvLFxuICAgIHJlcGxhY2UsXG4gICAgc3RhdGVcbiAgfSA9IF9yZWYyO1xuICAhdXNlSW5Sb3V0ZXJDb250ZXh0KCkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIC8vIFRPRE86IFRoaXMgZXJyb3IgaXMgcHJvYmFibHkgYmVjYXVzZSB0aGV5IHNvbWVob3cgaGF2ZSAyIHZlcnNpb25zIG9mXG4gIC8vIHRoZSByb3V0ZXIgbG9hZGVkLiBXZSBjYW4gaGVscCB0aGVtIHVuZGVyc3RhbmQgaG93IHRvIGF2b2lkIHRoYXQuXG4gIFwiPE5hdmlnYXRlPiBtYXkgYmUgdXNlZCBvbmx5IGluIHRoZSBjb250ZXh0IG9mIGEgPFJvdXRlcj4gY29tcG9uZW50LlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIXVzZUNvbnRleHQoTmF2aWdhdGlvbkNvbnRleHQpLnN0YXRpYywgXCI8TmF2aWdhdGU+IG11c3Qgbm90IGJlIHVzZWQgb24gdGhlIGluaXRpYWwgcmVuZGVyIGluIGEgPFN0YXRpY1JvdXRlcj4uIFwiICsgXCJUaGlzIGlzIGEgbm8tb3AsIGJ1dCB5b3Ugc2hvdWxkIG1vZGlmeSB5b3VyIGNvZGUgc28gdGhlIDxOYXZpZ2F0ZT4gaXMgXCIgKyBcIm9ubHkgZXZlciByZW5kZXJlZCBpbiByZXNwb25zZSB0byBzb21lIHVzZXIgaW50ZXJhY3Rpb24gb3Igc3RhdGUgY2hhbmdlLlwiKSA6IHZvaWQgMDtcbiAgbGV0IG5hdmlnYXRlID0gdXNlTmF2aWdhdGUoKTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBuYXZpZ2F0ZSh0bywge1xuICAgICAgcmVwbGFjZSxcbiAgICAgIHN0YXRlXG4gICAgfSk7XG4gIH0pO1xuICByZXR1cm4gbnVsbDtcbn1cblxuLyoqXG4gKiBSZW5kZXJzIHRoZSBjaGlsZCByb3V0ZSdzIGVsZW1lbnQsIGlmIHRoZXJlIGlzIG9uZS5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3Ryb3V0ZXIuY29tL2RvY3MvZW4vdjYvYXBpI291dGxldFxuICovXG5mdW5jdGlvbiBPdXRsZXQocHJvcHMpIHtcbiAgcmV0dXJuIHVzZU91dGxldChwcm9wcy5jb250ZXh0KTtcbn1cblxuLyoqXG4gKiBEZWNsYXJlcyBhbiBlbGVtZW50IHRoYXQgc2hvdWxkIGJlIHJlbmRlcmVkIGF0IGEgY2VydGFpbiBVUkwgcGF0aC5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3Ryb3V0ZXIuY29tL2RvY3MvZW4vdjYvYXBpI3JvdXRlXG4gKi9cbmZ1bmN0aW9uIFJvdXRlKF9wcm9wcykge1xuICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIkEgPFJvdXRlPiBpcyBvbmx5IGV2ZXIgdG8gYmUgdXNlZCBhcyB0aGUgY2hpbGQgb2YgPFJvdXRlcz4gZWxlbWVudCwgXCIgKyBcIm5ldmVyIHJlbmRlcmVkIGRpcmVjdGx5LiBQbGVhc2Ugd3JhcCB5b3VyIDxSb3V0ZT4gaW4gYSA8Um91dGVzPi5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDtcbn1cblxuLyoqXG4gKiBQcm92aWRlcyBsb2NhdGlvbiBjb250ZXh0IGZvciB0aGUgcmVzdCBvZiB0aGUgYXBwLlxuICpcbiAqIE5vdGU6IFlvdSB1c3VhbGx5IHdvbid0IHJlbmRlciBhIDxSb3V0ZXI+IGRpcmVjdGx5LiBJbnN0ZWFkLCB5b3UnbGwgcmVuZGVyIGFcbiAqIHJvdXRlciB0aGF0IGlzIG1vcmUgc3BlY2lmaWMgdG8geW91ciBlbnZpcm9ubWVudCBzdWNoIGFzIGEgPEJyb3dzZXJSb3V0ZXI+XG4gKiBpbiB3ZWIgYnJvd3NlcnMgb3IgYSA8U3RhdGljUm91dGVyPiBmb3Igc2VydmVyIHJlbmRlcmluZy5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3Ryb3V0ZXIuY29tL2RvY3MvZW4vdjYvYXBpI3JvdXRlclxuICovXG5mdW5jdGlvbiBSb3V0ZXIoX3JlZjMpIHtcbiAgbGV0IHtcbiAgICBiYXNlbmFtZTogYmFzZW5hbWVQcm9wID0gXCIvXCIsXG4gICAgY2hpbGRyZW4gPSBudWxsLFxuICAgIGxvY2F0aW9uOiBsb2NhdGlvblByb3AsXG4gICAgbmF2aWdhdGlvblR5cGUgPSBBY3Rpb24uUG9wLFxuICAgIG5hdmlnYXRvcixcbiAgICBzdGF0aWM6IHN0YXRpY1Byb3AgPSBmYWxzZVxuICB9ID0gX3JlZjM7XG4gICEhdXNlSW5Sb3V0ZXJDb250ZXh0KCkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IGNhbm5vdCByZW5kZXIgYSA8Um91dGVyPiBpbnNpZGUgYW5vdGhlciA8Um91dGVyPi5cIiArIFwiIFlvdSBzaG91bGQgbmV2ZXIgaGF2ZSBtb3JlIHRoYW4gb25lIGluIHlvdXIgYXBwLlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIGxldCBiYXNlbmFtZSA9IG5vcm1hbGl6ZVBhdGhuYW1lKGJhc2VuYW1lUHJvcCk7XG4gIGxldCBuYXZpZ2F0aW9uQ29udGV4dCA9IHVzZU1lbW8oKCkgPT4gKHtcbiAgICBiYXNlbmFtZSxcbiAgICBuYXZpZ2F0b3IsXG4gICAgc3RhdGljOiBzdGF0aWNQcm9wXG4gIH0pLCBbYmFzZW5hbWUsIG5hdmlnYXRvciwgc3RhdGljUHJvcF0pO1xuXG4gIGlmICh0eXBlb2YgbG9jYXRpb25Qcm9wID09PSBcInN0cmluZ1wiKSB7XG4gICAgbG9jYXRpb25Qcm9wID0gcGFyc2VQYXRoKGxvY2F0aW9uUHJvcCk7XG4gIH1cblxuICBsZXQge1xuICAgIHBhdGhuYW1lID0gXCIvXCIsXG4gICAgc2VhcmNoID0gXCJcIixcbiAgICBoYXNoID0gXCJcIixcbiAgICBzdGF0ZSA9IG51bGwsXG4gICAga2V5ID0gXCJkZWZhdWx0XCJcbiAgfSA9IGxvY2F0aW9uUHJvcDtcbiAgbGV0IGxvY2F0aW9uID0gdXNlTWVtbygoKSA9PiB7XG4gICAgbGV0IHRyYWlsaW5nUGF0aG5hbWUgPSBzdHJpcEJhc2VuYW1lKHBhdGhuYW1lLCBiYXNlbmFtZSk7XG5cbiAgICBpZiAodHJhaWxpbmdQYXRobmFtZSA9PSBudWxsKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgcGF0aG5hbWU6IHRyYWlsaW5nUGF0aG5hbWUsXG4gICAgICBzZWFyY2gsXG4gICAgICBoYXNoLFxuICAgICAgc3RhdGUsXG4gICAgICBrZXlcbiAgICB9O1xuICB9LCBbYmFzZW5hbWUsIHBhdGhuYW1lLCBzZWFyY2gsIGhhc2gsIHN0YXRlLCBrZXldKTtcbiAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhsb2NhdGlvbiAhPSBudWxsLCBcIjxSb3V0ZXIgYmFzZW5hbWU9XFxcIlwiICsgYmFzZW5hbWUgKyBcIlxcXCI+IGlzIG5vdCBhYmxlIHRvIG1hdGNoIHRoZSBVUkwgXCIgKyAoXCJcXFwiXCIgKyBwYXRobmFtZSArIHNlYXJjaCArIGhhc2ggKyBcIlxcXCIgYmVjYXVzZSBpdCBkb2VzIG5vdCBzdGFydCB3aXRoIHRoZSBcIikgKyBcImJhc2VuYW1lLCBzbyB0aGUgPFJvdXRlcj4gd29uJ3QgcmVuZGVyIGFueXRoaW5nLlwiKSA6IHZvaWQgMDtcblxuICBpZiAobG9jYXRpb24gPT0gbnVsbCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9jcmVhdGVFbGVtZW50KE5hdmlnYXRpb25Db250ZXh0LlByb3ZpZGVyLCB7XG4gICAgdmFsdWU6IG5hdmlnYXRpb25Db250ZXh0XG4gIH0sIC8qI19fUFVSRV9fKi9jcmVhdGVFbGVtZW50KExvY2F0aW9uQ29udGV4dC5Qcm92aWRlciwge1xuICAgIGNoaWxkcmVuOiBjaGlsZHJlbixcbiAgICB2YWx1ZToge1xuICAgICAgbG9jYXRpb24sXG4gICAgICBuYXZpZ2F0aW9uVHlwZVxuICAgIH1cbiAgfSkpO1xufVxuXG4vKipcbiAqIEEgY29udGFpbmVyIGZvciBhIG5lc3RlZCB0cmVlIG9mIDxSb3V0ZT4gZWxlbWVudHMgdGhhdCByZW5kZXJzIHRoZSBicmFuY2hcbiAqIHRoYXQgYmVzdCBtYXRjaGVzIHRoZSBjdXJyZW50IGxvY2F0aW9uLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjcm91dGVzXG4gKi9cbmZ1bmN0aW9uIFJvdXRlcyhfcmVmNCkge1xuICBsZXQge1xuICAgIGNoaWxkcmVuLFxuICAgIGxvY2F0aW9uXG4gIH0gPSBfcmVmNDtcbiAgcmV0dXJuIHVzZVJvdXRlcyhjcmVhdGVSb3V0ZXNGcm9tQ2hpbGRyZW4oY2hpbGRyZW4pLCBsb2NhdGlvbik7XG59IC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFVUSUxTXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbi8qKlxuICogQ3JlYXRlcyBhIHJvdXRlIGNvbmZpZyBmcm9tIGEgUmVhY3QgXCJjaGlsZHJlblwiIG9iamVjdCwgd2hpY2ggaXMgdXN1YWxseVxuICogZWl0aGVyIGEgYDxSb3V0ZT5gIGVsZW1lbnQgb3IgYW4gYXJyYXkgb2YgdGhlbS4gVXNlZCBpbnRlcm5hbGx5IGJ5XG4gKiBgPFJvdXRlcz5gIHRvIGNyZWF0ZSBhIHJvdXRlIGNvbmZpZyBmcm9tIGl0cyBjaGlsZHJlbi5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3Ryb3V0ZXIuY29tL2RvY3MvZW4vdjYvYXBpI2NyZWF0ZXJvdXRlc2Zyb21jaGlsZHJlblxuICovXG5cbmZ1bmN0aW9uIGNyZWF0ZVJvdXRlc0Zyb21DaGlsZHJlbihjaGlsZHJlbikge1xuICBsZXQgcm91dGVzID0gW107XG4gIENoaWxkcmVuLmZvckVhY2goY2hpbGRyZW4sIGVsZW1lbnQgPT4ge1xuICAgIGlmICghIC8qI19fUFVSRV9fKi9pc1ZhbGlkRWxlbWVudChlbGVtZW50KSkge1xuICAgICAgLy8gSWdub3JlIG5vbi1lbGVtZW50cy4gVGhpcyBhbGxvd3MgcGVvcGxlIHRvIG1vcmUgZWFzaWx5IGlubGluZVxuICAgICAgLy8gY29uZGl0aW9uYWxzIGluIHRoZWlyIHJvdXRlIGNvbmZpZy5cbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoZWxlbWVudC50eXBlID09PSBGcmFnbWVudCkge1xuICAgICAgLy8gVHJhbnNwYXJlbnRseSBzdXBwb3J0IFJlYWN0LkZyYWdtZW50IGFuZCBpdHMgY2hpbGRyZW4uXG4gICAgICByb3V0ZXMucHVzaC5hcHBseShyb3V0ZXMsIGNyZWF0ZVJvdXRlc0Zyb21DaGlsZHJlbihlbGVtZW50LnByb3BzLmNoaWxkcmVuKSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgIShlbGVtZW50LnR5cGUgPT09IFJvdXRlKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJbXCIgKyAodHlwZW9mIGVsZW1lbnQudHlwZSA9PT0gXCJzdHJpbmdcIiA/IGVsZW1lbnQudHlwZSA6IGVsZW1lbnQudHlwZS5uYW1lKSArIFwiXSBpcyBub3QgYSA8Um91dGU+IGNvbXBvbmVudC4gQWxsIGNvbXBvbmVudCBjaGlsZHJlbiBvZiA8Um91dGVzPiBtdXN0IGJlIGEgPFJvdXRlPiBvciA8UmVhY3QuRnJhZ21lbnQ+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICBsZXQgcm91dGUgPSB7XG4gICAgICBjYXNlU2Vuc2l0aXZlOiBlbGVtZW50LnByb3BzLmNhc2VTZW5zaXRpdmUsXG4gICAgICBlbGVtZW50OiBlbGVtZW50LnByb3BzLmVsZW1lbnQsXG4gICAgICBpbmRleDogZWxlbWVudC5wcm9wcy5pbmRleCxcbiAgICAgIHBhdGg6IGVsZW1lbnQucHJvcHMucGF0aFxuICAgIH07XG5cbiAgICBpZiAoZWxlbWVudC5wcm9wcy5jaGlsZHJlbikge1xuICAgICAgcm91dGUuY2hpbGRyZW4gPSBjcmVhdGVSb3V0ZXNGcm9tQ2hpbGRyZW4oZWxlbWVudC5wcm9wcy5jaGlsZHJlbik7XG4gICAgfVxuXG4gICAgcm91dGVzLnB1c2gocm91dGUpO1xuICB9KTtcbiAgcmV0dXJuIHJvdXRlcztcbn1cbi8qKlxuICogUmVuZGVycyB0aGUgcmVzdWx0IG9mIGBtYXRjaFJvdXRlcygpYCBpbnRvIGEgUmVhY3QgZWxlbWVudC5cbiAqL1xuXG5mdW5jdGlvbiByZW5kZXJNYXRjaGVzKG1hdGNoZXMpIHtcbiAgcmV0dXJuIF9yZW5kZXJNYXRjaGVzKG1hdGNoZXMpO1xufVxuXG5leHBvcnQgeyBNZW1vcnlSb3V0ZXIsIE5hdmlnYXRlLCBPdXRsZXQsIFJvdXRlLCBSb3V0ZXIsIFJvdXRlcywgTG9jYXRpb25Db250ZXh0IGFzIFVOU0FGRV9Mb2NhdGlvbkNvbnRleHQsIE5hdmlnYXRpb25Db250ZXh0IGFzIFVOU0FGRV9OYXZpZ2F0aW9uQ29udGV4dCwgUm91dGVDb250ZXh0IGFzIFVOU0FGRV9Sb3V0ZUNvbnRleHQsIGNyZWF0ZVJvdXRlc0Zyb21DaGlsZHJlbiwgZ2VuZXJhdGVQYXRoLCBtYXRjaFBhdGgsIG1hdGNoUm91dGVzLCByZW5kZXJNYXRjaGVzLCByZXNvbHZlUGF0aCwgdXNlSHJlZiwgdXNlSW5Sb3V0ZXJDb250ZXh0LCB1c2VMb2NhdGlvbiwgdXNlTWF0Y2gsIHVzZU5hdmlnYXRlLCB1c2VOYXZpZ2F0aW9uVHlwZSwgdXNlT3V0bGV0LCB1c2VPdXRsZXRDb250ZXh0LCB1c2VQYXJhbXMsIHVzZVJlc29sdmVkUGF0aCwgdXNlUm91dGVzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiIsIi8qKlxuICogUmVhY3QgUm91dGVyIERPTSB2Ni4zLjBcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIFJlbWl4IFNvZnR3YXJlIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UubWQgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAbGljZW5zZSBNSVRcbiAqL1xuaW1wb3J0IHsgdXNlUmVmLCB1c2VTdGF0ZSwgdXNlTGF5b3V0RWZmZWN0LCBjcmVhdGVFbGVtZW50LCBmb3J3YXJkUmVmLCB1c2VDYWxsYmFjaywgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNyZWF0ZUJyb3dzZXJIaXN0b3J5LCBjcmVhdGVIYXNoSGlzdG9yeSB9IGZyb20gJ2hpc3RvcnknO1xuaW1wb3J0IHsgUm91dGVyLCB1c2VIcmVmLCBjcmVhdGVQYXRoLCB1c2VMb2NhdGlvbiwgdXNlUmVzb2x2ZWRQYXRoLCB1c2VOYXZpZ2F0ZSB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5leHBvcnQgeyBNZW1vcnlSb3V0ZXIsIE5hdmlnYXRlLCBOYXZpZ2F0aW9uVHlwZSwgT3V0bGV0LCBSb3V0ZSwgUm91dGVyLCBSb3V0ZXMsIFVOU0FGRV9Mb2NhdGlvbkNvbnRleHQsIFVOU0FGRV9OYXZpZ2F0aW9uQ29udGV4dCwgVU5TQUZFX1JvdXRlQ29udGV4dCwgY3JlYXRlUGF0aCwgY3JlYXRlUm91dGVzRnJvbUNoaWxkcmVuLCBnZW5lcmF0ZVBhdGgsIG1hdGNoUGF0aCwgbWF0Y2hSb3V0ZXMsIHBhcnNlUGF0aCwgcmVuZGVyTWF0Y2hlcywgcmVzb2x2ZVBhdGgsIHVzZUhyZWYsIHVzZUluUm91dGVyQ29udGV4dCwgdXNlTG9jYXRpb24sIHVzZU1hdGNoLCB1c2VOYXZpZ2F0ZSwgdXNlTmF2aWdhdGlvblR5cGUsIHVzZU91dGxldCwgdXNlT3V0bGV0Q29udGV4dCwgdXNlUGFyYW1zLCB1c2VSZXNvbHZlZFBhdGgsIHVzZVJvdXRlcyB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5cbmZ1bmN0aW9uIF9leHRlbmRzKCkge1xuICBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuXG4gICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXQ7XG4gIH07XG5cbiAgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59XG5cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpIHtcbiAgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307XG4gIHZhciB0YXJnZXQgPSB7fTtcbiAgdmFyIHNvdXJjZUtleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpO1xuICB2YXIga2V5LCBpO1xuXG4gIGZvciAoaSA9IDA7IGkgPCBzb3VyY2VLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAga2V5ID0gc291cmNlS2V5c1tpXTtcbiAgICBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlO1xuICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0O1xufVxuXG5jb25zdCBfZXhjbHVkZWQgPSBbXCJvbkNsaWNrXCIsIFwicmVsb2FkRG9jdW1lbnRcIiwgXCJyZXBsYWNlXCIsIFwic3RhdGVcIiwgXCJ0YXJnZXRcIiwgXCJ0b1wiXSxcbiAgICAgIF9leGNsdWRlZDIgPSBbXCJhcmlhLWN1cnJlbnRcIiwgXCJjYXNlU2Vuc2l0aXZlXCIsIFwiY2xhc3NOYW1lXCIsIFwiZW5kXCIsIFwic3R5bGVcIiwgXCJ0b1wiLCBcImNoaWxkcmVuXCJdO1xuXG5mdW5jdGlvbiB3YXJuaW5nKGNvbmQsIG1lc3NhZ2UpIHtcbiAgaWYgKCFjb25kKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICBpZiAodHlwZW9mIGNvbnNvbGUgIT09IFwidW5kZWZpbmVkXCIpIGNvbnNvbGUud2FybihtZXNzYWdlKTtcblxuICAgIHRyeSB7XG4gICAgICAvLyBXZWxjb21lIHRvIGRlYnVnZ2luZyBSZWFjdCBSb3V0ZXIhXG4gICAgICAvL1xuICAgICAgLy8gVGhpcyBlcnJvciBpcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB5b3UgY2FuIG1vcmUgZWFzaWx5XG4gICAgICAvLyBmaW5kIHRoZSBzb3VyY2UgZm9yIGEgd2FybmluZyB0aGF0IGFwcGVhcnMgaW4gdGhlIGNvbnNvbGUgYnlcbiAgICAgIC8vIGVuYWJsaW5nIFwicGF1c2Ugb24gZXhjZXB0aW9uc1wiIGluIHlvdXIgSmF2YVNjcmlwdCBkZWJ1Z2dlci5cbiAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWVtcHR5XG4gICAgfSBjYXRjaCAoZSkge31cbiAgfVxufSAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gQ09NUE9ORU5UU1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuLyoqXG4gKiBBIGA8Um91dGVyPmAgZm9yIHVzZSBpbiB3ZWIgYnJvd3NlcnMuIFByb3ZpZGVzIHRoZSBjbGVhbmVzdCBVUkxzLlxuICovXG5mdW5jdGlvbiBCcm93c2VyUm91dGVyKF9yZWYpIHtcbiAgbGV0IHtcbiAgICBiYXNlbmFtZSxcbiAgICBjaGlsZHJlbixcbiAgICB3aW5kb3dcbiAgfSA9IF9yZWY7XG4gIGxldCBoaXN0b3J5UmVmID0gdXNlUmVmKCk7XG5cbiAgaWYgKGhpc3RvcnlSZWYuY3VycmVudCA9PSBudWxsKSB7XG4gICAgaGlzdG9yeVJlZi5jdXJyZW50ID0gY3JlYXRlQnJvd3Nlckhpc3Rvcnkoe1xuICAgICAgd2luZG93XG4gICAgfSk7XG4gIH1cblxuICBsZXQgaGlzdG9yeSA9IGhpc3RvcnlSZWYuY3VycmVudDtcbiAgbGV0IFtzdGF0ZSwgc2V0U3RhdGVdID0gdXNlU3RhdGUoe1xuICAgIGFjdGlvbjogaGlzdG9yeS5hY3Rpb24sXG4gICAgbG9jYXRpb246IGhpc3RvcnkubG9jYXRpb25cbiAgfSk7XG4gIHVzZUxheW91dEVmZmVjdCgoKSA9PiBoaXN0b3J5Lmxpc3RlbihzZXRTdGF0ZSksIFtoaXN0b3J5XSk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcbiAgICBiYXNlbmFtZTogYmFzZW5hbWUsXG4gICAgY2hpbGRyZW46IGNoaWxkcmVuLFxuICAgIGxvY2F0aW9uOiBzdGF0ZS5sb2NhdGlvbixcbiAgICBuYXZpZ2F0aW9uVHlwZTogc3RhdGUuYWN0aW9uLFxuICAgIG5hdmlnYXRvcjogaGlzdG9yeVxuICB9KTtcbn1cblxuLyoqXG4gKiBBIGA8Um91dGVyPmAgZm9yIHVzZSBpbiB3ZWIgYnJvd3NlcnMuIFN0b3JlcyB0aGUgbG9jYXRpb24gaW4gdGhlIGhhc2hcbiAqIHBvcnRpb24gb2YgdGhlIFVSTCBzbyBpdCBpcyBub3Qgc2VudCB0byB0aGUgc2VydmVyLlxuICovXG5mdW5jdGlvbiBIYXNoUm91dGVyKF9yZWYyKSB7XG4gIGxldCB7XG4gICAgYmFzZW5hbWUsXG4gICAgY2hpbGRyZW4sXG4gICAgd2luZG93XG4gIH0gPSBfcmVmMjtcbiAgbGV0IGhpc3RvcnlSZWYgPSB1c2VSZWYoKTtcblxuICBpZiAoaGlzdG9yeVJlZi5jdXJyZW50ID09IG51bGwpIHtcbiAgICBoaXN0b3J5UmVmLmN1cnJlbnQgPSBjcmVhdGVIYXNoSGlzdG9yeSh7XG4gICAgICB3aW5kb3dcbiAgICB9KTtcbiAgfVxuXG4gIGxldCBoaXN0b3J5ID0gaGlzdG9yeVJlZi5jdXJyZW50O1xuICBsZXQgW3N0YXRlLCBzZXRTdGF0ZV0gPSB1c2VTdGF0ZSh7XG4gICAgYWN0aW9uOiBoaXN0b3J5LmFjdGlvbixcbiAgICBsb2NhdGlvbjogaGlzdG9yeS5sb2NhdGlvblxuICB9KTtcbiAgdXNlTGF5b3V0RWZmZWN0KCgpID0+IGhpc3RvcnkubGlzdGVuKHNldFN0YXRlKSwgW2hpc3RvcnldKTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9jcmVhdGVFbGVtZW50KFJvdXRlciwge1xuICAgIGJhc2VuYW1lOiBiYXNlbmFtZSxcbiAgICBjaGlsZHJlbjogY2hpbGRyZW4sXG4gICAgbG9jYXRpb246IHN0YXRlLmxvY2F0aW9uLFxuICAgIG5hdmlnYXRpb25UeXBlOiBzdGF0ZS5hY3Rpb24sXG4gICAgbmF2aWdhdG9yOiBoaXN0b3J5XG4gIH0pO1xufVxuXG4vKipcbiAqIEEgYDxSb3V0ZXI+YCB0aGF0IGFjY2VwdHMgYSBwcmUtaW5zdGFudGlhdGVkIGhpc3Rvcnkgb2JqZWN0LiBJdCdzIGltcG9ydGFudFxuICogdG8gbm90ZSB0aGF0IHVzaW5nIHlvdXIgb3duIGhpc3Rvcnkgb2JqZWN0IGlzIGhpZ2hseSBkaXNjb3VyYWdlZCBhbmQgbWF5IGFkZFxuICogdHdvIHZlcnNpb25zIG9mIHRoZSBoaXN0b3J5IGxpYnJhcnkgdG8geW91ciBidW5kbGVzIHVubGVzcyB5b3UgdXNlIHRoZSBzYW1lXG4gKiB2ZXJzaW9uIG9mIHRoZSBoaXN0b3J5IGxpYnJhcnkgdGhhdCBSZWFjdCBSb3V0ZXIgdXNlcyBpbnRlcm5hbGx5LlxuICovXG5mdW5jdGlvbiBIaXN0b3J5Um91dGVyKF9yZWYzKSB7XG4gIGxldCB7XG4gICAgYmFzZW5hbWUsXG4gICAgY2hpbGRyZW4sXG4gICAgaGlzdG9yeVxuICB9ID0gX3JlZjM7XG4gIGNvbnN0IFtzdGF0ZSwgc2V0U3RhdGVdID0gdXNlU3RhdGUoe1xuICAgIGFjdGlvbjogaGlzdG9yeS5hY3Rpb24sXG4gICAgbG9jYXRpb246IGhpc3RvcnkubG9jYXRpb25cbiAgfSk7XG4gIHVzZUxheW91dEVmZmVjdCgoKSA9PiBoaXN0b3J5Lmxpc3RlbihzZXRTdGF0ZSksIFtoaXN0b3J5XSk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcbiAgICBiYXNlbmFtZTogYmFzZW5hbWUsXG4gICAgY2hpbGRyZW46IGNoaWxkcmVuLFxuICAgIGxvY2F0aW9uOiBzdGF0ZS5sb2NhdGlvbixcbiAgICBuYXZpZ2F0aW9uVHlwZTogc3RhdGUuYWN0aW9uLFxuICAgIG5hdmlnYXRvcjogaGlzdG9yeVxuICB9KTtcbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBIaXN0b3J5Um91dGVyLmRpc3BsYXlOYW1lID0gXCJ1bnN0YWJsZV9IaXN0b3J5Um91dGVyXCI7XG59XG5cbmZ1bmN0aW9uIGlzTW9kaWZpZWRFdmVudChldmVudCkge1xuICByZXR1cm4gISEoZXZlbnQubWV0YUtleSB8fCBldmVudC5hbHRLZXkgfHwgZXZlbnQuY3RybEtleSB8fCBldmVudC5zaGlmdEtleSk7XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHJlbmRlcmluZyBhIGhpc3RvcnktYXdhcmUgPGE+LlxuICovXG5jb25zdCBMaW5rID0gLyojX19QVVJFX18qL2ZvcndhcmRSZWYoZnVuY3Rpb24gTGlua1dpdGhSZWYoX3JlZjQsIHJlZikge1xuICBsZXQge1xuICAgIG9uQ2xpY2ssXG4gICAgcmVsb2FkRG9jdW1lbnQsXG4gICAgcmVwbGFjZSA9IGZhbHNlLFxuICAgIHN0YXRlLFxuICAgIHRhcmdldCxcbiAgICB0b1xuICB9ID0gX3JlZjQsXG4gICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZjQsIF9leGNsdWRlZCk7XG5cbiAgbGV0IGhyZWYgPSB1c2VIcmVmKHRvKTtcbiAgbGV0IGludGVybmFsT25DbGljayA9IHVzZUxpbmtDbGlja0hhbmRsZXIodG8sIHtcbiAgICByZXBsYWNlLFxuICAgIHN0YXRlLFxuICAgIHRhcmdldFxuICB9KTtcblxuICBmdW5jdGlvbiBoYW5kbGVDbGljayhldmVudCkge1xuICAgIGlmIChvbkNsaWNrKSBvbkNsaWNrKGV2ZW50KTtcblxuICAgIGlmICghZXZlbnQuZGVmYXVsdFByZXZlbnRlZCAmJiAhcmVsb2FkRG9jdW1lbnQpIHtcbiAgICAgIGludGVybmFsT25DbGljayhldmVudCk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIChcbiAgICAvKiNfX1BVUkVfXyovXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGpzeC1hMTF5L2FuY2hvci1oYXMtY29udGVudFxuICAgIGNyZWF0ZUVsZW1lbnQoXCJhXCIsIF9leHRlbmRzKHt9LCByZXN0LCB7XG4gICAgICBocmVmOiBocmVmLFxuICAgICAgb25DbGljazogaGFuZGxlQ2xpY2ssXG4gICAgICByZWY6IHJlZixcbiAgICAgIHRhcmdldDogdGFyZ2V0XG4gICAgfSkpXG4gICk7XG59KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBMaW5rLmRpc3BsYXlOYW1lID0gXCJMaW5rXCI7XG59XG5cbi8qKlxuICogQSA8TGluaz4gd3JhcHBlciB0aGF0IGtub3dzIGlmIGl0J3MgXCJhY3RpdmVcIiBvciBub3QuXG4gKi9cbmNvbnN0IE5hdkxpbmsgPSAvKiNfX1BVUkVfXyovZm9yd2FyZFJlZihmdW5jdGlvbiBOYXZMaW5rV2l0aFJlZihfcmVmNSwgcmVmKSB7XG4gIGxldCB7XG4gICAgXCJhcmlhLWN1cnJlbnRcIjogYXJpYUN1cnJlbnRQcm9wID0gXCJwYWdlXCIsXG4gICAgY2FzZVNlbnNpdGl2ZSA9IGZhbHNlLFxuICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lUHJvcCA9IFwiXCIsXG4gICAgZW5kID0gZmFsc2UsXG4gICAgc3R5bGU6IHN0eWxlUHJvcCxcbiAgICB0byxcbiAgICBjaGlsZHJlblxuICB9ID0gX3JlZjUsXG4gICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZjUsIF9leGNsdWRlZDIpO1xuXG4gIGxldCBsb2NhdGlvbiA9IHVzZUxvY2F0aW9uKCk7XG4gIGxldCBwYXRoID0gdXNlUmVzb2x2ZWRQYXRoKHRvKTtcbiAgbGV0IGxvY2F0aW9uUGF0aG5hbWUgPSBsb2NhdGlvbi5wYXRobmFtZTtcbiAgbGV0IHRvUGF0aG5hbWUgPSBwYXRoLnBhdGhuYW1lO1xuXG4gIGlmICghY2FzZVNlbnNpdGl2ZSkge1xuICAgIGxvY2F0aW9uUGF0aG5hbWUgPSBsb2NhdGlvblBhdGhuYW1lLnRvTG93ZXJDYXNlKCk7XG4gICAgdG9QYXRobmFtZSA9IHRvUGF0aG5hbWUudG9Mb3dlckNhc2UoKTtcbiAgfVxuXG4gIGxldCBpc0FjdGl2ZSA9IGxvY2F0aW9uUGF0aG5hbWUgPT09IHRvUGF0aG5hbWUgfHwgIWVuZCAmJiBsb2NhdGlvblBhdGhuYW1lLnN0YXJ0c1dpdGgodG9QYXRobmFtZSkgJiYgbG9jYXRpb25QYXRobmFtZS5jaGFyQXQodG9QYXRobmFtZS5sZW5ndGgpID09PSBcIi9cIjtcbiAgbGV0IGFyaWFDdXJyZW50ID0gaXNBY3RpdmUgPyBhcmlhQ3VycmVudFByb3AgOiB1bmRlZmluZWQ7XG4gIGxldCBjbGFzc05hbWU7XG5cbiAgaWYgKHR5cGVvZiBjbGFzc05hbWVQcm9wID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICBjbGFzc05hbWUgPSBjbGFzc05hbWVQcm9wKHtcbiAgICAgIGlzQWN0aXZlXG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgLy8gSWYgdGhlIGNsYXNzTmFtZSBwcm9wIGlzIG5vdCBhIGZ1bmN0aW9uLCB3ZSB1c2UgYSBkZWZhdWx0IGBhY3RpdmVgXG4gICAgLy8gY2xhc3MgZm9yIDxOYXZMaW5rIC8+cyB0aGF0IGFyZSBhY3RpdmUuIEluIHY1IGBhY3RpdmVgIHdhcyB0aGUgZGVmYXVsdFxuICAgIC8vIHZhbHVlIGZvciBgYWN0aXZlQ2xhc3NOYW1lYCwgYnV0IHdlIGFyZSByZW1vdmluZyB0aGF0IEFQSSBhbmQgY2FuIHN0aWxsXG4gICAgLy8gdXNlIHRoZSBvbGQgZGVmYXVsdCBiZWhhdmlvciBmb3IgYSBjbGVhbmVyIHVwZ3JhZGUgcGF0aCBhbmQga2VlcCB0aGVcbiAgICAvLyBzaW1wbGUgc3R5bGluZyBydWxlcyB3b3JraW5nIGFzIHRoZXkgY3VycmVudGx5IGRvLlxuICAgIGNsYXNzTmFtZSA9IFtjbGFzc05hbWVQcm9wLCBpc0FjdGl2ZSA/IFwiYWN0aXZlXCIgOiBudWxsXS5maWx0ZXIoQm9vbGVhbikuam9pbihcIiBcIik7XG4gIH1cblxuICBsZXQgc3R5bGUgPSB0eXBlb2Ygc3R5bGVQcm9wID09PSBcImZ1bmN0aW9uXCIgPyBzdHlsZVByb3Aoe1xuICAgIGlzQWN0aXZlXG4gIH0pIDogc3R5bGVQcm9wO1xuICByZXR1cm4gLyojX19QVVJFX18qL2NyZWF0ZUVsZW1lbnQoTGluaywgX2V4dGVuZHMoe30sIHJlc3QsIHtcbiAgICBcImFyaWEtY3VycmVudFwiOiBhcmlhQ3VycmVudCxcbiAgICBjbGFzc05hbWU6IGNsYXNzTmFtZSxcbiAgICByZWY6IHJlZixcbiAgICBzdHlsZTogc3R5bGUsXG4gICAgdG86IHRvXG4gIH0pLCB0eXBlb2YgY2hpbGRyZW4gPT09IFwiZnVuY3Rpb25cIiA/IGNoaWxkcmVuKHtcbiAgICBpc0FjdGl2ZVxuICB9KSA6IGNoaWxkcmVuKTtcbn0pO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIE5hdkxpbmsuZGlzcGxheU5hbWUgPSBcIk5hdkxpbmtcIjtcbn0gLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIEhPT0tTXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG4vKipcbiAqIEhhbmRsZXMgdGhlIGNsaWNrIGJlaGF2aW9yIGZvciByb3V0ZXIgYDxMaW5rPmAgY29tcG9uZW50cy4gVGhpcyBpcyB1c2VmdWwgaWZcbiAqIHlvdSBuZWVkIHRvIGNyZWF0ZSBjdXN0b20gYDxMaW5rPmAgY29tcG9uZW50cyB3aXRoIHRoZSBzYW1lIGNsaWNrIGJlaGF2aW9yIHdlXG4gKiB1c2UgaW4gb3VyIGV4cG9ydGVkIGA8TGluaz5gLlxuICovXG5cblxuZnVuY3Rpb24gdXNlTGlua0NsaWNrSGFuZGxlcih0bywgX3RlbXApIHtcbiAgbGV0IHtcbiAgICB0YXJnZXQsXG4gICAgcmVwbGFjZTogcmVwbGFjZVByb3AsXG4gICAgc3RhdGVcbiAgfSA9IF90ZW1wID09PSB2b2lkIDAgPyB7fSA6IF90ZW1wO1xuICBsZXQgbmF2aWdhdGUgPSB1c2VOYXZpZ2F0ZSgpO1xuICBsZXQgbG9jYXRpb24gPSB1c2VMb2NhdGlvbigpO1xuICBsZXQgcGF0aCA9IHVzZVJlc29sdmVkUGF0aCh0byk7XG4gIHJldHVybiB1c2VDYWxsYmFjayhldmVudCA9PiB7XG4gICAgaWYgKGV2ZW50LmJ1dHRvbiA9PT0gMCAmJiAoIC8vIElnbm9yZSBldmVyeXRoaW5nIGJ1dCBsZWZ0IGNsaWNrc1xuICAgICF0YXJnZXQgfHwgdGFyZ2V0ID09PSBcIl9zZWxmXCIpICYmIC8vIExldCBicm93c2VyIGhhbmRsZSBcInRhcmdldD1fYmxhbmtcIiBldGMuXG4gICAgIWlzTW9kaWZpZWRFdmVudChldmVudCkgLy8gSWdub3JlIGNsaWNrcyB3aXRoIG1vZGlmaWVyIGtleXNcbiAgICApIHtcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7IC8vIElmIHRoZSBVUkwgaGFzbid0IGNoYW5nZWQsIGEgcmVndWxhciA8YT4gd2lsbCBkbyBhIHJlcGxhY2UgaW5zdGVhZCBvZlxuICAgICAgLy8gYSBwdXNoLCBzbyBkbyB0aGUgc2FtZSBoZXJlLlxuXG4gICAgICBsZXQgcmVwbGFjZSA9ICEhcmVwbGFjZVByb3AgfHwgY3JlYXRlUGF0aChsb2NhdGlvbikgPT09IGNyZWF0ZVBhdGgocGF0aCk7XG4gICAgICBuYXZpZ2F0ZSh0bywge1xuICAgICAgICByZXBsYWNlLFxuICAgICAgICBzdGF0ZVxuICAgICAgfSk7XG4gICAgfVxuICB9LCBbbG9jYXRpb24sIG5hdmlnYXRlLCBwYXRoLCByZXBsYWNlUHJvcCwgc3RhdGUsIHRhcmdldCwgdG9dKTtcbn1cbi8qKlxuICogQSBjb252ZW5pZW50IHdyYXBwZXIgZm9yIHJlYWRpbmcgYW5kIHdyaXRpbmcgc2VhcmNoIHBhcmFtZXRlcnMgdmlhIHRoZVxuICogVVJMU2VhcmNoUGFyYW1zIGludGVyZmFjZS5cbiAqL1xuXG5mdW5jdGlvbiB1c2VTZWFyY2hQYXJhbXMoZGVmYXVsdEluaXQpIHtcbiAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyh0eXBlb2YgVVJMU2VhcmNoUGFyYW1zICE9PSBcInVuZGVmaW5lZFwiLCBcIllvdSBjYW5ub3QgdXNlIHRoZSBgdXNlU2VhcmNoUGFyYW1zYCBob29rIGluIGEgYnJvd3NlciB0aGF0IGRvZXMgbm90IFwiICsgXCJzdXBwb3J0IHRoZSBVUkxTZWFyY2hQYXJhbXMgQVBJLiBJZiB5b3UgbmVlZCB0byBzdXBwb3J0IEludGVybmV0IFwiICsgXCJFeHBsb3JlciAxMSwgd2UgcmVjb21tZW5kIHlvdSBsb2FkIGEgcG9seWZpbGwgc3VjaCBhcyBcIiArIFwiaHR0cHM6Ly9naXRodWIuY29tL3VuZ2FwL3VybC1zZWFyY2gtcGFyYW1zXFxuXFxuXCIgKyBcIklmIHlvdSdyZSB1bnN1cmUgaG93IHRvIGxvYWQgcG9seWZpbGxzLCB3ZSByZWNvbW1lbmQgeW91IGNoZWNrIG91dCBcIiArIFwiaHR0cHM6Ly9wb2x5ZmlsbC5pby92My8gd2hpY2ggcHJvdmlkZXMgc29tZSByZWNvbW1lbmRhdGlvbnMgYWJvdXQgaG93IFwiICsgXCJ0byBsb2FkIHBvbHlmaWxscyBvbmx5IGZvciB1c2VycyB0aGF0IG5lZWQgdGhlbSwgaW5zdGVhZCBvZiBmb3IgZXZlcnkgXCIgKyBcInVzZXIuXCIpIDogdm9pZCAwO1xuICBsZXQgZGVmYXVsdFNlYXJjaFBhcmFtc1JlZiA9IHVzZVJlZihjcmVhdGVTZWFyY2hQYXJhbXMoZGVmYXVsdEluaXQpKTtcbiAgbGV0IGxvY2F0aW9uID0gdXNlTG9jYXRpb24oKTtcbiAgbGV0IHNlYXJjaFBhcmFtcyA9IHVzZU1lbW8oKCkgPT4ge1xuICAgIGxldCBzZWFyY2hQYXJhbXMgPSBjcmVhdGVTZWFyY2hQYXJhbXMobG9jYXRpb24uc2VhcmNoKTtcblxuICAgIGZvciAobGV0IGtleSBvZiBkZWZhdWx0U2VhcmNoUGFyYW1zUmVmLmN1cnJlbnQua2V5cygpKSB7XG4gICAgICBpZiAoIXNlYXJjaFBhcmFtcy5oYXMoa2V5KSkge1xuICAgICAgICBkZWZhdWx0U2VhcmNoUGFyYW1zUmVmLmN1cnJlbnQuZ2V0QWxsKGtleSkuZm9yRWFjaCh2YWx1ZSA9PiB7XG4gICAgICAgICAgc2VhcmNoUGFyYW1zLmFwcGVuZChrZXksIHZhbHVlKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHNlYXJjaFBhcmFtcztcbiAgfSwgW2xvY2F0aW9uLnNlYXJjaF0pO1xuICBsZXQgbmF2aWdhdGUgPSB1c2VOYXZpZ2F0ZSgpO1xuICBsZXQgc2V0U2VhcmNoUGFyYW1zID0gdXNlQ2FsbGJhY2soKG5leHRJbml0LCBuYXZpZ2F0ZU9wdGlvbnMpID0+IHtcbiAgICBuYXZpZ2F0ZShcIj9cIiArIGNyZWF0ZVNlYXJjaFBhcmFtcyhuZXh0SW5pdCksIG5hdmlnYXRlT3B0aW9ucyk7XG4gIH0sIFtuYXZpZ2F0ZV0pO1xuICByZXR1cm4gW3NlYXJjaFBhcmFtcywgc2V0U2VhcmNoUGFyYW1zXTtcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgVVJMU2VhcmNoUGFyYW1zIG9iamVjdCB1c2luZyB0aGUgZ2l2ZW4gaW5pdGlhbGl6ZXIuXG4gKlxuICogVGhpcyBpcyBpZGVudGljYWwgdG8gYG5ldyBVUkxTZWFyY2hQYXJhbXMoaW5pdClgIGV4Y2VwdCBpdCBhbHNvXG4gKiBzdXBwb3J0cyBhcnJheXMgYXMgdmFsdWVzIGluIHRoZSBvYmplY3QgZm9ybSBvZiB0aGUgaW5pdGlhbGl6ZXJcbiAqIGluc3RlYWQgb2YganVzdCBzdHJpbmdzLiBUaGlzIGlzIGNvbnZlbmllbnQgd2hlbiB5b3UgbmVlZCBtdWx0aXBsZVxuICogdmFsdWVzIGZvciBhIGdpdmVuIGtleSwgYnV0IGRvbid0IHdhbnQgdG8gdXNlIGFuIGFycmF5IGluaXRpYWxpemVyLlxuICpcbiAqIEZvciBleGFtcGxlLCBpbnN0ZWFkIG9mOlxuICpcbiAqICAgbGV0IHNlYXJjaFBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoW1xuICogICAgIFsnc29ydCcsICduYW1lJ10sXG4gKiAgICAgWydzb3J0JywgJ3ByaWNlJ11cbiAqICAgXSk7XG4gKlxuICogeW91IGNhbiBkbzpcbiAqXG4gKiAgIGxldCBzZWFyY2hQYXJhbXMgPSBjcmVhdGVTZWFyY2hQYXJhbXMoe1xuICogICAgIHNvcnQ6IFsnbmFtZScsICdwcmljZSddXG4gKiAgIH0pO1xuICovXG5mdW5jdGlvbiBjcmVhdGVTZWFyY2hQYXJhbXMoaW5pdCkge1xuICBpZiAoaW5pdCA9PT0gdm9pZCAwKSB7XG4gICAgaW5pdCA9IFwiXCI7XG4gIH1cblxuICByZXR1cm4gbmV3IFVSTFNlYXJjaFBhcmFtcyh0eXBlb2YgaW5pdCA9PT0gXCJzdHJpbmdcIiB8fCBBcnJheS5pc0FycmF5KGluaXQpIHx8IGluaXQgaW5zdGFuY2VvZiBVUkxTZWFyY2hQYXJhbXMgPyBpbml0IDogT2JqZWN0LmtleXMoaW5pdCkucmVkdWNlKChtZW1vLCBrZXkpID0+IHtcbiAgICBsZXQgdmFsdWUgPSBpbml0W2tleV07XG4gICAgcmV0dXJuIG1lbW8uY29uY2F0KEFycmF5LmlzQXJyYXkodmFsdWUpID8gdmFsdWUubWFwKHYgPT4gW2tleSwgdl0pIDogW1trZXksIHZhbHVlXV0pO1xuICB9LCBbXSkpO1xufVxuXG5leHBvcnQgeyBCcm93c2VyUm91dGVyLCBIYXNoUm91dGVyLCBMaW5rLCBOYXZMaW5rLCBjcmVhdGVTZWFyY2hQYXJhbXMsIEhpc3RvcnlSb3V0ZXIgYXMgdW5zdGFibGVfSGlzdG9yeVJvdXRlciwgdXNlTGlua0NsaWNrSGFuZGxlciwgdXNlU2VhcmNoUGFyYW1zIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xyXG5pbXBvcnQgXCIuL0hlYWRlci5zY3NzXCI7XHJcbmltcG9ydCB7IE5hdkxpbmsgfSBmcm9tIFwicmVhY3Qtcm91dGVyLWRvbVwiO1xyXG5cclxuY29uc3QgSGVhZGVyID0gKHByb3BzKSA9PiB7XHJcbiAgY29uc3QgeyBicmFuZGluZyB9ID0gcHJvcHM7XHJcbiAgcmV0dXJuIChcclxuICAgIDxuYXYgY2xhc3NOYW1lPVwibmF2YmFyIG5hdmJhci1leHBlbmQtc20gbmF2YmFyLWRhcmsgYmctc3VjY2VzcyBtYi0zIHB5LTBcIj5cclxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXJcIj5cclxuICAgICAgICA8YSBocmVmPVwiL1wiIGNsYXNzTmFtZT1cIm5hdmJhci1icmFuZFwiPlxyXG4gICAgICAgICAge2JyYW5kaW5nfVxyXG4gICAgICAgIDwvYT5cclxuICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgPHVsIGNsYXNzTmFtZT1cIm5hdmJhci1uYXZcIj5cclxuICAgICAgICAgICAgPGxpIGNsYXNzTmFtZT1cIm5hdmJhci1pdGVtIFwiPlxyXG4gICAgICAgICAgICAgIDxOYXZMaW5rIHRvPVwiL1wiIGNsYXNzTmFtZT1cIm5hdi1saW5rXCI+XHJcbiAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYSBmYS1ob21lIG0tMVwiPjwvaT5Ib21lXHJcbiAgICAgICAgICAgICAgPC9OYXZMaW5rPlxyXG4gICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPVwibmF2YmFyLWl0ZW1cIj5cclxuICAgICAgICAgICAgICA8TmF2TGluayB0bz1cIi9sYXlvdXQvYWRkXCIgY2xhc3NOYW1lPVwibmF2LWxpbmtcIj5cclxuICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLXBsdXMgbS0xXCI+PC9pPkFkZFxyXG4gICAgICAgICAgICAgIDwvTmF2TGluaz5cclxuICAgICAgICAgICAgPC9saT5cclxuICAgICAgICAgICAgPGxpIGNsYXNzTmFtZT1cIm5hdmJhci1pdGVtXCI+XHJcbiAgICAgICAgICAgICAgPE5hdkxpbmsgdG89XCIvcGFnZXMvYWJvdXRcIiBjbGFzc05hbWU9XCJuYXYtbGlua1wiPlxyXG4gICAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiZmEgZmEtcXVlc3Rpb24gbS0xXCI+PC9pPkFib3V0XHJcbiAgICAgICAgICAgICAgPC9OYXZMaW5rPlxyXG4gICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgPC91bD5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L25hdj5cclxuICApO1xyXG59O1xyXG5cclxuSGVhZGVyLmRlZmF1bHRQcm9wcyA9IHtcclxuICBicmFuZGluZzogXCJNeSBBcHBcIixcclxufTtcclxuSGVhZGVyLnByb3BUeXBlcyA9IHtcclxuICBicmFuZGluZzogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxyXG59O1xyXG5leHBvcnQgZGVmYXVsdCBIZWFkZXI7XHJcblxyXG5jb25zdCBuYXZTdHlsZSA9IHtcclxuICBkaXNwbGF5OiBcImZsZXhcIixcclxuICBhbGlnbkl0ZW06IFwiY2VudGVyXCIsXHJcbiAganVzdGlmeUNvbnRlbnQ6IFwiY2VudGVyXCIsXHJcbn07XHJcbiIsImltcG9ydCBheGlvcyBmcm9tIFwiYXhpb3NcIjtcclxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xyXG5cclxuY29uc3QgQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoKTtcclxuY29uc3QgcmVkdWNlciA9IChzdGF0ZSwgYWN0aW9uKSA9PiB7XHJcbiAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xyXG4gICAgY2FzZSBcIkRFTEVURV9DT05UQUNUXCI6XHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgLi4uc3RhdGUsXHJcbiAgICAgICAgY29udGFjdHM6IHN0YXRlLmNvbnRhY3RzLmZpbHRlcigoY29udGFjdCkgPT4ge1xyXG4gICAgICAgICAgcmV0dXJuIGNvbnRhY3QuaWQgIT09IGFjdGlvbi5wYXlsb2FkO1xyXG4gICAgICAgIH0pLFxyXG4gICAgICAgIC8vIHBheWxvYWQgaXMgZGF0YSB5b3Ugc2VuZCBhbG9uZyB3aXRoIGFjdGlvbiwgaWQgYXMgcGF5bG9hZCBmb3IgdGhpcyBpbnN0YW5jZVxyXG4gICAgICB9O1xyXG4gICAgY2FzZSBcIlVQREFURV9DT05UQUNUXCI6XHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgLi4uc3RhdGUsXHJcbiAgICAgICAgY29udGFjdHM6IHN0YXRlLmNvbnRhY3RzLm1hcCgoY29udGFjdCkgPT4ge1xyXG4gICAgICAgICAgY29udGFjdC5pZCA9PT0gYWN0aW9uLnBheWxvYWQuaWRcclxuICAgICAgICAgICAgPyAoY29udGFjdCA9IGFjdGlvbi5wYXlsb2FkKVxyXG4gICAgICAgICAgICA6IGNvbnRhY3Q7XHJcbiAgICAgICAgfSksXHJcbiAgICAgIH07XHJcbiAgICBjYXNlIFwiQUREX0NPTlRBQ1RcIjpcclxuICAgICAgcmV0dXJuIHtcclxuICAgICAgICAuLi5zdGF0ZSxcclxuICAgICAgICBjb250YWN0czogW2FjdGlvbi5wYXlsb2FkLCAuLi5zdGF0ZS5jb250YWN0c10sXHJcbiAgICAgIH07XHJcbiAgICBkZWZhdWx0OlxyXG4gICAgICByZXR1cm4gc3RhdGU7XHJcbiAgfVxyXG59O1xyXG5cclxuY2xhc3MgQ29udGV4dFByb3ZpZGVyIGV4dGVuZHMgQ29tcG9uZW50IHtcclxuICBzdGF0ZSA9IHtcclxuICAgIGNvbnRhY3RzOiBbXSxcclxuICAgIC8vIG5lZWQgYSB3YXkgdG8gY2FsbCBhY3Rpb247IHNvIHdlIG5lZWQgZGlzcGF0Y2guXHJcbiAgICBkaXNwYXRjaDogKGFjdGlvbikgPT4gdGhpcy5zZXRTdGF0ZSgoc3RhdGUpID0+IHJlZHVjZXIoc3RhdGUsIGFjdGlvbikpLFxyXG4gICAgLy8gZGlzcGF0Y2ggaXMgcGFydCBvZiBvdXIgc3RhdGUgbm93LCBzbyBpdCdzIGluIHN0YXRlIGZvciBhY2Nlc3NcclxuICB9O1xyXG4gIGFzeW5jIGNvbXBvbmVudERpZE1vdW50KCkge1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoXHJcbiAgICAgIFwiaHR0cHM6Ly9qc29ucGxhY2Vob2xkZXIudHlwaWNvZGUuY29tL3VzZXJzXCJcclxuICAgICk7XHJcbiAgICB0aGlzLnNldFN0YXRlKHsgY29udGFjdHM6IHJlc3BvbnNlLmRhdGEgfSk7XHJcbiAgfVxyXG4gIHJlbmRlcigpIHtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXt7IC4uLnRoaXMuc3RhdGUgfX0+XHJcbiAgICAgICAge3RoaXMucHJvcHMuY2hpbGRyZW59XHJcbiAgICAgIDwvQ29udGV4dC5Qcm92aWRlcj5cclxuICAgICk7XHJcbiAgfVxyXG59XHJcbmV4cG9ydCBkZWZhdWx0IENvbnRleHRQcm92aWRlcjtcclxuZXhwb3J0IGNvbnN0IENvbnN1bWVyID0gQ29udGV4dC5Db25zdW1lcjtcclxuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XHJcbmltcG9ydCBjbGFzc25hbWUgZnJvbSBcImNsYXNzbmFtZVwiO1xyXG5jb25zdCBUZXh0SW5wdXQgPSAoe1xyXG4gIGxhYmVsLFxyXG4gIG5hbWUsXHJcbiAgdmFsdWUsXHJcbiAgcGxhY2Vob2xkZXIsXHJcbiAgdHlwZSxcclxuICBvbkNoYW5nZSxcclxuICBlcnJvcixcclxufSkgPT4ge1xyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImZvcm0tZ3JvdXBcIj5cclxuICAgICAgPGxhYmVsIGh0bWxGb3I9e25hbWV9PntsYWJlbH08L2xhYmVsPlxyXG4gICAgICA8aW5wdXRcclxuICAgICAgICBvbkNoYW5nZT17b25DaGFuZ2V9XHJcbiAgICAgICAgdHlwZT17dHlwZX1cclxuICAgICAgICBuYW1lPXtuYW1lfVxyXG4gICAgICAgIGNsYXNzTmFtZT17Y2xhc3NuYW1lKFwiaXMtaW52YWxpZCBmb3JtLWNvbnRyb2wgZm9ybS1jb250cm9sLWxnXCIsIHtcclxuICAgICAgICAgIFwiaXMtaW52YWxpZFwiOiBlcnJvcixcclxuICAgICAgICB9KX1cclxuICAgICAgICBwbGFjZWhvbGRlcj17cGxhY2Vob2xkZXJ9XHJcbiAgICAgICAgdmFsdWU9e3ZhbHVlfVxyXG4gICAgICAvPlxyXG4gICAgICB7LyogY29uZGl0aW9uYWwgKi99XHJcbiAgICAgIHtlcnJvciAmJiA8ZGl2IGNsYXNzTmFtZT1cImludmFsaWQtZmVlZGJhY2tcIj57ZXJyb3J9PC9kaXY+fVxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufTtcclxuVGV4dElucHV0LnByb3BUeXBlcyA9IHtcclxuICBsYWJlbDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxyXG4gIG5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcclxuICBwbGFjZWhvbGRlcjogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxyXG4gIHZhbHVlOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXHJcbiAgdHlwZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxyXG4gIG9uQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxyXG4gIGVycm9yOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG59O1xyXG5cclxuVGV4dElucHV0LmRlZmF1bHRQcm9wcyA9IHtcclxuICB0eXBlOiBcInRleHRcIixcclxufTtcclxuZXhwb3J0IGRlZmF1bHQgVGV4dElucHV0O1xyXG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IENvbnN1bWVyIH0gZnJvbSBcIi4uL0NvbnRleHQvQ29udGV4dFwiO1xyXG5pbXBvcnQgVGV4dElucHV0IGZyb20gXCIuL1RleHRJbnB1dFwiO1xyXG5pbXBvcnQgYXhpb3MgZnJvbSBcImF4aW9zXCI7XHJcbmltcG9ydCB7IGFzeW5jIH0gZnJvbSBcInJlZ2VuZXJhdG9yLXJ1bnRpbWVcIjtcclxuXHJcbmNsYXNzIEFkZENvbnRhY3QgZXh0ZW5kcyBDb21wb25lbnQge1xyXG4gIHN0YXRlID0ge1xyXG4gICAgbmFtZTogXCJcIixcclxuICAgIGVtYWlsOiBcIlwiLFxyXG4gICAgcGhvbmU6IFwiXCIsXHJcbiAgICBlcnJvcnM6IHt9LFxyXG4gIH07XHJcbiAgb25DaGFuZ2UgPSAoZSkgPT4ge1xyXG4gICAgdGhpcy5zZXRTdGF0ZSh7IFtlLnRhcmdldC5uYW1lXTogZS50YXJnZXQudmFsdWUgfSk7XHJcbiAgfTtcclxuICBvblN1Ym1pdEhhbmRsZXIgPSBhc3luYyAoZGlzcGF0Y2gsIGUpID0+IHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgIC8vIGdldCB2YWx1ZXMgZnJvbSBzdGF0ZVxyXG4gICAgY29uc3QgeyBuYW1lLCBlbWFpbCwgcGhvbmUgfSA9IHRoaXMuc3RhdGU7XHJcblxyXG4gICAgLy8gQ2hlY2sgZm9yIGVycm9yXHJcbiAgICBpZiAobmFtZSA9PT0gXCJcIikge1xyXG4gICAgICB0aGlzLnNldFN0YXRlKHsgZXJyb3JzOiB7IG5hbWU6IFwiTmFtZSBpcyByZXF1aXJlZCFcIiB9IH0pO1xyXG4gICAgICAvLyBzZXR0aW5nIHN0YXRlPyBhbHNvIHN0b3AgaXQgdXNpbmcgcmV0dXJuXHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGlmIChlbWFpbCA9PT0gXCJcIikge1xyXG4gICAgICB0aGlzLnNldFN0YXRlKHsgZXJyb3JzOiB7IGVtYWlsOiBcIkVtYWlsIGlzIHJlcXVpcmVkIVwiIH0gfSk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGlmIChwaG9uZSA9PT0gXCJcIikge1xyXG4gICAgICB0aGlzLnNldFN0YXRlKHsgZXJyb3JzOiB7IHBob25lOiBcIk51bWJlciBpcyByZXF1aXJlZCFcIiB9IH0pO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBjb25zdCBuZXdDb250YWN0ID0ge1xyXG4gICAgICAvLyBkb24ndCBuZWVkIGlkIG5vdyBiL2MgbWFraW5nIHBvc3QgcmVxICwgaXQgd2lsbCBiZSBhdXRvIGdlbmVyYXRlZFxyXG4gICAgICAvLyBpZDogdXVpZCgpLFxyXG4gICAgICBuYW1lLFxyXG4gICAgICBlbWFpbCxcclxuICAgICAgcGhvbmUsXHJcbiAgICB9O1xyXG5cclxuICAgIC8vIGNhbGwgZGlzcGF0Y2hcclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MucG9zdChcclxuICAgICAgYGh0dHBzOi8vanNvbnBsYWNlaG9sZGVyLnR5cGljb2RlLmNvbS91c2Vyc2AsXHJcbiAgICAgIG5ld0NvbnRhY3RcclxuICAgICk7XHJcbiAgICBkaXNwYXRjaCh7IHR5cGU6IFwiQUREX0NPTlRBQ1RcIiwgcGF5bG9hZDogcmVzcG9uc2UuZGF0YSB9KTtcclxuXHJcbiAgICAvLyBDbGVhciBzdGF0ZVxyXG4gICAgdGhpcy5zZXRTdGF0ZSh7XHJcbiAgICAgIG5hbWU6IFwiXCIsXHJcbiAgICAgIGVtYWlsOiBcIlwiLFxyXG4gICAgICBwaG9uZTogXCJcIixcclxuICAgICAgZXJyb3JzOiB7fSxcclxuICAgIH0pO1xyXG4gICAgLy8gcmVkaXJlY3RcclxuICAgIGJyb3dzZXJIaXN0b3J5LnB1c2goXCIvXCIpO1xyXG4gIH07XHJcbiAgcmVuZGVyKCkge1xyXG4gICAgY29uc3QgeyBuYW1lLCBlbWFpbCwgcGhvbmUsIGVycm9ycyB9ID0gdGhpcy5zdGF0ZTtcclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8Q29uc3VtZXI+XHJcbiAgICAgICAgeyh2YWx1ZSkgPT4ge1xyXG4gICAgICAgICAgY29uc3QgeyBkaXNwYXRjaCB9ID0gdmFsdWU7XHJcbiAgICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmQgbWItM1wiPlxyXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZC1oZWFkZXJcIj5BZGQgQ29udGFjdDwvZGl2PlxyXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZC1ib2R5XCI+XHJcbiAgICAgICAgICAgICAgICB7Lyogb25TdWJtaXQgcGFzcyBpbiBkaXNwYXRjaCAgc28gd2UgY2FuIHVzZSBpdCBpbnNpZGUgIG9uc3VibWl0Ki99XHJcbiAgICAgICAgICAgICAgICA8Zm9ybSBvblN1Ym1pdD17dGhpcy5vblN1Ym1pdEhhbmRsZXIuYmluZCh0aGlzLCBkaXNwYXRjaCl9PlxyXG4gICAgICAgICAgICAgICAgICA8VGV4dElucHV0XHJcbiAgICAgICAgICAgICAgICAgICAgbGFiZWw9XCJOYW1lXCJcclxuICAgICAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZT1cIm5hbWVcIlxyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlPXtuYW1lfVxyXG4gICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiRW50ZXIgTmFtZS4uLlwiXHJcbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMub25DaGFuZ2V9XHJcbiAgICAgICAgICAgICAgICAgICAgZXJyb3I9e2Vycm9ycy5uYW1lfVxyXG4gICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgICA8VGV4dElucHV0XHJcbiAgICAgICAgICAgICAgICAgICAgbGFiZWw9XCJFbWFpbFwiXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cImVtYWlsXCJcclxuICAgICAgICAgICAgICAgICAgICBuYW1lPVwiZW1haWxcIlxyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlPXtlbWFpbH1cclxuICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cIkVudGVyIEVtYWlsLi4uXCJcclxuICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5vbkNoYW5nZX1cclxuICAgICAgICAgICAgICAgICAgICBlcnJvcj17ZXJyb3JzLmVtYWlsfVxyXG4gICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgICA8VGV4dElucHV0XHJcbiAgICAgICAgICAgICAgICAgICAgbGFiZWw9XCJQaG9uZVwiXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cIm51bWJlclwiXHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZT1cInBob25lXCJcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17cGhvbmV9XHJcbiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJFbnRlciBwaG9uZS4uLlwiXHJcbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMub25DaGFuZ2V9XHJcbiAgICAgICAgICAgICAgICAgICAgZXJyb3I9e2Vycm9ycy5waG9uZX1cclxuICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgICAgPGlucHV0XHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cInN1Ym1pdFwiXHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU9XCJBZGQgQ29udGFjdFwiXHJcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYnRuIGJ0bi1zdWNjZXNzIFwiXHJcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU9e2J0blN0eWxlfVxyXG4gICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgPC9mb3JtPlxyXG4gICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICk7XHJcbiAgICAgICAgfX1cclxuICAgICAgPC9Db25zdW1lcj5cclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBBZGRDb250YWN0O1xyXG5cclxuY29uc3QgYnRuU3R5bGUgPSB7XHJcbiAgd2lkdGg6IFwiODAlXCIsXHJcbiAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZSg2MHB4KVwiLFxyXG4gIG1hcmdpblRvcDogXCIxNXB4XCIsXHJcbn07XHJcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcclxuXHJcbmNsYXNzIEFib3V0IGV4dGVuZHMgQ29tcG9uZW50IHtcclxuICByZW5kZXIoKSB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8ZGl2PlxyXG4gICAgICAgIDxoMSBjbGFzc05hbWU9XCJkaXNwbGF5LTRcIj5BYm91dCBDb250YWN0IE1hbmFnZXI8L2gxPlxyXG4gICAgICAgIDxwIGNsYXNzTmFtZT1cImxlYWRcIj5BIHNpbXBsZSBhcHBsaWNhdGlvbiB0byBtYW5hZ2UgY29udGFjdHMuPC9wPlxyXG4gICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtc2Vjb25kYXJ5XCI+VmVyc2lvbiAxLjAuMTM8L3A+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgKTtcclxuICB9XHJcbn1cclxuZXhwb3J0IGRlZmF1bHQgQWJvdXQ7XHJcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0ICgpID0+IHtcclxuICByZXR1cm4gKFxyXG4gICAgPGRpdj5cclxuICAgICAgPGgxIGNsYXNzTmFtZT1cImRpc3BsYXktNFwiPlxyXG4gICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRleHQtZGFuZ2VyXCI+NDA0PC9zcGFuPiBQYWdlIE5vdCBGb3VuZFxyXG4gICAgICA8L2gxPlxyXG4gICAgICA8cCBjbGFzc05hbWU9XCJsZWFkXCI+U29ycnksIHRoYXQgcGFnZSBkb2VzIG5vdCBleGlzdDwvcD5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn07XHJcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xyXG5pbXBvcnQgeyBDb25zdW1lciB9IGZyb20gXCIuLi9Db250ZXh0XCI7XHJcbmltcG9ydCBheGlvcyBmcm9tIFwiYXhpb3NcIjtcclxuaW1wb3J0IHsgTmF2TGluayB9IGZyb20gXCJyZWFjdC1yb3V0ZXItZG9tXCI7XHJcblxyXG5jbGFzcyBDb250YWN0IGV4dGVuZHMgQ29tcG9uZW50IHtcclxuICBzdGF0ZSA9IHtcclxuICAgIHNob3dDb250ZW50OiBmYWxzZSxcclxuICB9O1xyXG4gIG9uU2hvd0NsaWNrID0gKCkgPT4ge1xyXG4gICAgdGhpcy5zZXRTdGF0ZSh7IHNob3dDb250ZW50OiAhdGhpcy5zdGF0ZS5zaG93Q29udGVudCB9KTtcclxuICB9O1xyXG5cclxuICBvbkNsaWNrRGVsZXRlID0gYXN5bmMgKGlkLCBkaXNwYXRjaCkgPT4ge1xyXG4gICAgLy8gZGVsZXRlIHJlcXVlc3RcclxuXHJcbiAgICBhd2FpdCBheGlvcy5kZWxldGUoYGh0dHBzOi8vanNvbnBsYWNlaG9sZGVyLnR5cGljb2RlLmNvbS91c2Vycy8ke2lkfWApO1xyXG5cclxuICAgIGRpc3BhdGNoKHsgdHlwZTogXCJERUxFVEVfQ09OVEFDVFwiLCBwYXlsb2FkOiBpZCB9KTtcclxuICB9O1xyXG5cclxuICByZW5kZXIoKSB7XHJcbiAgICAvLyBkZXN0cnVjdHVyaW5nXHJcbiAgICBjb25zdCB7IG5hbWUsIGVtYWlsLCBwaG9uZSwgaWQgfSA9IHRoaXMucHJvcHMuY29udGFjdDtcclxuICAgIGNvbnN0IHsgc2hvd0NvbnRlbnQgfSA9IHRoaXMuc3RhdGU7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8Q29uc3VtZXI+XHJcbiAgICAgICAgeyh2YWx1ZSkgPT4ge1xyXG4gICAgICAgICAgY29uc3QgeyBkaXNwYXRjaCB9ID0gdmFsdWU7XHJcblxyXG4gICAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXJkIGNhcmQtYm9keSBtYi0zXCI+XHJcbiAgICAgICAgICAgICAgPGg0PlxyXG4gICAgICAgICAgICAgICAge25hbWV9XHJcbiAgICAgICAgICAgICAgICA8aVxyXG4gICAgICAgICAgICAgICAgICBvbkNsaWNrPXt0aGlzLm9uU2hvd0NsaWNrfVxyXG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJmYXMgZmEtY2hldnJvbi1jaXJjbGUtZG93blwiXHJcbiAgICAgICAgICAgICAgICAgIHN0eWxlPXt7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luTGVmdDogXCIzcHhcIixcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogXCJncmVlblwiLFxyXG4gICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiBcIjE4cHhcIixcclxuICAgICAgICAgICAgICAgICAgICBjdXJzb3I6IFwicG9pbnRlclwiLFxyXG4gICAgICAgICAgICAgICAgICB9fVxyXG4gICAgICAgICAgICAgICAgLz5cclxuXHJcbiAgICAgICAgICAgICAgICA8aVxyXG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJmYXMgZmEtdGltZXMtY2lyY2xlXCJcclxuICAgICAgICAgICAgICAgICAgb25DbGljaz17dGhpcy5vbkNsaWNrRGVsZXRlLmJpbmQodGhpcywgaWQsIGRpc3BhdGNoKX1cclxuICAgICAgICAgICAgICAgICAgc3R5bGU9e3tcclxuICAgICAgICAgICAgICAgICAgICBjdXJzb3I6IFwicG9pbnRlclwiLFxyXG4gICAgICAgICAgICAgICAgICAgIGZsb2F0OiBcInJpZ2h0XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6IFwicmVkXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgZm9udFNpemU6IFwiMjBweFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IFwiNHB4XCIsXHJcbiAgICAgICAgICAgICAgICAgIH19XHJcbiAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgPE5hdkxpbmsgdG89e2AvZWRpdC8ke2lkfWB9PlxyXG4gICAgICAgICAgICAgICAgICA8aVxyXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZhcyBmYS1wZW5jaWwtYWx0XCJcclxuICAgICAgICAgICAgICAgICAgICBzdHlsZT17e1xyXG4gICAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBcInBvaW50ZXJcIixcclxuICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiBcImJsYWNrXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICBmbG9hdDogXCJyaWdodFwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgbWFyZ2luUmlnaHQ6IFwiMXJlbVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIH19XHJcbiAgICAgICAgICAgICAgICAgID48L2k+XHJcbiAgICAgICAgICAgICAgICA8L05hdkxpbms+XHJcbiAgICAgICAgICAgICAgPC9oND5cclxuICAgICAgICAgICAgICB7LyogQ29uZGl0aW9uYWwgb24gdG9nZ2xlICovfVxyXG4gICAgICAgICAgICAgIHtzaG93Q29udGVudCA/IChcclxuICAgICAgICAgICAgICAgIDx1bCBjbGFzc05hbWU9XCJsaXN0LWdyb3VwXCI+XHJcbiAgICAgICAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9XCJsaXN0LWdyb3VwLWl0ZW1cIj4gUGhvbmU6IHtwaG9uZX0gPC9saT5cclxuICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzTmFtZT1cImxpc3QtZ3JvdXAtaXRlbVwiPiBFbWFpbDoge2VtYWlsfSA8L2xpPlxyXG4gICAgICAgICAgICAgICAgICB7LyogPGxpIGNsYXNzTmFtZT1cImxpc3QtZ3JvdXAtaXRlbVwiPiBXZWJzaXRlOiB7d2Vic2l0ZX0gPC9saT4gKi99XHJcbiAgICAgICAgICAgICAgICA8L3VsPlxyXG4gICAgICAgICAgICAgICkgOiBudWxsfVxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICk7XHJcbiAgICAgICAgfX1cclxuICAgICAgPC9Db25zdW1lcj5cclxuICAgICk7XHJcbiAgfVxyXG59XHJcbkNvbnRhY3QucHJvdG9UeXBlID0ge1xyXG4gIGNvbnRhY3Q6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcclxufTtcclxuZXhwb3J0IGRlZmF1bHQgQ29udGFjdDtcclxuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgQ29udGFjdCBmcm9tIFwiLi9Db250YWN0Q1wiO1xyXG5pbXBvcnQgeyBDb25zdW1lciB9IGZyb20gXCIuLi9Db250ZXh0XCI7XHJcblxyXG5jbGFzcyBDb250YWN0cyBleHRlbmRzIENvbXBvbmVudCB7XHJcbiAgZGVsZXRlQ29udGFjdCA9IChpZCkgPT4ge1xyXG4gICAgY29uc3QgeyBjb250YWN0cyB9ID0gdGhpcy5zdGF0ZTtcclxuICAgIGNvbnN0IG5ld0NvbnRhY3RzID0gY29udGFjdHMuZmlsdGVyKChjb250YWN0KSA9PiBjb250YWN0LmlkICE9PSBpZCk7XHJcbiAgICB0aGlzLnNldFN0YXRlKHtcclxuICAgICAgY29udGFjdHM6IG5ld0NvbnRhY3RzLFxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgcmVuZGVyKCkge1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgPENvbnN1bWVyPlxyXG4gICAgICAgIHsodmFsdWUpID0+IHtcclxuICAgICAgICAgIGNvbnN0IHsgY29udGFjdHMgfSA9IHZhbHVlO1xyXG4gICAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgPFJlYWN0LkZyYWdtZW50PlxyXG4gICAgICAgICAgICAgIHtjb250YWN0cy5tYXAoKGNvbnRhY3QpID0+IChcclxuICAgICAgICAgICAgICAgIDxDb250YWN0XHJcbiAgICAgICAgICAgICAgICAgIGtleT17Y29udGFjdC5pZH1cclxuICAgICAgICAgICAgICAgICAgY29udGFjdD17Y29udGFjdH1cclxuICAgICAgICAgICAgICAgICAgZGVsZXRlQ2xpY2tIYW5kbGVyPXt0aGlzLmRlbGV0ZUNvbnRhY3QuYmluZCh0aGlzLCBjb250YWN0LmlkKX1cclxuICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgKSl9XHJcbiAgICAgICAgICAgIDwvUmVhY3QuRnJhZ21lbnQ+XHJcbiAgICAgICAgICApO1xyXG4gICAgICAgIH19XHJcbiAgICAgIDwvQ29uc3VtZXI+XHJcbiAgICApO1xyXG4gIH1cclxufVxyXG5leHBvcnQgZGVmYXVsdCBDb250YWN0cztcclxuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgVGV4dElucHV0IGZyb20gXCIuL1RleHRJbnB1dFwiO1xyXG5pbXBvcnQgYXhpb3MgZnJvbSBcImF4aW9zXCI7XHJcbmltcG9ydCB7IENvbnN1bWVyIH0gZnJvbSBcIi4uL0NvbnRleHQvQ29udGV4dFwiO1xyXG5cclxuY2xhc3MgRWRpdENvbnRhY3QgZXh0ZW5kcyBDb21wb25lbnQge1xyXG4gIHN0YXRlID0ge1xyXG4gICAgbmFtZTogXCJcIixcclxuICAgIGVtYWlsOiBcIlwiLFxyXG4gICAgcGhvbmU6IFwiXCIsXHJcbiAgICBlcnJvcnM6IHt9LFxyXG4gIH07XHJcblxyXG4gIGFzeW5jIGNvbXBvbmVudERpZE1vdW50KCkge1xyXG4gICAgY29uc29sZS5sb2codGhpcy5wcm9wcy5wcm90byk7XHJcbiAgICBjb25zdCB7IGlkIH0gPSB0aGlzLnByb3BzLm1hdGNoLnBhcmFtcy5pZDtcclxuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGF4aW9zLmdldChcclxuICAgICAgYGh0dHBzOi8vanNvbnBsYWNlaG9sZGVyLnR5cGljb2RlLmNvbS91c2Vycy8ke2lkfWBcclxuICAgICk7XHJcblxyXG4gICAgY29uc3QgY29udGFjdCA9IHJlcy5kYXRhO1xyXG5cclxuICAgIHRoaXMuc2V0U3RhdGUoe1xyXG4gICAgICBuYW1lOiBjb250YWN0Lm5hbWUsXHJcbiAgICAgIGVtYWlsOiBjb250YWN0LmVtYWlsLFxyXG4gICAgICBwaG9uZTogY29udGFjdC5waG9uZSxcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgb25TdWJtaXRIYW5kbGVyID0gYXN5bmMgKGRpc3BhdGNoLCBlKSA9PiB7XHJcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG4gICAgY29uc3QgeyBuYW1lLCBlbWFpbCwgcGhvbmUgfSA9IHRoaXMuc3RhdGU7XHJcblxyXG4gICAgLy8gQ2hlY2sgRm9yIEVycm9yc1xyXG4gICAgaWYgKG5hbWUgPT09IFwiXCIpIHtcclxuICAgICAgdGhpcy5zZXRTdGF0ZSh7IGVycm9yczogeyBuYW1lOiBcIk5hbWUgaXMgcmVxdWlyZWRcIiB9IH0pO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGVtYWlsID09PSBcIlwiKSB7XHJcbiAgICAgIHRoaXMuc2V0U3RhdGUoeyBlcnJvcnM6IHsgZW1haWw6IFwiRW1haWwgaXMgcmVxdWlyZWRcIiB9IH0pO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHBob25lID09PSBcIlwiKSB7XHJcbiAgICAgIHRoaXMuc2V0U3RhdGUoeyBlcnJvcnM6IHsgcGhvbmU6IFwiUGhvbmUgaXMgcmVxdWlyZWRcIiB9IH0pO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgdXBkQ29udGFjdCA9IHtcclxuICAgICAgbmFtZSxcclxuICAgICAgZW1haWwsXHJcbiAgICAgIHBob25lLFxyXG4gICAgfTtcclxuXHJcbiAgICBjb25zdCB7IGlkIH0gPSB0aGlzLnByb3BzLm1hdGNoLnBhcmFtcy5pZDtcclxuXHJcbiAgICBjb25zdCByZXMgPSBhd2FpdCBheGlvcy5wdXQoXHJcbiAgICAgIGBodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vdXNlcnMvJHtpZH1gLFxyXG4gICAgICB1cGRDb250YWN0XHJcbiAgICApO1xyXG5cclxuICAgIGRpc3BhdGNoKHsgdHlwZTogXCJVUERBVEVfQ09OVEFDVFwiLCBwYXlsb2FkOiByZXMuZGF0YSB9KTtcclxuXHJcbiAgICAvLyBDbGVhciBTdGF0ZVxyXG4gICAgdGhpcy5zZXRTdGF0ZSh7XHJcbiAgICAgIG5hbWU6IFwiXCIsXHJcbiAgICAgIGVtYWlsOiBcIlwiLFxyXG4gICAgICBwaG9uZTogXCJcIixcclxuICAgICAgZXJyb3JzOiB7fSxcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMucHJvcHMuaGlzdG9yeS5wdXNoKFwiL1wiKTtcclxuICB9O1xyXG5cclxuICBvbkNoYW5nZSA9IChlKSA9PiB0aGlzLnNldFN0YXRlKHsgW2UudGFyZ2V0Lm5hbWVdOiBlLnRhcmdldC52YWx1ZSB9KTtcclxuXHJcbiAgcmVuZGVyKCkge1xyXG4gICAgY29uc3QgeyBuYW1lLCBlbWFpbCwgcGhvbmUsIGVycm9ycyB9ID0gdGhpcy5zdGF0ZTtcclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8Q29uc3VtZXI+XHJcbiAgICAgICAgeyh2YWx1ZSkgPT4ge1xyXG4gICAgICAgICAgY29uc3QgeyBkaXNwYXRjaCB9ID0gdmFsdWU7XHJcbiAgICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmQgbWItM1wiPlxyXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZC1oZWFkZXJcIj5FZGl0IENvbnRhY3Q8L2Rpdj5cclxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmQtYm9keVwiPlxyXG4gICAgICAgICAgICAgICAgey8qIG9uU3VibWl0IHBhc3MgaW4gZGlzcGF0Y2ggIHNvIHdlIGNhbiB1c2UgaXQgaW5zaWRlICBvbnN1Ym1pdCovfVxyXG4gICAgICAgICAgICAgICAgPGZvcm0gb25TdWJtaXQ9e3RoaXMub25TdWJtaXRIYW5kbGVyLmJpbmQodGhpcywgZGlzcGF0Y2gpfT5cclxuICAgICAgICAgICAgICAgICAgPFRleHRJbnB1dFxyXG4gICAgICAgICAgICAgICAgICAgIGxhYmVsPVwiTmFtZVwiXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxyXG4gICAgICAgICAgICAgICAgICAgIG5hbWU9XCJuYW1lXCJcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17bmFtZX1cclxuICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cIkVudGVyIE5hbWUuLi5cIlxyXG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLm9uQ2hhbmdlfVxyXG4gICAgICAgICAgICAgICAgICAgIGVycm9yPXtlcnJvcnMubmFtZX1cclxuICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgICAgPFRleHRJbnB1dFxyXG4gICAgICAgICAgICAgICAgICAgIGxhYmVsPVwiRW1haWxcIlxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU9XCJlbWFpbFwiXHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZT1cImVtYWlsXCJcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17ZW1haWx9XHJcbiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJFbnRlciBFbWFpbC4uLlwiXHJcbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMub25DaGFuZ2V9XHJcbiAgICAgICAgICAgICAgICAgICAgZXJyb3I9e2Vycm9ycy5lbWFpbH1cclxuICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgICAgPFRleHRJbnB1dFxyXG4gICAgICAgICAgICAgICAgICAgIGxhYmVsPVwiUGhvbmVcIlxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU9XCJudW1iZXJcIlxyXG4gICAgICAgICAgICAgICAgICAgIG5hbWU9XCJwaG9uZVwiXHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3Bob25lfVxyXG4gICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiRW50ZXIgcGhvbmUuLi5cIlxyXG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLm9uQ2hhbmdlfVxyXG4gICAgICAgICAgICAgICAgICAgIGVycm9yPXtlcnJvcnMucGhvbmV9XHJcbiAgICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICAgIDxpbnB1dFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU9XCJzdWJtaXRcIlxyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlPVwiVXBkYXRlIENvbnRhY3RcIlxyXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJ0biBidG4tc3VjY2Vzc1wiXHJcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU9e2J0blN0eWxlfVxyXG4gICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgPC9mb3JtPlxyXG4gICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICk7XHJcbiAgICAgICAgfX1cclxuICAgICAgPC9Db25zdW1lcj5cclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBFZGl0Q29udGFjdDtcclxuXHJcbmNvbnN0IGJ0blN0eWxlID0ge1xyXG4gIHdpZHRoOiBcIjgwJVwiLFxyXG4gIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGUoNjBweClcIixcclxuICBtYXJnaW5Ub3A6IFwiMTVweFwiLFxyXG59O1xyXG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCBIZWFkZXIgZnJvbSBcIi4uL0hlYWRlci9IZWFkZXJcIjtcclxuaW1wb3J0IEFkZENvbnRhY3QgZnJvbSBcIi4uL0xheW91dC9BZGRDb250YWN0XCI7XHJcbmltcG9ydCBBYm91dCBmcm9tIFwiLi4vUGFnZXMvQWJvdXRcIjtcclxuaW1wb3J0IE5vdEZvdW5kIGZyb20gXCIuLi9QYWdlcy9Ob3RGb3VuZFwiO1xyXG5pbXBvcnQgQ29udGFjdHMgZnJvbSBcIi4vQ29tcG9uZW50cy9Db250YWN0c0NcIjtcclxuaW1wb3J0IENvbnRleHRQcm92aWRlciBmcm9tIFwiLi9Db250ZXh0XCI7XHJcbmltcG9ydCB7IEhhc2hSb3V0ZXIsIFJvdXRlLCBSb3V0ZXMgfSBmcm9tIFwicmVhY3Qtcm91dGVyLWRvbVwiO1xyXG5pbXBvcnQgRWRpdENvbnRhY3QgZnJvbSBcIi4uL0xheW91dC9FZGl0Q29udGFjdFwiO1xyXG5cclxuY29uc3QgQ29udGV4dEFwcCA9IChwcm9wcykgPT4ge1xyXG4gIHJldHVybiAoXHJcbiAgICA8Q29udGV4dFByb3ZpZGVyPlxyXG4gICAgICA8SGFzaFJvdXRlcj5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIkFwcFwiPlxyXG4gICAgICAgICAgPEhlYWRlciBicmFuZGluZz1cIkNvbnRhY3QgTWFuYWdlclwiIC8+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lclwiIHN0eWxlPXtjb250YWluZXJTdHlsZX0+XHJcbiAgICAgICAgICAgIDxSb3V0ZXM+XHJcbiAgICAgICAgICAgICAgPFJvdXRlIGV4YWN0IHBhdGg9XCIvXCIgZWxlbWVudD17PENvbnRhY3RzIC8+fSAvPlxyXG4gICAgICAgICAgICAgIDxSb3V0ZSBleGFjdCBwYXRoPVwibGF5b3V0L2FkZFwiIGVsZW1lbnQ9ezxBZGRDb250YWN0IC8+fSAvPlxyXG4gICAgICAgICAgICAgIDxSb3V0ZSBleGFjdCBwYXRoPVwiL2VkaXQvOmlkXCIgZWxlbWVudD17PEVkaXRDb250YWN0IC8+fSAvPlxyXG4gICAgICAgICAgICAgIDxSb3V0ZSBleGFjdCBwYXRoPVwicGFnZXMvYWJvdXRcIiBlbGVtZW50PXs8QWJvdXQgLz59IC8+XHJcbiAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIqXCIgZWxlbWVudD17PE5vdEZvdW5kIC8+fSAvPlxyXG4gICAgICAgICAgICA8L1JvdXRlcz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0hhc2hSb3V0ZXI+XHJcbiAgICA8L0NvbnRleHRQcm92aWRlcj5cclxuICApO1xyXG59O1xyXG5leHBvcnQgZGVmYXVsdCBDb250ZXh0QXBwO1xyXG5cclxuY29uc3QgY29udGFpbmVyU3R5bGUgPSB7XHJcbiAgcGFkZGluZzogXCIxNXB4XCIsXHJcbiAgYmFja2dyb3VuZDogXCIjZGVlMmU2XCIsXHJcbiAgbWF4V2lkdGg6IFwiNzUwcHhcIixcclxufTtcclxuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgXCIuL0FwcC5zY3NzXCI7XHJcbmltcG9ydCBcImJvb3RzdHJhcC9kaXN0L2Nzcy9ib290c3RyYXAubWluLmNzc1wiO1xyXG5pbXBvcnQgQ29udGV4dEFwcCBmcm9tIFwiLi9Db250ZXh0L0NvbnRleHRBcHBcIjtcclxuXHJcbmNsYXNzIEFwcCBleHRlbmRzIENvbXBvbmVudCB7XHJcbiAgcmVuZGVyKCkge1xyXG4gICAgcmV0dXJuIDxDb250ZXh0QXBwIC8+O1xyXG4gIH1cclxufVxyXG5leHBvcnQgZGVmYXVsdCBBcHA7XHJcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBSZWFjdERPTSBmcm9tIFwicmVhY3QtZG9tXCI7XG5pbXBvcnQgXCIuL3N0eWxlcy9hbGwuc2Nzc1wiO1xuaW1wb3J0IEFwcCBmcm9tIFwiLi9jb21wb25lbnRzL0FwcFwiO1xuXG5SZWFjdERPTS5yZW5kZXIoPEFwcCAvPiwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJyb290XCIpKTtcbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwidXRpbHMiLCJzZXR0bGUiLCJjb29raWVzIiwiYnVpbGRVUkwiLCJidWlsZEZ1bGxQYXRoIiwicGFyc2VIZWFkZXJzIiwiaXNVUkxTYW1lT3JpZ2luIiwiY3JlYXRlRXJyb3IiLCJ0cmFuc2l0aW9uYWxEZWZhdWx0cyIsIkNhbmNlbCIsImNvbmZpZyIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0Iiwib25DYW5jZWxlZCIsInJlcXVlc3REYXRhIiwiZGF0YSIsInJlcXVlc3RIZWFkZXJzIiwiaGVhZGVycyIsInJlc3BvbnNlVHlwZSIsImRvbmUiLCJjYW5jZWxUb2tlbiIsInVuc3Vic2NyaWJlIiwic2lnbmFsIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImlzRm9ybURhdGEiLCJyZXF1ZXN0IiwiWE1MSHR0cFJlcXVlc3QiLCJhdXRoIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiQXV0aG9yaXphdGlvbiIsImJ0b2EiLCJmdWxsUGF0aCIsImJhc2VVUkwiLCJ1cmwiLCJvbmxvYWRlbmQiLCJyZXNwb25zZUhlYWRlcnMiLCJnZXRBbGxSZXNwb25zZUhlYWRlcnMiLCJyZXNwb25zZSIsInJlc3BvbnNlVGV4dCIsInN0YXR1cyIsInN0YXR1c1RleHQiLCJ2YWx1ZSIsImVyciIsIm9wZW4iLCJtZXRob2QiLCJ0b1VwcGVyQ2FzZSIsInBhcmFtcyIsInBhcmFtc1NlcmlhbGl6ZXIiLCJ0aW1lb3V0Iiwib25yZWFkeXN0YXRlY2hhbmdlIiwicmVhZHlTdGF0ZSIsInJlc3BvbnNlVVJMIiwiaW5kZXhPZiIsInNldFRpbWVvdXQiLCJvbmFib3J0Iiwib25lcnJvciIsIm9udGltZW91dCIsInRpbWVvdXRFcnJvck1lc3NhZ2UiLCJ0cmFuc2l0aW9uYWwiLCJjbGFyaWZ5VGltZW91dEVycm9yIiwiaXNTdGFuZGFyZEJyb3dzZXJFbnYiLCJ4c3JmVmFsdWUiLCJ3aXRoQ3JlZGVudGlhbHMiLCJ4c3JmQ29va2llTmFtZSIsInJlYWQiLCJ1bmRlZmluZWQiLCJ4c3JmSGVhZGVyTmFtZSIsImZvckVhY2giLCJ2YWwiLCJrZXkiLCJ0b0xvd2VyQ2FzZSIsInNldFJlcXVlc3RIZWFkZXIiLCJpc1VuZGVmaW5lZCIsIm9uRG93bmxvYWRQcm9ncmVzcyIsImFkZEV2ZW50TGlzdGVuZXIiLCJvblVwbG9hZFByb2dyZXNzIiwidXBsb2FkIiwiY2FuY2VsIiwidHlwZSIsImFib3J0Iiwic3Vic2NyaWJlIiwiYWJvcnRlZCIsInNlbmQiLCJiaW5kIiwiQXhpb3MiLCJtZXJnZUNvbmZpZyIsImF4aW9zIiwiY3JlYXRlSW5zdGFuY2UiLCJkZWZhdWx0Q29uZmlnIiwiY29udGV4dCIsImluc3RhbmNlIiwicHJvdG90eXBlIiwiZXh0ZW5kIiwiY3JlYXRlIiwiaW5zdGFuY2VDb25maWciLCJDYW5jZWxUb2tlbiIsImlzQ2FuY2VsIiwiVkVSU0lPTiIsImFsbCIsInByb21pc2VzIiwic3ByZWFkIiwiaXNBeGlvc0Vycm9yIiwibWVzc2FnZSIsInRoaXMiLCJ0b1N0cmluZyIsIl9fQ0FOQ0VMX18iLCJleGVjdXRvciIsIlR5cGVFcnJvciIsInJlc29sdmVQcm9taXNlIiwicHJvbWlzZSIsInRva2VuIiwidGhlbiIsIl9saXN0ZW5lcnMiLCJpIiwibCIsImxlbmd0aCIsIm9uZnVsZmlsbGVkIiwiX3Jlc29sdmUiLCJyZWFzb24iLCJ0aHJvd0lmUmVxdWVzdGVkIiwibGlzdGVuZXIiLCJwdXNoIiwiaW5kZXgiLCJzcGxpY2UiLCJzb3VyY2UiLCJjIiwiSW50ZXJjZXB0b3JNYW5hZ2VyIiwiZGlzcGF0Y2hSZXF1ZXN0IiwidmFsaWRhdG9yIiwidmFsaWRhdG9ycyIsImRlZmF1bHRzIiwiaW50ZXJjZXB0b3JzIiwiY29uZmlnT3JVcmwiLCJhc3NlcnRPcHRpb25zIiwic2lsZW50SlNPTlBhcnNpbmciLCJib29sZWFuIiwiZm9yY2VkSlNPTlBhcnNpbmciLCJyZXF1ZXN0SW50ZXJjZXB0b3JDaGFpbiIsInN5bmNocm9ub3VzUmVxdWVzdEludGVyY2VwdG9ycyIsImludGVyY2VwdG9yIiwicnVuV2hlbiIsInN5bmNocm9ub3VzIiwidW5zaGlmdCIsImZ1bGZpbGxlZCIsInJlamVjdGVkIiwicmVzcG9uc2VJbnRlcmNlcHRvckNoYWluIiwiY2hhaW4iLCJBcnJheSIsImFwcGx5IiwiY29uY2F0Iiwic2hpZnQiLCJuZXdDb25maWciLCJvbkZ1bGZpbGxlZCIsIm9uUmVqZWN0ZWQiLCJlcnJvciIsImdldFVyaSIsInJlcGxhY2UiLCJoYW5kbGVycyIsInVzZSIsIm9wdGlvbnMiLCJlamVjdCIsImlkIiwiZm4iLCJoIiwiaXNBYnNvbHV0ZVVSTCIsImNvbWJpbmVVUkxzIiwicmVxdWVzdGVkVVJMIiwiZW5oYW5jZUVycm9yIiwiY29kZSIsIkVycm9yIiwidHJhbnNmb3JtRGF0YSIsInRocm93SWZDYW5jZWxsYXRpb25SZXF1ZXN0ZWQiLCJjYWxsIiwidHJhbnNmb3JtUmVxdWVzdCIsIm1lcmdlIiwiY29tbW9uIiwiYWRhcHRlciIsInRyYW5zZm9ybVJlc3BvbnNlIiwidG9KU09OIiwibmFtZSIsImRlc2NyaXB0aW9uIiwibnVtYmVyIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwiY29sdW1uTnVtYmVyIiwic3RhY2siLCJjb25maWcxIiwiY29uZmlnMiIsImdldE1lcmdlZFZhbHVlIiwidGFyZ2V0IiwiaXNQbGFpbk9iamVjdCIsImlzQXJyYXkiLCJzbGljZSIsIm1lcmdlRGVlcFByb3BlcnRpZXMiLCJwcm9wIiwidmFsdWVGcm9tQ29uZmlnMiIsImRlZmF1bHRUb0NvbmZpZzIiLCJtZXJnZURpcmVjdEtleXMiLCJtZXJnZU1hcCIsIk9iamVjdCIsImtleXMiLCJjb25maWdWYWx1ZSIsInZhbGlkYXRlU3RhdHVzIiwiZm5zIiwibm9ybWFsaXplSGVhZGVyTmFtZSIsIkRFRkFVTFRfQ09OVEVOVF9UWVBFIiwic2V0Q29udGVudFR5cGVJZlVuc2V0IiwicHJvY2VzcyIsImlzQXJyYXlCdWZmZXIiLCJpc0J1ZmZlciIsImlzU3RyZWFtIiwiaXNGaWxlIiwiaXNCbG9iIiwiaXNBcnJheUJ1ZmZlclZpZXciLCJidWZmZXIiLCJpc1VSTFNlYXJjaFBhcmFtcyIsImlzT2JqZWN0IiwicmF3VmFsdWUiLCJwYXJzZXIiLCJlbmNvZGVyIiwiaXNTdHJpbmciLCJKU09OIiwicGFyc2UiLCJ0cmltIiwiZSIsInN0cmluZ2lmeSIsInN0cmluZ2lmeVNhZmVseSIsInN0cmljdEpTT05QYXJzaW5nIiwibWF4Q29udGVudExlbmd0aCIsIm1heEJvZHlMZW5ndGgiLCJ0aGlzQXJnIiwiYXJncyIsImFyZ3VtZW50cyIsImVuY29kZSIsInNlcmlhbGl6ZWRQYXJhbXMiLCJwYXJ0cyIsInYiLCJpc0RhdGUiLCJ0b0lTT1N0cmluZyIsImpvaW4iLCJoYXNobWFya0luZGV4IiwicmVsYXRpdmVVUkwiLCJ3cml0ZSIsImV4cGlyZXMiLCJwYXRoIiwiZG9tYWluIiwic2VjdXJlIiwiY29va2llIiwiaXNOdW1iZXIiLCJEYXRlIiwidG9HTVRTdHJpbmciLCJkb2N1bWVudCIsIm1hdGNoIiwiUmVnRXhwIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwicmVtb3ZlIiwibm93IiwidGVzdCIsInBheWxvYWQiLCJvcmlnaW5VUkwiLCJtc2llIiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwidXJsUGFyc2luZ05vZGUiLCJjcmVhdGVFbGVtZW50IiwicmVzb2x2ZVVSTCIsImhyZWYiLCJzZXRBdHRyaWJ1dGUiLCJwcm90b2NvbCIsImhvc3QiLCJzZWFyY2giLCJoYXNoIiwiaG9zdG5hbWUiLCJwb3J0IiwicGF0aG5hbWUiLCJjaGFyQXQiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsInJlcXVlc3RVUkwiLCJwYXJzZWQiLCJub3JtYWxpemVkTmFtZSIsImlnbm9yZUR1cGxpY2F0ZU9mIiwic3BsaXQiLCJsaW5lIiwic3Vic3RyIiwiY2FsbGJhY2siLCJhcnIiLCJ0aGluZyIsImRlcHJlY2F0ZWRXYXJuaW5ncyIsInZlcnNpb24iLCJmb3JtYXRNZXNzYWdlIiwib3B0IiwiZGVzYyIsIm9wdHMiLCJjb25zb2xlIiwid2FybiIsInNjaGVtYSIsImFsbG93VW5rbm93biIsInJlc3VsdCIsImdldFByb3RvdHlwZU9mIiwiaXNGdW5jdGlvbiIsIm9iaiIsImhhc093blByb3BlcnR5IiwiY29uc3RydWN0b3IiLCJBcnJheUJ1ZmZlciIsImlzVmlldyIsInBpcGUiLCJwcm9kdWN0IiwiYXNzaWduVmFsdWUiLCJhIiwiYiIsInN0ciIsInN0cmlwQk9NIiwiY29udGVudCIsImNoYXJDb2RlQXQiLCJjbGFzc25hbWUiLCJvYmplY3RzIiwicmVzdWx0U3RyaW5nIiwiYWRkIiwic3RyaW5ncyIsImVhY2giLCJzdHJpbmciLCJ4IiwiZ2V0VHlwZSIsImNsYXNzTmFtZSIsImdldCIsInNldFRvIiwiZWxlbWVudHMiLCJjbGFzc05hbWVzIiwiZWxlbWVudCIsImpxdWVyeSIsIm9iajEiLCJvYmoyIiwib2JqcyIsImdldE93blByb3BlcnR5U3ltYm9scyIsInByb3BJc0VudW1lcmFibGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsInRvT2JqZWN0IiwiYXNzaWduIiwidGVzdDEiLCJTdHJpbmciLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwidGVzdDIiLCJmcm9tQ2hhckNvZGUiLCJtYXAiLCJuIiwidGVzdDMiLCJsZXR0ZXIiLCJzaG91bGRVc2VOYXRpdmUiLCJmcm9tIiwic3ltYm9scyIsInRvIiwicyIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0IiwiZW1wdHlGdW5jdGlvbiIsImVtcHR5RnVuY3Rpb25XaXRoUmVzZXQiLCJyZXNldFdhcm5pbmdDYWNoZSIsInNoaW0iLCJwcm9wcyIsInByb3BOYW1lIiwiY29tcG9uZW50TmFtZSIsInByb3BGdWxsTmFtZSIsInNlY3JldCIsImdldFNoaW0iLCJpc1JlcXVpcmVkIiwiUmVhY3RQcm9wVHlwZXMiLCJhcnJheSIsImJpZ2ludCIsImJvb2wiLCJmdW5jIiwib2JqZWN0Iiwic3ltYm9sIiwiYW55IiwiYXJyYXlPZiIsImVsZW1lbnRUeXBlIiwiaW5zdGFuY2VPZiIsIm5vZGUiLCJvYmplY3RPZiIsIm9uZU9mIiwib25lT2ZUeXBlIiwic2hhcGUiLCJleGFjdCIsImNoZWNrUHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwiYWEiLCJtIiwiciIsInkiLCJiYSIsIlNldCIsImNhIiwiZGEiLCJlYSIsImZhIiwiaGEiLCJpYSIsImphIiwia2EiLCJCIiwiZCIsImYiLCJnIiwiYWNjZXB0c0Jvb2xlYW5zIiwiYXR0cmlidXRlTmFtZSIsImF0dHJpYnV0ZU5hbWVzcGFjZSIsIm11c3RVc2VQcm9wZXJ0eSIsInByb3BlcnR5TmFtZSIsInNhbml0aXplVVJMIiwicmVtb3ZlRW1wdHlTdHJpbmciLCJEIiwib2EiLCJwYSIsInFhIiwibWEiLCJpc05hTiIsIm5hIiwibGEiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsInhsaW5rSHJlZiIsInJhIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJzYSIsInRhIiwidWEiLCJ3YSIsInhhIiwieWEiLCJ6YSIsIkFhIiwiQmEiLCJDYSIsIkRhIiwiRWEiLCJGYSIsIkdhIiwiSGEiLCJJYSIsIkphIiwiU3ltYm9sIiwiZm9yIiwiRSIsIk1hIiwiS2EiLCJpdGVyYXRvciIsIkxhIiwiTmEiLCJPYSIsIlBhIiwicHJlcGFyZVN0YWNrVHJhY2UiLCJkZWZpbmVQcm9wZXJ0eSIsInNldCIsIlJlZmxlY3QiLCJjb25zdHJ1Y3QiLCJrIiwiZGlzcGxheU5hbWUiLCJRYSIsInRhZyIsInJlbmRlciIsIl9yZW5kZXIiLCJSYSIsIiQkdHlwZW9mIiwiX2NvbnRleHQiLCJfcGF5bG9hZCIsIl9pbml0IiwiU2EiLCJUYSIsIm5vZGVOYW1lIiwiVmEiLCJfdmFsdWVUcmFja2VyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldFZhbHVlIiwic2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJVYSIsIldhIiwiY2hlY2tlZCIsIlhhIiwiYWN0aXZlRWxlbWVudCIsImJvZHkiLCJZYSIsImRlZmF1bHRDaGVja2VkIiwiZGVmYXVsdFZhbHVlIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwiWmEiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwiJGEiLCJhYiIsImJiIiwiY2IiLCJvd25lckRvY3VtZW50IiwiZWIiLCJjaGlsZHJlbiIsIkNoaWxkcmVuIiwiZGIiLCJmYiIsInNlbGVjdGVkIiwiZGVmYXVsdFNlbGVjdGVkIiwiZGlzYWJsZWQiLCJnYiIsImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIiwiaGIiLCJpYiIsImpiIiwidGV4dENvbnRlbnQiLCJrYiIsImxiIiwibWIiLCJuYiIsIm9iIiwibmFtZXNwYWNlVVJJIiwiaW5uZXJIVE1MIiwidmFsdWVPZiIsImZpcnN0Q2hpbGQiLCJyZW1vdmVDaGlsZCIsImFwcGVuZENoaWxkIiwiTVNBcHAiLCJleGVjVW5zYWZlTG9jYWxGdW5jdGlvbiIsInBiIiwibGFzdENoaWxkIiwibm9kZVR5cGUiLCJub2RlVmFsdWUiLCJxYiIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiYm9yZGVySW1hZ2VPdXRzZXQiLCJib3JkZXJJbWFnZVNsaWNlIiwiYm9yZGVySW1hZ2VXaWR0aCIsImJveEZsZXgiLCJib3hGbGV4R3JvdXAiLCJib3hPcmRpbmFsR3JvdXAiLCJjb2x1bW5Db3VudCIsImNvbHVtbnMiLCJmbGV4IiwiZmxleEdyb3ciLCJmbGV4UG9zaXRpdmUiLCJmbGV4U2hyaW5rIiwiZmxleE5lZ2F0aXZlIiwiZmxleE9yZGVyIiwiZ3JpZEFyZWEiLCJncmlkUm93IiwiZ3JpZFJvd0VuZCIsImdyaWRSb3dTcGFuIiwiZ3JpZFJvd1N0YXJ0IiwiZ3JpZENvbHVtbiIsImdyaWRDb2x1bW5FbmQiLCJncmlkQ29sdW1uU3BhbiIsImdyaWRDb2x1bW5TdGFydCIsImZvbnRXZWlnaHQiLCJsaW5lQ2xhbXAiLCJsaW5lSGVpZ2h0Iiwib3BhY2l0eSIsIm9yZGVyIiwib3JwaGFucyIsInRhYlNpemUiLCJ3aWRvd3MiLCJ6SW5kZXgiLCJ6b29tIiwiZmlsbE9wYWNpdHkiLCJmbG9vZE9wYWNpdHkiLCJzdG9wT3BhY2l0eSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJzdHJva2VNaXRlcmxpbWl0Iiwic3Ryb2tlT3BhY2l0eSIsInN0cm9rZVdpZHRoIiwicmIiLCJzYiIsInRiIiwic3R5bGUiLCJzZXRQcm9wZXJ0eSIsInN1YnN0cmluZyIsInViIiwibWVudWl0ZW0iLCJhcmVhIiwiYmFzZSIsImJyIiwiY29sIiwiZW1iZWQiLCJociIsImltZyIsImlucHV0Iiwia2V5Z2VuIiwibGluayIsIm1ldGEiLCJwYXJhbSIsInRyYWNrIiwid2JyIiwidmIiLCJ3YiIsImlzIiwieGIiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwieWIiLCJ6YiIsIkFiIiwiQmIiLCJDYiIsInN0YXRlTm9kZSIsIkRiIiwiRWIiLCJGYiIsIkdiIiwiSGIiLCJJYiIsIkpiIiwiS2IiLCJMYiIsIk1iIiwiT2IiLCJQYiIsIlFiIiwiUmIiLCJvbkVycm9yIiwiU2IiLCJUYiIsIlViIiwiVmIiLCJXYiIsIlhiIiwiWmIiLCJhbHRlcm5hdGUiLCJyZXR1cm4iLCJmbGFncyIsIiRiIiwibWVtb2l6ZWRTdGF0ZSIsImRlaHlkcmF0ZWQiLCJhYyIsImNjIiwiY2hpbGQiLCJzaWJsaW5nIiwiY3VycmVudCIsImJjIiwiZGMiLCJlYyIsImZjIiwiZ2MiLCJoYyIsImljIiwiamMiLCJrYyIsImxjIiwibWMiLCJuYyIsIk1hcCIsIm9jIiwicGMiLCJxYyIsInJjIiwiYmxvY2tlZE9uIiwiZG9tRXZlbnROYW1lIiwiZXZlbnRTeXN0ZW1GbGFncyIsIm5hdGl2ZUV2ZW50IiwidGFyZ2V0Q29udGFpbmVycyIsInNjIiwiZGVsZXRlIiwicG9pbnRlcklkIiwidGMiLCJ2YyIsIndjIiwibGFuZVByaW9yaXR5IiwidW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IiwicHJpb3JpdHkiLCJoeWRyYXRlIiwiY29udGFpbmVySW5mbyIsInhjIiwieWMiLCJ6YyIsIkFjIiwiQmMiLCJ1bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrIiwidW5zdGFibGVfTm9ybWFsUHJpb3JpdHkiLCJDYyIsIkRjIiwiRWMiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJGYyIsIkdjIiwiSGMiLCJhbmltYXRpb24iLCJ0cmFuc2l0aW9uIiwiSWMiLCJKYyIsIktjIiwiTGMiLCJNYyIsIk5jIiwiT2MiLCJQYyIsIlFjIiwidW5zdGFibGVfbm93IiwiRiIsIlJjIiwiVWMiLCJwZW5kaW5nTGFuZXMiLCJleHBpcmVkTGFuZXMiLCJzdXNwZW5kZWRMYW5lcyIsInBpbmdlZExhbmVzIiwiVmMiLCJlbnRhbmdsZWRMYW5lcyIsImVudGFuZ2xlbWVudHMiLCJXYyIsIlhjIiwiWWMiLCJaYyIsIiRjIiwiZXZlbnRUaW1lcyIsIk1hdGgiLCJjbHozMiIsImJkIiwiY2QiLCJsb2ciLCJMTjIiLCJkZCIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwiZWQiLCJmZCIsImdkIiwiaGQiLCJ1YyIsImpkIiwia2QiLCJsZCIsIm1kIiwibmQiLCJvZCIsImtleUNvZGUiLCJjaGFyQ29kZSIsInBkIiwicWQiLCJyZCIsIl9yZWFjdE5hbWUiLCJfdGFyZ2V0SW5zdCIsImN1cnJlbnRUYXJnZXQiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmV0dXJuVmFsdWUiLCJpc1Byb3BhZ2F0aW9uU3RvcHBlZCIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwiY2FuY2VsQnViYmxlIiwicGVyc2lzdCIsImlzUGVyc2lzdGVudCIsIndkIiwieGQiLCJ5ZCIsInNkIiwiZXZlbnRQaGFzZSIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwidGltZVN0YW1wIiwiaXNUcnVzdGVkIiwidGQiLCJ1ZCIsInZpZXciLCJkZXRhaWwiLCJ2ZCIsIkFkIiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsInBhZ2VYIiwicGFnZVkiLCJjdHJsS2V5Iiwic2hpZnRLZXkiLCJhbHRLZXkiLCJtZXRhS2V5IiwiZ2V0TW9kaWZpZXJTdGF0ZSIsInpkIiwiYnV0dG9uIiwiYnV0dG9ucyIsInJlbGF0ZWRUYXJnZXQiLCJmcm9tRWxlbWVudCIsInRvRWxlbWVudCIsIm1vdmVtZW50WCIsIm1vdmVtZW50WSIsIkJkIiwiRGQiLCJkYXRhVHJhbnNmZXIiLCJGZCIsIkhkIiwiYW5pbWF0aW9uTmFtZSIsImVsYXBzZWRUaW1lIiwicHNldWRvRWxlbWVudCIsIklkIiwiY2xpcGJvYXJkRGF0YSIsIkpkIiwiTGQiLCJNZCIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJOZCIsIk9kIiwiQWx0IiwiQ29udHJvbCIsIk1ldGEiLCJTaGlmdCIsIlBkIiwiUWQiLCJyZXBlYXQiLCJsb2NhbGUiLCJ3aGljaCIsIlJkIiwiVGQiLCJ3aWR0aCIsImhlaWdodCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJWZCIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJYZCIsIllkIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCJaZCIsIiRkIiwiYWUiLCJiZSIsImRvY3VtZW50TW9kZSIsImNlIiwiZGUiLCJlZSIsImZlIiwiZ2UiLCJoZSIsImllIiwibGUiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImVtYWlsIiwibW9udGgiLCJyYW5nZSIsInRlbCIsInRleHQiLCJ0aW1lIiwid2VlayIsIm1lIiwibmUiLCJvZSIsImV2ZW50IiwibGlzdGVuZXJzIiwicGUiLCJxZSIsInJlIiwic2UiLCJ0ZSIsInVlIiwidmUiLCJ3ZSIsInhlIiwieWUiLCJ6ZSIsIm9uaW5wdXQiLCJBZSIsImRldGFjaEV2ZW50IiwiQmUiLCJDZSIsImF0dGFjaEV2ZW50IiwiRGUiLCJFZSIsIkZlIiwiSGUiLCJJZSIsIkplIiwiS2UiLCJMZSIsIm9mZnNldCIsIm5leHRTaWJsaW5nIiwiTWUiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwiTmUiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnRXaW5kb3ciLCJPZSIsImNvbnRlbnRFZGl0YWJsZSIsIlBlIiwiUWUiLCJSZSIsIlNlIiwiVGUiLCJVZSIsInN0YXJ0Iiwic2VsZWN0aW9uU3RhcnQiLCJlbmQiLCJzZWxlY3Rpb25FbmQiLCJhbmNob3JOb2RlIiwiZGVmYXVsdFZpZXciLCJnZXRTZWxlY3Rpb24iLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsIlZlIiwiV2UiLCJYZSIsIlllIiwiWmUiLCJZYiIsIkciLCIkZSIsImhhcyIsImFmIiwiYmYiLCJyYW5kb20iLCJjZiIsImRmIiwiY2FwdHVyZSIsInBhc3NpdmUiLCJOYiIsInciLCJ6IiwidSIsInEiLCJ0IiwiZWYiLCJmZiIsInBhcmVudFdpbmRvdyIsImdmIiwiaGYiLCJKIiwiSyIsIlEiLCJMIiwiamUiLCJjaGFyIiwia2UiLCJqZiIsImtmIiwibGYiLCJtZiIsImF1dG9Gb2N1cyIsIm5mIiwiX19odG1sIiwib2YiLCJwZiIsImNsZWFyVGltZW91dCIsInFmIiwicmYiLCJzZiIsInByZXZpb3VzU2libGluZyIsInRmIiwidmYiLCJ3ZiIsInhmIiwieWYiLCJ6ZiIsIkFmIiwiQmYiLCJIIiwiSSIsIkNmIiwiTSIsIk4iLCJEZiIsIkVmIiwiY29udGV4dFR5cGVzIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0IiwiRmYiLCJjaGlsZENvbnRleHRUeXBlcyIsIkdmIiwiSGYiLCJJZiIsImdldENoaWxkQ29udGV4dCIsIkpmIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQiLCJLZiIsIkxmIiwiTWYiLCJOZiIsIk9mIiwiUGYiLCJ1bnN0YWJsZV9jYW5jZWxDYWxsYmFjayIsIlFmIiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJSZiIsInVuc3RhYmxlX3JlcXVlc3RQYWludCIsIlNmIiwiVGYiLCJ1bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCIsIlVmIiwidW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHkiLCJWZiIsIldmIiwiWGYiLCJ1bnN0YWJsZV9Mb3dQcmlvcml0eSIsIllmIiwidW5zdGFibGVfSWRsZVByaW9yaXR5IiwiWmYiLCIkZiIsImFnIiwiYmciLCJjZyIsImRnIiwiTyIsImVnIiwiZmciLCJnZyIsImhnIiwiaWciLCJqZyIsImtnIiwiUmVhY3RDdXJyZW50QmF0Y2hDb25maWciLCJsZyIsImRlZmF1bHRQcm9wcyIsIm1nIiwibmciLCJvZyIsInBnIiwicWciLCJyZyIsIl9jdXJyZW50VmFsdWUiLCJzZyIsImNoaWxkTGFuZXMiLCJ0ZyIsImRlcGVuZGVuY2llcyIsImZpcnN0Q29udGV4dCIsImxhbmVzIiwidWciLCJ2ZyIsIm9ic2VydmVkQml0cyIsIm5leHQiLCJyZXNwb25kZXJzIiwid2ciLCJ4ZyIsInVwZGF0ZVF1ZXVlIiwiYmFzZVN0YXRlIiwiZmlyc3RCYXNlVXBkYXRlIiwibGFzdEJhc2VVcGRhdGUiLCJzaGFyZWQiLCJwZW5kaW5nIiwiZWZmZWN0cyIsInlnIiwiemciLCJldmVudFRpbWUiLCJsYW5lIiwiQWciLCJCZyIsIkNnIiwiQSIsInAiLCJDIiwiRGciLCJFZyIsIkZnIiwiQ29tcG9uZW50IiwicmVmcyIsIkdnIiwiS2ciLCJpc01vdW50ZWQiLCJfcmVhY3RJbnRlcm5hbHMiLCJlbnF1ZXVlU2V0U3RhdGUiLCJIZyIsIklnIiwiSmciLCJlbnF1ZXVlUmVwbGFjZVN0YXRlIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiTGciLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsIk1nIiwiY29udGV4dFR5cGUiLCJzdGF0ZSIsInVwZGF0ZXIiLCJOZyIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIk9nIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJQZyIsIlFnIiwicmVmIiwiX293bmVyIiwiX3N0cmluZ1JlZiIsIlJnIiwiU2ciLCJsYXN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImZpcnN0RWZmZWN0IiwiVGciLCJVZyIsIm1vZGUiLCJWZyIsImltcGxlbWVudGF0aW9uIiwiV2ciLCJYZyIsIllnIiwiWmciLCIkZyIsImFoIiwiYmgiLCJjaCIsImRoIiwiZWgiLCJkb2N1bWVudEVsZW1lbnQiLCJ0YWdOYW1lIiwiZmgiLCJnaCIsImhoIiwiUCIsImloIiwibWVtb2l6ZWRQcm9wcyIsInJldmVhbE9yZGVyIiwiamgiLCJraCIsImxoIiwibWgiLCJuaCIsIm9oIiwicGVuZGluZ1Byb3BzIiwicGgiLCJxaCIsInJoIiwic2giLCJ0aCIsInVoIiwiX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnkiLCJ2aCIsIlJlYWN0Q3VycmVudERpc3BhdGNoZXIiLCJ3aCIsInhoIiwiUiIsIlMiLCJUIiwieWgiLCJ6aCIsIkFoIiwiQmgiLCJDaCIsIkRoIiwiRWgiLCJGaCIsIkdoIiwiSGgiLCJiYXNlUXVldWUiLCJxdWV1ZSIsIkloIiwiSmgiLCJLaCIsImxhc3RSZW5kZXJlZFJlZHVjZXIiLCJhY3Rpb24iLCJlYWdlclJlZHVjZXIiLCJlYWdlclN0YXRlIiwibGFzdFJlbmRlcmVkU3RhdGUiLCJkaXNwYXRjaCIsIkxoIiwiTWgiLCJfZ2V0VmVyc2lvbiIsIl9zb3VyY2UiLCJtdXRhYmxlUmVhZExhbmVzIiwiTmgiLCJVIiwidXNlU3RhdGUiLCJnZXRTbmFwc2hvdCIsInVzZUVmZmVjdCIsInNldFNuYXBzaG90IiwiT2giLCJQaCIsIlFoIiwiUmgiLCJkZXN0cm95IiwiZGVwcyIsIlNoIiwiVGgiLCJVaCIsIlZoIiwiV2giLCJYaCIsIlloIiwiWmgiLCIkaCIsImFpIiwiYmkiLCJjaSIsImRpIiwicmVhZENvbnRleHQiLCJ1c2VDYWxsYmFjayIsInVzZUNvbnRleHQiLCJ1c2VJbXBlcmF0aXZlSGFuZGxlIiwidXNlTGF5b3V0RWZmZWN0IiwidXNlTWVtbyIsInVzZVJlZHVjZXIiLCJ1c2VSZWYiLCJ1c2VEZWJ1Z1ZhbHVlIiwidXNlRGVmZXJyZWRWYWx1ZSIsInVzZVRyYW5zaXRpb24iLCJ1c2VNdXRhYmxlU291cmNlIiwidXNlT3BhcXVlSWRlbnRpZmllciIsInVuc3RhYmxlX2lzTmV3UmVjb25jaWxlciIsInVmIiwiZWkiLCJSZWFjdEN1cnJlbnRPd25lciIsImZpIiwiZ2kiLCJoaSIsImlpIiwiamkiLCJjb21wYXJlIiwia2kiLCJsaSIsIm1pIiwiYmFzZUxhbmVzIiwibmkiLCJvaSIsInBpIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwicWkiLCJnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IiLCJyaSIsInBlbmRpbmdDb250ZXh0IiwiQmkiLCJEaSIsIkVpIiwic2kiLCJyZXRyeUxhbmUiLCJ0aSIsImZhbGxiYWNrIiwidW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2siLCJ1aSIsInVuc3RhYmxlX2V4cGVjdGVkTG9hZFRpbWUiLCJ2aSIsIndpIiwieGkiLCJ5aSIsInppIiwiaXNCYWNrd2FyZHMiLCJyZW5kZXJpbmciLCJyZW5kZXJpbmdTdGFydFRpbWUiLCJsYXN0IiwidGFpbCIsInRhaWxNb2RlIiwiQWkiLCJGaSIsIkdpIiwid2FzTXVsdGlwbGUiLCJtdWx0aXBsZSIsIm9uQ2xpY2siLCJvbmNsaWNrIiwic2l6ZSIsImNyZWF0ZUVsZW1lbnROUyIsImNyZWF0ZVRleHROb2RlIiwiViIsIkhpIiwiSWkiLCJXIiwiSmkiLCJLaSIsIkxpIiwiTWkiLCJOaSIsIk9pIiwiV2Vha01hcCIsIlBpIiwiUWkiLCJSaSIsIlNpIiwiY29tcG9uZW50RGlkQ2F0Y2giLCJUaSIsImNvbXBvbmVudFN0YWNrIiwiVWkiLCJXZWFrU2V0IiwiVmkiLCJXaSIsIlhpIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJZaSIsIlppIiwiJGkiLCJmb2N1cyIsImFqIiwiZGlzcGxheSIsImJqIiwib25Db21taXRGaWJlclVubW91bnQiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsImNqIiwiZGoiLCJlaiIsImZqIiwiZ2oiLCJoaiIsImluc2VydEJlZm9yZSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJpaiIsImpqIiwia2oiLCJsaiIsIm1qIiwibmoiLCJjZWlsIiwib2oiLCJwaiIsIlgiLCJZIiwicWoiLCJyaiIsInNqIiwidGoiLCJ1aiIsInZqIiwiSW5maW5pdHkiLCJ3aiIsImNrIiwiWiIsInhqIiwieWoiLCJ6aiIsIkFqIiwiQmoiLCJDaiIsIkRqIiwiRWoiLCJGaiIsIkdqIiwiSGoiLCJJaiIsIkpqIiwiU2MiLCJLaiIsIkxqIiwiTWoiLCJjYWxsYmFja05vZGUiLCJleHBpcmF0aW9uVGltZXMiLCJjYWxsYmFja1ByaW9yaXR5IiwiVGMiLCJOaiIsIk9qIiwiUGoiLCJRaiIsIlJqIiwiU2oiLCJUaiIsImZpbmlzaGVkV29yayIsImZpbmlzaGVkTGFuZXMiLCJVaiIsInRpbWVvdXRIYW5kbGUiLCJXaiIsIlhqIiwicGluZ0NhY2hlIiwiWWoiLCJaaiIsInZhIiwiYWsiLCJiayIsImRrIiwicmFuZ2VDb3VudCIsImZvY3VzZWRFbGVtIiwic2VsZWN0aW9uUmFuZ2UiLCJlayIsIm1pbiIsImNyZWF0ZVJhbmdlIiwic2V0U3RhcnQiLCJyZW1vdmVBbGxSYW5nZXMiLCJhZGRSYW5nZSIsInNldEVuZCIsImxlZnQiLCJzY3JvbGxMZWZ0IiwidG9wIiwic2Nyb2xsVG9wIiwib25Db21taXRGaWJlclJvb3QiLCJmayIsImdrIiwiaWsiLCJpc1JlYWN0Q29tcG9uZW50IiwicGVuZGluZ0NoaWxkcmVuIiwiamsiLCJtdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhIiwia2siLCJsayIsIm1rIiwibmsiLCJvayIsInFrIiwiaHlkcmF0aW9uT3B0aW9ucyIsIm11dGFibGVTb3VyY2VzIiwiX2ludGVybmFsUm9vdCIsInJrIiwidGsiLCJoYXNBdHRyaWJ1dGUiLCJzayIsInVrIiwiaGsiLCJfY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJ1bnN0YWJsZV9vYnNlcnZlZEJpdHMiLCJ1bm1vdW50IiwicXVlcnlTZWxlY3RvckFsbCIsImZvcm0iLCJWaiIsInZrIiwiRXZlbnRzIiwid2siLCJmaW5kRmliZXJCeUhvc3RJbnN0YW5jZSIsImJ1bmRsZVR5cGUiLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwieGsiLCJyZW5kZXJlckNvbmZpZyIsIm92ZXJyaWRlSG9va1N0YXRlIiwib3ZlcnJpZGVIb29rU3RhdGVEZWxldGVQYXRoIiwib3ZlcnJpZGVIb29rU3RhdGVSZW5hbWVQYXRoIiwib3ZlcnJpZGVQcm9wcyIsIm92ZXJyaWRlUHJvcHNEZWxldGVQYXRoIiwib3ZlcnJpZGVQcm9wc1JlbmFtZVBhdGgiLCJzZXRTdXNwZW5zZUhhbmRsZXIiLCJzY2hlZHVsZVVwZGF0ZSIsImN1cnJlbnREaXNwYXRjaGVyUmVmIiwiZmluZEhvc3RJbnN0YW5jZUJ5RmliZXIiLCJmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2giLCJzY2hlZHVsZVJlZnJlc2giLCJzY2hlZHVsZVJvb3QiLCJzZXRSZWZyZXNoSGFuZGxlciIsImdldEN1cnJlbnRGaWJlciIsIl9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyIsInlrIiwiaXNEaXNhYmxlZCIsInN1cHBvcnRzRmliZXIiLCJpbmplY3QiLCJjcmVhdGVQb3J0YWwiLCJmaW5kRE9NTm9kZSIsImZsdXNoU3luYyIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsInVuc3RhYmxlX2NyZWF0ZVBvcnRhbCIsInVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwiY2hlY2tEQ0UiLCJGcmFnbWVudCIsIlN0cmljdE1vZGUiLCJQcm9maWxlciIsIlN1c3BlbnNlIiwic2V0U3RhdGUiLCJmb3JjZVVwZGF0ZSIsIl9fc2VsZiIsIl9fc291cmNlIiwiZXNjYXBlIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJkZWZhdWx0IiwiSXNTb21lUmVuZGVyZXJBY3RpbmciLCJjb3VudCIsInRvQXJyYXkiLCJvbmx5IiwiUHVyZUNvbXBvbmVudCIsImNsb25lRWxlbWVudCIsImNyZWF0ZUNvbnRleHQiLCJfY3VycmVudFZhbHVlMiIsIl90aHJlYWRDb3VudCIsIlByb3ZpZGVyIiwiQ29uc3VtZXIiLCJjcmVhdGVGYWN0b3J5IiwiY3JlYXRlUmVmIiwiZm9yd2FyZFJlZiIsImlzVmFsaWRFbGVtZW50IiwibGF6eSIsIm1lbW8iLCJydW50aW1lIiwiT3AiLCJoYXNPd24iLCIkU3ltYm9sIiwiaXRlcmF0b3JTeW1ib2wiLCJhc3luY0l0ZXJhdG9yU3ltYm9sIiwiYXN5bmNJdGVyYXRvciIsInRvU3RyaW5nVGFnU3ltYm9sIiwidG9TdHJpbmdUYWciLCJkZWZpbmUiLCJ3cml0YWJsZSIsIndyYXAiLCJpbm5lckZuIiwib3V0ZXJGbiIsInNlbGYiLCJ0cnlMb2NzTGlzdCIsInByb3RvR2VuZXJhdG9yIiwiR2VuZXJhdG9yIiwiZ2VuZXJhdG9yIiwiQ29udGV4dCIsIl9pbnZva2UiLCJHZW5TdGF0ZVN1c3BlbmRlZFN0YXJ0IiwiYXJnIiwiR2VuU3RhdGVFeGVjdXRpbmciLCJHZW5TdGF0ZUNvbXBsZXRlZCIsImRvbmVSZXN1bHQiLCJkZWxlZ2F0ZSIsImRlbGVnYXRlUmVzdWx0IiwibWF5YmVJbnZva2VEZWxlZ2F0ZSIsIkNvbnRpbnVlU2VudGluZWwiLCJzZW50IiwiX3NlbnQiLCJkaXNwYXRjaEV4Y2VwdGlvbiIsImFicnVwdCIsInJlY29yZCIsInRyeUNhdGNoIiwiR2VuU3RhdGVTdXNwZW5kZWRZaWVsZCIsIm1ha2VJbnZva2VNZXRob2QiLCJHZW5lcmF0b3JGdW5jdGlvbiIsIkdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlIiwiSXRlcmF0b3JQcm90b3R5cGUiLCJnZXRQcm90byIsIk5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlIiwidmFsdWVzIiwiR3AiLCJkZWZpbmVJdGVyYXRvck1ldGhvZHMiLCJBc3luY0l0ZXJhdG9yIiwiUHJvbWlzZUltcGwiLCJpbnZva2UiLCJfX2F3YWl0IiwidW53cmFwcGVkIiwicHJldmlvdXNQcm9taXNlIiwiY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmciLCJpbmZvIiwicmVzdWx0TmFtZSIsIm5leHRMb2MiLCJwdXNoVHJ5RW50cnkiLCJsb2NzIiwiZW50cnkiLCJ0cnlMb2MiLCJjYXRjaExvYyIsImZpbmFsbHlMb2MiLCJhZnRlckxvYyIsInRyeUVudHJpZXMiLCJyZXNldFRyeUVudHJ5IiwiY29tcGxldGlvbiIsInJlc2V0IiwiaXRlcmFibGUiLCJpdGVyYXRvck1ldGhvZCIsImlzR2VuZXJhdG9yRnVuY3Rpb24iLCJnZW5GdW4iLCJjdG9yIiwibWFyayIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiYXdyYXAiLCJhc3luYyIsIml0ZXIiLCJyZXZlcnNlIiwicG9wIiwic2tpcFRlbXBSZXNldCIsInByZXYiLCJzdG9wIiwicm9vdFJlY29yZCIsInJ2YWwiLCJleGNlcHRpb24iLCJoYW5kbGUiLCJsb2MiLCJjYXVnaHQiLCJoYXNDYXRjaCIsImhhc0ZpbmFsbHkiLCJmaW5hbGx5RW50cnkiLCJjb21wbGV0ZSIsImZpbmlzaCIsInRocm93biIsImRlbGVnYXRlWWllbGQiLCJyZWdlbmVyYXRvclJ1bnRpbWUiLCJhY2NpZGVudGFsU3RyaWN0TW9kZSIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInBlcmZvcm1hbmNlIiwiTWVzc2FnZUNoYW5uZWwiLCJ1bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiZmxvb3IiLCJwb3J0MiIsInBvcnQxIiwib25tZXNzYWdlIiwicG9zdE1lc3NhZ2UiLCJzb3J0SW5kZXgiLCJzdGFydFRpbWUiLCJleHBpcmF0aW9uVGltZSIsInByaW9yaXR5TGV2ZWwiLCJ1bnN0YWJsZV9Qcm9maWxpbmciLCJ1bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbiIsInVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlIiwidW5zdGFibGVfbmV4dCIsInVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uIiwiZGVsYXkiLCJ1bnN0YWJsZV93cmFwQ2FsbGJhY2siLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImRlZmluaXRpb24iLCJvIiwiQWN0aW9uIiwiQmVmb3JlVW5sb2FkRXZlbnRUeXBlIiwicHJvbXB0QmVmb3JlVW5sb2FkIiwiY3JlYXRlRXZlbnRzIiwiZmlsdGVyIiwiaGFuZGxlciIsImNyZWF0ZVBhdGgiLCJfcmVmIiwiX3JlZiRwYXRobmFtZSIsIl9yZWYkc2VhcmNoIiwiX3JlZiRoYXNoIiwicGFyc2VQYXRoIiwicGFyc2VkUGF0aCIsImhhc2hJbmRleCIsInNlYXJjaEluZGV4IiwiTmF2aWdhdGlvbkNvbnRleHQiLCJMb2NhdGlvbkNvbnRleHQiLCJSb3V0ZUNvbnRleHQiLCJvdXRsZXQiLCJtYXRjaGVzIiwiaW52YXJpYW50IiwiY29uZCIsIm1hdGNoUm91dGVzIiwicm91dGVzIiwibG9jYXRpb25BcmciLCJiYXNlbmFtZSIsInN0cmlwQmFzZW5hbWUiLCJicmFuY2hlcyIsImZsYXR0ZW5Sb3V0ZXMiLCJzb3J0Iiwic2NvcmUiLCJldmVyeSIsImNvbXBhcmVJbmRleGVzIiwicm91dGVzTWV0YSIsImNoaWxkcmVuSW5kZXgiLCJyYW5rUm91dGVCcmFuY2hlcyIsIm1hdGNoUm91dGVCcmFuY2giLCJwYXJlbnRzTWV0YSIsInBhcmVudFBhdGgiLCJyb3V0ZSIsInJlbGF0aXZlUGF0aCIsImNhc2VTZW5zaXRpdmUiLCJzdGFydHNXaXRoIiwiam9pblBhdGhzIiwiY29tcHV0ZVNjb3JlIiwicGFyYW1SZSIsImlzU3BsYXQiLCJzZWdtZW50cyIsImluaXRpYWxTY29yZSIsInNvbWUiLCJyZWR1Y2UiLCJzZWdtZW50IiwiYnJhbmNoIiwibWF0Y2hlZFBhcmFtcyIsIm1hdGNoZWRQYXRobmFtZSIsInJlbWFpbmluZ1BhdGhuYW1lIiwibWF0Y2hQYXRoIiwicGF0aG5hbWVCYXNlIiwibm9ybWFsaXplUGF0aG5hbWUiLCJwYXR0ZXJuIiwibWF0Y2hlciIsInBhcmFtTmFtZXMiLCJyZWdleHBTb3VyY2UiLCJfIiwicGFyYW1OYW1lIiwiZW5kc1dpdGgiLCJjb21waWxlUGF0aCIsImNhcHR1cmVHcm91cHMiLCJzcGxhdFZhbHVlIiwic2FmZWx5RGVjb2RlVVJJQ29tcG9uZW50IiwicmVzb2x2ZVRvIiwidG9BcmciLCJyb3V0ZVBhdGhuYW1lcyIsImxvY2F0aW9uUGF0aG5hbWUiLCJ0b1BhdGhuYW1lIiwicm91dGVQYXRobmFtZUluZGV4IiwidG9TZWdtZW50cyIsImZyb21QYXRobmFtZSIsInJlc29sdmVQYXRobmFtZSIsIm5vcm1hbGl6ZVNlYXJjaCIsIm5vcm1hbGl6ZUhhc2giLCJyZXNvbHZlUGF0aCIsIm5leHRDaGFyIiwicGF0aHMiLCJ1c2VJblJvdXRlckNvbnRleHQiLCJ1c2VSZXNvbHZlZFBhdGgiLCJyb3V0ZVBhdGhuYW1lc0pzb24iLCJSb3V0ZSIsIl9wcm9wcyIsIl9yZWYzIiwiYmFzZW5hbWVQcm9wIiwibG9jYXRpb25Qcm9wIiwibmF2aWdhdGlvblR5cGUiLCJQb3AiLCJzdGF0aWMiLCJzdGF0aWNQcm9wIiwibmF2aWdhdGlvbkNvbnRleHQiLCJ0cmFpbGluZ1BhdGhuYW1lIiwiUm91dGVzIiwiX3JlZjQiLCJwYXJlbnRNYXRjaGVzIiwicm91dGVNYXRjaCIsInBhcmVudFBhcmFtcyIsInBhcmVudFBhdGhuYW1lQmFzZSIsImxvY2F0aW9uRnJvbUNvbnRleHQiLCJfcGFyc2VkTG9jYXRpb25BcmckcGEiLCJwYXJzZWRMb2NhdGlvbkFyZyIsInJlZHVjZVJpZ2h0IiwiX3JlbmRlck1hdGNoZXMiLCJ1c2VSb3V0ZXMiLCJjcmVhdGVSb3V0ZXNGcm9tQ2hpbGRyZW4iLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSIsImV4Y2x1ZGVkIiwic291cmNlS2V5cyIsIl9leGNsdWRlZCIsIl9leGNsdWRlZDIiLCJIYXNoUm91dGVyIiwiX3JlZjIiLCJoaXN0b3J5UmVmIiwiX29wdGlvbnMyJHdpbmRvdyIsImdsb2JhbEhpc3RvcnkiLCJoaXN0b3J5IiwiZ2V0SW5kZXhBbmRMb2NhdGlvbiIsIl9wYXJzZVBhdGgiLCJfcGFyc2VQYXRoJHBhdGhuYW1lIiwiX3BhcnNlUGF0aCRzZWFyY2giLCJfcGFyc2VQYXRoJGhhc2giLCJpZHgiLCJ1c3IiLCJibG9ja2VkUG9wVHgiLCJoYW5kbGVQb3AiLCJibG9ja2VycyIsIm5leHRBY3Rpb24iLCJfZ2V0SW5kZXhBbmRMb2NhdGlvbjQiLCJuZXh0SW5kZXgiLCJuZXh0TG9jYXRpb24iLCJkZWx0YSIsInJldHJ5IiwiZ28iLCJhcHBseVR4IiwiX2dldEluZGV4QW5kTG9jYXRpb242IiwiY3JlYXRlSHJlZiIsInF1ZXJ5U2VsZWN0b3IiLCJnZXRBdHRyaWJ1dGUiLCJnZXRCYXNlSHJlZiIsImdldE5leHRMb2NhdGlvbiIsImdldEhpc3RvcnlTdGF0ZUFuZFVybCIsImFsbG93VHgiLCJfZ2V0SW5kZXhBbmRMb2NhdGlvbjciLCJyZXBsYWNlU3RhdGUiLCJQdXNoIiwiX2dldEhpc3RvcnlTdGF0ZUFuZFVyMyIsImhpc3RvcnlTdGF0ZSIsInB1c2hTdGF0ZSIsIlJlcGxhY2UiLCJfZ2V0SGlzdG9yeVN0YXRlQW5kVXI0IiwiYmFjayIsImZvcndhcmQiLCJsaXN0ZW4iLCJibG9jayIsImJsb2NrZXIiLCJ1bmJsb2NrIiwiY3JlYXRlSGFzaEhpc3RvcnkiLCJMaW5rIiwicmVsb2FkRG9jdW1lbnQiLCJyZXN0Iiwiam9pbmVkUGF0aG5hbWUiLCJnZXRUb1BhdGhuYW1lIiwiZW5kc1dpdGhTbGFzaCIsInVzZUhyZWYiLCJpbnRlcm5hbE9uQ2xpY2siLCJfdGVtcCIsInJlcGxhY2VQcm9wIiwibmF2aWdhdGUiLCJhY3RpdmVSZWYiLCJpc01vZGlmaWVkRXZlbnQiLCJ1c2VMaW5rQ2xpY2tIYW5kbGVyIiwiTmF2TGluayIsIl9yZWY1IiwiYXJpYUN1cnJlbnRQcm9wIiwiY2xhc3NOYW1lUHJvcCIsInN0eWxlUHJvcCIsImlzQWN0aXZlIiwiYXJpYUN1cnJlbnQiLCJCb29sZWFuIiwiSGVhZGVyIiwiYnJhbmRpbmciLCJwcm9wVHlwZXMiLCJSZWFjdCIsInJlZHVjZXIiLCJjb250YWN0cyIsImNvbnRhY3QiLCJDb250ZXh0UHJvdmlkZXIiLCJUZXh0SW5wdXQiLCJsYWJlbCIsInBsYWNlaG9sZGVyIiwib25DaGFuZ2UiLCJodG1sRm9yIiwiQWRkQ29udGFjdCIsInBob25lIiwiZXJyb3JzIiwibmV3Q29udGFjdCIsImJyb3dzZXJIaXN0b3J5Iiwib25TdWJtaXQiLCJvblN1Ym1pdEhhbmRsZXIiLCJidG5TdHlsZSIsInRyYW5zZm9ybSIsIm1hcmdpblRvcCIsIkFib3V0IiwiQ29udGFjdCIsInNob3dDb250ZW50Iiwib25TaG93Q2xpY2siLCJtYXJnaW5MZWZ0IiwiZm9udFNpemUiLCJjdXJzb3IiLCJvbkNsaWNrRGVsZXRlIiwiZmxvYXQiLCJwYWRkaW5nIiwibWFyZ2luUmlnaHQiLCJwcm90b1R5cGUiLCJDb250YWN0cyIsIm5ld0NvbnRhY3RzIiwiZGVsZXRlQ2xpY2tIYW5kbGVyIiwiZGVsZXRlQ29udGFjdCIsIkVkaXRDb250YWN0IiwidXBkQ29udGFjdCIsInJlcyIsInByb3RvIiwiY29udGFpbmVyU3R5bGUiLCJOb3RGb3VuZCIsImJhY2tncm91bmQiLCJtYXhXaWR0aCIsIkFwcCIsIlJlYWN0RE9NIiwiZ2V0RWxlbWVudEJ5SWQiXSwic291cmNlUm9vdCI6IiJ9